//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Diagnostics.CodeAnalysis;


namespace AppFirst
{
    public partial class App : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        private global::AppFirst.AppFirst_XamlTypeInfo.XamlMetaDataProvider __appProvider;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::AppFirst.AppFirst_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace AppFirst.AppFirst_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class XamlMetaDataProvider : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::AppFirst.AppFirst_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::AppFirst.AppFirst_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::AppFirst.AppFirst_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::Windows.Foundation.Metadata.DefaultOverload]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType) 
            { 
                if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByType(type);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType)
            {
                if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByName(typeName);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlMember xamlMember;
            lock (_xamlMembers)
            {
                if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
                {
                    return xamlMember;
                }
                xamlMember = CreateXamlMember(longMemberName);
                if (xamlMember != null)
                {
                    _xamlMembers.Add(longMemberName, xamlMember);
                }
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;
        
        private void InitTypeTables()
        {
            _typeNameTable = new string[195];
            _typeNameTable[0] = "Microsoft.UI.Xaml.Controls.XamlControlsResources";
            _typeNameTable[1] = "Microsoft.UI.Xaml.ResourceDictionary";
            _typeNameTable[2] = "Object";
            _typeNameTable[3] = "Boolean";
            _typeNameTable[4] = "Microsoft.UI.Xaml.Thickness";
            _typeNameTable[5] = "System.ValueType";
            _typeNameTable[6] = "Double";
            _typeNameTable[7] = "AppFirst.Views.Data1Page";
            _typeNameTable[8] = "Microsoft.UI.Xaml.Controls.Page";
            _typeNameTable[9] = "Microsoft.UI.Xaml.Controls.UserControl";
            _typeNameTable[10] = "AppFirst.Views.Data2Page";
            _typeNameTable[11] = "AppFirst.Views.Data3Page";
            _typeNameTable[12] = "AppFirst.Views.Dialogs.ContentDialogExample";
            _typeNameTable[13] = "Microsoft.UI.Xaml.Controls.ContentDialog";
            _typeNameTable[14] = "Microsoft.UI.Xaml.Controls.ContentControl";
            _typeNameTable[15] = "AppFirst.Views.Dialogs.LoginDialog";
            _typeNameTable[16] = "AppFirst.ViewModels.Dialogs.LoginDialogViewModel";
            _typeNameTable[17] = "CommunityToolkit.Mvvm.ComponentModel.ObservableObject";
            _typeNameTable[18] = "Microsoft.UI.Xaml.Controls.InfoBar";
            _typeNameTable[19] = "Microsoft.UI.Xaml.Controls.Control";
            _typeNameTable[20] = "Microsoft.UI.Xaml.Controls.InfoBarSeverity";
            _typeNameTable[21] = "System.Enum";
            _typeNameTable[22] = "Microsoft.UI.Xaml.Controls.Primitives.ButtonBase";
            _typeNameTable[23] = "System.Windows.Input.ICommand";
            _typeNameTable[24] = "Microsoft.UI.Xaml.Style";
            _typeNameTable[25] = "Microsoft.UI.Xaml.DataTemplate";
            _typeNameTable[26] = "Microsoft.UI.Xaml.Controls.IconSource";
            _typeNameTable[27] = "String";
            _typeNameTable[28] = "Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings";
            _typeNameTable[29] = "Microsoft.UI.Xaml.DependencyObject";
            _typeNameTable[30] = "WinUIEx.WindowEx";
            _typeNameTable[31] = "Microsoft.UI.Xaml.Window";
            _typeNameTable[32] = "Microsoft.UI.Windowing.AppWindow";
            _typeNameTable[33] = "WinUIEx.Icon";
            _typeNameTable[34] = "WinUIEx.WindowState";
            _typeNameTable[35] = "Microsoft.UI.Windowing.AppWindowPresenter";
            _typeNameTable[36] = "Microsoft.UI.Windowing.AppWindowPresenterKind";
            _typeNameTable[37] = "WinUIEx.SystemBackdrop";
            _typeNameTable[38] = "Microsoft.UI.Xaml.Media.MicaBackdrop";
            _typeNameTable[39] = "Microsoft.UI.Xaml.Media.SystemBackdrop";
            _typeNameTable[40] = "Microsoft.UI.Composition.SystemBackdrops.MicaKind";
            _typeNameTable[41] = "Microsoft.UI.Xaml.Controls.ProgressBar";
            _typeNameTable[42] = "Microsoft.UI.Xaml.Controls.Primitives.RangeBase";
            _typeNameTable[43] = "Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings";
            _typeNameTable[44] = "AppFirst.Views.Dialogs.ProgressDialogEx";
            _typeNameTable[45] = "AppFirst.Views.Dialogs.SqlConnectionStringDialog";
            _typeNameTable[46] = "AppFirst.ViewModels.Dialogs.SqlConnectionStringDialogViewModel";
            _typeNameTable[47] = "AppFirst.Views.Dialogs.UserDialog";
            _typeNameTable[48] = "AppFirst.Models.User";
            _typeNameTable[49] = "AppFirst.ViewModels.Dialogs.UserDialogViewModel";
            _typeNameTable[50] = "WinUICommunity.AllLandingPage";
            _typeNameTable[51] = "WinUICommunity.ItemsPageBase";
            _typeNameTable[52] = "WinUICommunity.IJsonNavigationViewService";
            _typeNameTable[53] = "System.Collections.Generic.IEnumerable`1<WinUICommunity.DataItem>";
            _typeNameTable[54] = "Microsoft.UI.Xaml.Media.ImageSource";
            _typeNameTable[55] = "Microsoft.UI.Xaml.GridLength";
            _typeNameTable[56] = "Microsoft.UI.Xaml.Media.Stretch";
            _typeNameTable[57] = "Microsoft.UI.Xaml.VerticalAlignment";
            _typeNameTable[58] = "Microsoft.UI.Xaml.CornerRadius";
            _typeNameTable[59] = "AppFirst.Views.HomeLandingPage";
            _typeNameTable[60] = "WinUICommunity.TitleBar";
            _typeNameTable[61] = "WinUICommunity.TitleBarTemplateSettings";
            _typeNameTable[62] = "Microsoft.UI.Xaml.Controls.NavigationView";
            _typeNameTable[63] = "Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible";
            _typeNameTable[64] = "Microsoft.UI.Xaml.Controls.AutoSuggestBox";
            _typeNameTable[65] = "Microsoft.UI.Xaml.UIElement";
            _typeNameTable[66] = "Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode";
            _typeNameTable[67] = "System.Collections.Generic.IList`1<Object>";
            _typeNameTable[68] = "Microsoft.UI.Xaml.Controls.StyleSelector";
            _typeNameTable[69] = "Microsoft.UI.Xaml.Controls.DataTemplateSelector";
            _typeNameTable[70] = "Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode";
            _typeNameTable[71] = "Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode";
            _typeNameTable[72] = "Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus";
            _typeNameTable[73] = "Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled";
            _typeNameTable[74] = "Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings";
            _typeNameTable[75] = "WinUICommunity.BreadcrumbNavigator";
            _typeNameTable[76] = "Microsoft.UI.Xaml.Controls.BreadcrumbBar";
            _typeNameTable[77] = "System.Collections.ObjectModel.ObservableCollection`1<WinUICommunity.NavigationBreadcrumb>";
            _typeNameTable[78] = "System.Collections.ObjectModel.Collection`1<WinUICommunity.NavigationBreadcrumb>";
            _typeNameTable[79] = "WinUICommunity.NavigationBreadcrumb";
            _typeNameTable[80] = "System.Type";
            _typeNameTable[81] = "System.Reflection.MemberInfo";
            _typeNameTable[82] = "Microsoft.UI.Xaml.Controls.Frame";
            _typeNameTable[83] = "System.Collections.Generic.Dictionary`2<System.Type, WinUICommunity.BreadcrumbPageConfig>";
            _typeNameTable[84] = "WinUICommunity.BreadcrumbPageConfig";
            _typeNameTable[85] = "System.Reflection.Assembly";
            _typeNameTable[86] = "System.Reflection.TypeAttributes";
            _typeNameTable[87] = "System.Reflection.MethodBase";
            _typeNameTable[88] = "System.Reflection.GenericParameterAttributes";
            _typeNameTable[89] = "Int32";
            _typeNameTable[90] = "System.Type[]";
            _typeNameTable[91] = "System.Array";
            _typeNameTable[92] = "Guid";
            _typeNameTable[93] = "System.Reflection.MemberTypes";
            _typeNameTable[94] = "System.Reflection.Module";
            _typeNameTable[95] = "System.Runtime.InteropServices.StructLayoutAttribute";
            _typeNameTable[96] = "System.Attribute";
            _typeNameTable[97] = "System.RuntimeTypeHandle";
            _typeNameTable[98] = "System.Reflection.ConstructorInfo";
            _typeNameTable[99] = "System.Collections.Generic.IEnumerable`1<System.Reflection.CustomAttributeData>";
            _typeNameTable[100] = "WinUICommunity.BreadcrumbNavigatorHeaderVisibilityOptions";
            _typeNameTable[101] = "WinUICommunity.BitmapIconSourceExtension";
            _typeNameTable[102] = "Microsoft.UI.Xaml.Markup.MarkupExtension";
            _typeNameTable[103] = "System.Uri";
            _typeNameTable[104] = "WinUICommunity.FontIconExtension";
            _typeNameTable[105] = "WinUICommunity.TextIconExtension";
            _typeNameTable[106] = "WinUICommunity.GlyphCode";
            _typeNameTable[107] = "WinUICommunity.GlyphName";
            _typeNameTable[108] = "Microsoft.UI.Xaml.Media.FontFamily";
            _typeNameTable[109] = "Windows.UI.Text.FontWeight";
            _typeNameTable[110] = "Windows.UI.Text.FontStyle";
            _typeNameTable[111] = "Microsoft.UI.Xaml.Media.Brush";
            _typeNameTable[112] = "AppFirst.Views.MainPage";
            _typeNameTable[113] = "AppFirst.ViewModels.MainViewModel";
            _typeNameTable[114] = "CommunityToolkit.WinUI.UI.Controls.DataGrid";
            _typeNameTable[115] = "CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility";
            _typeNameTable[116] = "System.Collections.IEnumerable";
            _typeNameTable[117] = "System.Collections.ObjectModel.ObservableCollection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>";
            _typeNameTable[118] = "System.Collections.ObjectModel.Collection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>";
            _typeNameTable[119] = "CommunityToolkit.WinUI.UI.Controls.DataGridColumn";
            _typeNameTable[120] = "Microsoft.UI.Xaml.Data.Binding";
            _typeNameTable[121] = "System.Nullable`1<CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>";
            _typeNameTable[122] = "CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection";
            _typeNameTable[123] = "Microsoft.UI.Xaml.Visibility";
            _typeNameTable[124] = "CommunityToolkit.WinUI.UI.Controls.DataGridLength";
            _typeNameTable[125] = "CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode";
            _typeNameTable[126] = "CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility";
            _typeNameTable[127] = "Microsoft.UI.Xaml.Controls.ScrollBarVisibility";
            _typeNameTable[128] = "Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger";
            _typeNameTable[129] = "CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode";
            _typeNameTable[130] = "CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode";
            _typeNameTable[131] = "System.Collections.ObjectModel.ObservableCollection`1<Microsoft.UI.Xaml.Style>";
            _typeNameTable[132] = "System.Collections.ObjectModel.Collection`1<Microsoft.UI.Xaml.Style>";
            _typeNameTable[133] = "System.Collections.IList";
            _typeNameTable[134] = "Microsoft.UI.Xaml.Controls.ProgressRing";
            _typeNameTable[135] = "Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings";
            _typeNameTable[136] = "CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn";
            _typeNameTable[137] = "CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn";
            _typeNameTable[138] = "AppFirst.Views.Pages.LoadSqlDataGridPage";
            _typeNameTable[139] = "AppFirst.ViewModels.Pages.LoadSqlDataGridViewModel";
            _typeNameTable[140] = "CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient";
            _typeNameTable[141] = "AppFirst.Views.Pages.LoadSqlDataPage";
            _typeNameTable[142] = "AppFirst.ViewModels.Pages.LoadSqlDataPageViewModel";
            _typeNameTable[143] = "Microsoft.UI.Xaml.Controls.MenuBar";
            _typeNameTable[144] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.MenuBarItem>";
            _typeNameTable[145] = "Microsoft.UI.Xaml.Controls.MenuBarItem";
            _typeNameTable[146] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase>";
            _typeNameTable[147] = "Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase";
            _typeNameTable[148] = "AppFirst.Views.Pages.LoadSqlDataSqlitePage";
            _typeNameTable[149] = "AppFirst.ViewModels.Pages.LoadSqlDataSqliteViewModel";
            _typeNameTable[150] = "AppFirst.Views.Pages.SamplePage";
            _typeNameTable[151] = "AppFirst.ViewModels.Pages.SamplePageViewModel";
            _typeNameTable[152] = "AppFirst.Views.Sample1Page";
            _typeNameTable[153] = "AppFirst.ViewModels.Sample1PageViewModel";
            _typeNameTable[154] = "Microsoft.UI.Xaml.Controls.ScrollView";
            _typeNameTable[155] = "Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility";
            _typeNameTable[156] = "Microsoft.UI.Xaml.Controls.ScrollingScrollMode";
            _typeNameTable[157] = "Microsoft.UI.Xaml.Controls.ScrollingContentOrientation";
            _typeNameTable[158] = "Microsoft.UI.Composition.CompositionPropertySet";
            _typeNameTable[159] = "Microsoft.UI.Composition.CompositionObject";
            _typeNameTable[160] = "Microsoft.UI.Xaml.Controls.ScrollingChainMode";
            _typeNameTable[161] = "Microsoft.UI.Xaml.Controls.ScrollingRailMode";
            _typeNameTable[162] = "Microsoft.UI.Xaml.Controls.ScrollingInputKinds";
            _typeNameTable[163] = "Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter";
            _typeNameTable[164] = "Microsoft.UI.Xaml.FrameworkElement";
            _typeNameTable[165] = "Microsoft.UI.Xaml.Controls.ScrollingInteractionState";
            _typeNameTable[166] = "Single";
            _typeNameTable[167] = "Microsoft.UI.Xaml.Controls.ScrollingZoomMode";
            _typeNameTable[168] = "WinUICommunity.PanelAttach";
            _typeNameTable[169] = "WinUICommunity.PanelTransitionCollection";
            _typeNameTable[170] = "WinUICommunity.SettingsNavigationAttach";
            _typeNameTable[171] = "Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo";
            _typeNameTable[172] = "WinUICommunity.SettingsCard";
            _typeNameTable[173] = "Microsoft.UI.Xaml.Controls.IconElement";
            _typeNameTable[174] = "WinUICommunity.ContentAlignment";
            _typeNameTable[175] = "WinUICommunity.NavigationHelperEx";
            _typeNameTable[176] = "Microsoft.UI.Xaml.Controls.NavigationViewItem";
            _typeNameTable[177] = "Microsoft.UI.Xaml.Controls.NavigationViewItemBase";
            _typeNameTable[178] = "Microsoft.UI.Xaml.Controls.InfoBadge";
            _typeNameTable[179] = "AppFirst.Views.GeneralSettingPage";
            _typeNameTable[180] = "AppFirst.ViewModels.GeneralSettingViewModel";
            _typeNameTable[181] = "AppFirst.Views.ThemeSettingPage";
            _typeNameTable[182] = "AppFirst.Views.AppUpdateSettingPage";
            _typeNameTable[183] = "AppFirst.ViewModels.AppUpdateSettingViewModel";
            _typeNameTable[184] = "AppFirst.Views.AboutUsSettingPage";
            _typeNameTable[185] = "AppFirst.ViewModels.AboutUsSettingViewModel";
            _typeNameTable[186] = "WinUICommunity.BitmapIconExtension";
            _typeNameTable[187] = "AppFirst.Views.SettingsPage";
            _typeNameTable[188] = "WinUICommunity.SettingsExpander";
            _typeNameTable[189] = "WinUICommunity.ThemeServiceAttach";
            _typeNameTable[190] = "WinUICommunity.IThemeService";
            _typeNameTable[191] = "WinUIEx.SplashScreen";
            _typeNameTable[192] = "AppFirst.Views.SplashScreen";
            _typeNameTable[193] = "Microsoft.UI.Xaml.Controls.TreeViewNode";
            _typeNameTable[194] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>";

            _typeTable = new global::System.Type[195];
            _typeTable[0] = typeof(global::Microsoft.UI.Xaml.Controls.XamlControlsResources);
            _typeTable[1] = typeof(global::Microsoft.UI.Xaml.ResourceDictionary);
            _typeTable[2] = typeof(global::System.Object);
            _typeTable[3] = typeof(global::System.Boolean);
            _typeTable[4] = typeof(global::Microsoft.UI.Xaml.Thickness);
            _typeTable[5] = typeof(global::System.ValueType);
            _typeTable[6] = typeof(global::System.Double);
            _typeTable[7] = typeof(global::AppFirst.Views.Data1Page);
            _typeTable[8] = typeof(global::Microsoft.UI.Xaml.Controls.Page);
            _typeTable[9] = typeof(global::Microsoft.UI.Xaml.Controls.UserControl);
            _typeTable[10] = typeof(global::AppFirst.Views.Data2Page);
            _typeTable[11] = typeof(global::AppFirst.Views.Data3Page);
            _typeTable[12] = typeof(global::AppFirst.Views.Dialogs.ContentDialogExample);
            _typeTable[13] = typeof(global::Microsoft.UI.Xaml.Controls.ContentDialog);
            _typeTable[14] = typeof(global::Microsoft.UI.Xaml.Controls.ContentControl);
            _typeTable[15] = typeof(global::AppFirst.Views.Dialogs.LoginDialog);
            _typeTable[16] = typeof(global::AppFirst.ViewModels.Dialogs.LoginDialogViewModel);
            _typeTable[17] = typeof(global::CommunityToolkit.Mvvm.ComponentModel.ObservableObject);
            _typeTable[18] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBar);
            _typeTable[19] = typeof(global::Microsoft.UI.Xaml.Controls.Control);
            _typeTable[20] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBarSeverity);
            _typeTable[21] = typeof(global::System.Enum);
            _typeTable[22] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase);
            _typeTable[23] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[24] = typeof(global::Microsoft.UI.Xaml.Style);
            _typeTable[25] = typeof(global::Microsoft.UI.Xaml.DataTemplate);
            _typeTable[26] = typeof(global::Microsoft.UI.Xaml.Controls.IconSource);
            _typeTable[27] = typeof(global::System.String);
            _typeTable[28] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings);
            _typeTable[29] = typeof(global::Microsoft.UI.Xaml.DependencyObject);
            _typeTable[30] = typeof(global::WinUIEx.WindowEx);
            _typeTable[31] = typeof(global::Microsoft.UI.Xaml.Window);
            _typeTable[32] = typeof(global::Microsoft.UI.Windowing.AppWindow);
            _typeTable[33] = typeof(global::WinUIEx.Icon);
            _typeTable[34] = typeof(global::WinUIEx.WindowState);
            _typeTable[35] = typeof(global::Microsoft.UI.Windowing.AppWindowPresenter);
            _typeTable[36] = typeof(global::Microsoft.UI.Windowing.AppWindowPresenterKind);
#pragma warning disable 0618  //   Warning on Deprecated usage
            _typeTable[37] = typeof(global::WinUIEx.SystemBackdrop);
#pragma warning restore 0618
            _typeTable[38] = typeof(global::Microsoft.UI.Xaml.Media.MicaBackdrop);
            _typeTable[39] = typeof(global::Microsoft.UI.Xaml.Media.SystemBackdrop);
            _typeTable[40] = typeof(global::Microsoft.UI.Composition.SystemBackdrops.MicaKind);
            _typeTable[41] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressBar);
            _typeTable[42] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase);
            _typeTable[43] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings);
            _typeTable[44] = typeof(global::AppFirst.Views.Dialogs.ProgressDialogEx);
            _typeTable[45] = typeof(global::AppFirst.Views.Dialogs.SqlConnectionStringDialog);
            _typeTable[46] = typeof(global::AppFirst.ViewModels.Dialogs.SqlConnectionStringDialogViewModel);
            _typeTable[47] = typeof(global::AppFirst.Views.Dialogs.UserDialog);
            _typeTable[48] = typeof(global::AppFirst.Models.User);
            _typeTable[49] = typeof(global::AppFirst.ViewModels.Dialogs.UserDialogViewModel);
            _typeTable[50] = typeof(global::WinUICommunity.AllLandingPage);
            _typeTable[51] = typeof(global::WinUICommunity.ItemsPageBase);
            _typeTable[52] = typeof(global::WinUICommunity.IJsonNavigationViewService);
            _typeTable[53] = typeof(global::System.Collections.Generic.IEnumerable<global::WinUICommunity.DataItem>);
            _typeTable[54] = typeof(global::Microsoft.UI.Xaml.Media.ImageSource);
            _typeTable[55] = typeof(global::Microsoft.UI.Xaml.GridLength);
            _typeTable[56] = typeof(global::Microsoft.UI.Xaml.Media.Stretch);
            _typeTable[57] = typeof(global::Microsoft.UI.Xaml.VerticalAlignment);
            _typeTable[58] = typeof(global::Microsoft.UI.Xaml.CornerRadius);
            _typeTable[59] = typeof(global::AppFirst.Views.HomeLandingPage);
#pragma warning disable 0618  //   Warning on Deprecated usage
            _typeTable[60] = typeof(global::WinUICommunity.TitleBar);
#pragma warning restore 0618
            _typeTable[61] = typeof(global::WinUICommunity.TitleBarTemplateSettings);
            _typeTable[62] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationView);
            _typeTable[63] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible);
            _typeTable[64] = typeof(global::Microsoft.UI.Xaml.Controls.AutoSuggestBox);
            _typeTable[65] = typeof(global::Microsoft.UI.Xaml.UIElement);
            _typeTable[66] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode);
            _typeTable[67] = typeof(global::System.Collections.Generic.IList<global::System.Object>);
            _typeTable[68] = typeof(global::Microsoft.UI.Xaml.Controls.StyleSelector);
            _typeTable[69] = typeof(global::Microsoft.UI.Xaml.Controls.DataTemplateSelector);
            _typeTable[70] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode);
            _typeTable[71] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode);
            _typeTable[72] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus);
            _typeTable[73] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled);
            _typeTable[74] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings);
            _typeTable[75] = typeof(global::WinUICommunity.BreadcrumbNavigator);
            _typeTable[76] = typeof(global::Microsoft.UI.Xaml.Controls.BreadcrumbBar);
            _typeTable[77] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::WinUICommunity.NavigationBreadcrumb>);
            _typeTable[78] = typeof(global::System.Collections.ObjectModel.Collection<global::WinUICommunity.NavigationBreadcrumb>);
            _typeTable[79] = typeof(global::WinUICommunity.NavigationBreadcrumb);
            _typeTable[80] = typeof(global::System.Type);
            _typeTable[81] = typeof(global::System.Reflection.MemberInfo);
            _typeTable[82] = typeof(global::Microsoft.UI.Xaml.Controls.Frame);
            _typeTable[83] = typeof(global::System.Collections.Generic.Dictionary<global::System.Type, global::WinUICommunity.BreadcrumbPageConfig>);
            _typeTable[84] = typeof(global::WinUICommunity.BreadcrumbPageConfig);
            _typeTable[85] = typeof(global::System.Reflection.Assembly);
            _typeTable[86] = typeof(global::System.Reflection.TypeAttributes);
            _typeTable[87] = typeof(global::System.Reflection.MethodBase);
            _typeTable[88] = typeof(global::System.Reflection.GenericParameterAttributes);
            _typeTable[89] = typeof(global::System.Int32);
            _typeTable[90] = typeof(global::System.Type[]);
            _typeTable[91] = typeof(global::System.Array);
            _typeTable[92] = typeof(global::System.Guid);
            _typeTable[93] = typeof(global::System.Reflection.MemberTypes);
            _typeTable[94] = typeof(global::System.Reflection.Module);
            _typeTable[95] = typeof(global::System.Runtime.InteropServices.StructLayoutAttribute);
            _typeTable[96] = typeof(global::System.Attribute);
            _typeTable[97] = typeof(global::System.RuntimeTypeHandle);
            _typeTable[98] = typeof(global::System.Reflection.ConstructorInfo);
            _typeTable[99] = typeof(global::System.Collections.Generic.IEnumerable<global::System.Reflection.CustomAttributeData>);
            _typeTable[100] = typeof(global::WinUICommunity.BreadcrumbNavigatorHeaderVisibilityOptions);
            _typeTable[101] = typeof(global::WinUICommunity.BitmapIconSourceExtension);
            _typeTable[102] = typeof(global::Microsoft.UI.Xaml.Markup.MarkupExtension);
            _typeTable[103] = typeof(global::System.Uri);
            _typeTable[104] = typeof(global::WinUICommunity.FontIconExtension);
            _typeTable[105] = typeof(global::WinUICommunity.TextIconExtension);
            _typeTable[106] = typeof(global::WinUICommunity.GlyphCode);
            _typeTable[107] = typeof(global::WinUICommunity.GlyphName);
            _typeTable[108] = typeof(global::Microsoft.UI.Xaml.Media.FontFamily);
            _typeTable[109] = typeof(global::Windows.UI.Text.FontWeight);
            _typeTable[110] = typeof(global::Windows.UI.Text.FontStyle);
            _typeTable[111] = typeof(global::Microsoft.UI.Xaml.Media.Brush);
            _typeTable[112] = typeof(global::AppFirst.Views.MainPage);
            _typeTable[113] = typeof(global::AppFirst.ViewModels.MainViewModel);
            _typeTable[114] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGrid);
            _typeTable[115] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility);
            _typeTable[116] = typeof(global::System.Collections.IEnumerable);
            _typeTable[117] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>);
            _typeTable[118] = typeof(global::System.Collections.ObjectModel.Collection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>);
            _typeTable[119] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn);
            _typeTable[120] = typeof(global::Microsoft.UI.Xaml.Data.Binding);
            _typeTable[121] = typeof(global::System.Nullable<global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>);
            _typeTable[122] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection);
            _typeTable[123] = typeof(global::Microsoft.UI.Xaml.Visibility);
            _typeTable[124] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridLength);
            _typeTable[125] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode);
            _typeTable[126] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility);
            _typeTable[127] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollBarVisibility);
            _typeTable[128] = typeof(global::Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger);
            _typeTable[129] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode);
            _typeTable[130] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode);
            _typeTable[131] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Microsoft.UI.Xaml.Style>);
            _typeTable[132] = typeof(global::System.Collections.ObjectModel.Collection<global::Microsoft.UI.Xaml.Style>);
            _typeTable[133] = typeof(global::System.Collections.IList);
            _typeTable[134] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressRing);
            _typeTable[135] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings);
            _typeTable[136] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn);
            _typeTable[137] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn);
            _typeTable[138] = typeof(global::AppFirst.Views.Pages.LoadSqlDataGridPage);
            _typeTable[139] = typeof(global::AppFirst.ViewModels.Pages.LoadSqlDataGridViewModel);
            _typeTable[140] = typeof(global::CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient);
            _typeTable[141] = typeof(global::AppFirst.Views.Pages.LoadSqlDataPage);
            _typeTable[142] = typeof(global::AppFirst.ViewModels.Pages.LoadSqlDataPageViewModel);
            _typeTable[143] = typeof(global::Microsoft.UI.Xaml.Controls.MenuBar);
            _typeTable[144] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.MenuBarItem>);
            _typeTable[145] = typeof(global::Microsoft.UI.Xaml.Controls.MenuBarItem);
            _typeTable[146] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase>);
            _typeTable[147] = typeof(global::Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase);
            _typeTable[148] = typeof(global::AppFirst.Views.Pages.LoadSqlDataSqlitePage);
            _typeTable[149] = typeof(global::AppFirst.ViewModels.Pages.LoadSqlDataSqliteViewModel);
            _typeTable[150] = typeof(global::AppFirst.Views.Pages.SamplePage);
            _typeTable[151] = typeof(global::AppFirst.ViewModels.Pages.SamplePageViewModel);
            _typeTable[152] = typeof(global::AppFirst.Views.Sample1Page);
            _typeTable[153] = typeof(global::AppFirst.ViewModels.Sample1PageViewModel);
            _typeTable[154] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollView);
            _typeTable[155] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility);
            _typeTable[156] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode);
            _typeTable[157] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation);
            _typeTable[158] = typeof(global::Microsoft.UI.Composition.CompositionPropertySet);
            _typeTable[159] = typeof(global::Microsoft.UI.Composition.CompositionObject);
            _typeTable[160] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingChainMode);
            _typeTable[161] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingRailMode);
            _typeTable[162] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds);
            _typeTable[163] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter);
            _typeTable[164] = typeof(global::Microsoft.UI.Xaml.FrameworkElement);
            _typeTable[165] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState);
            _typeTable[166] = typeof(global::System.Single);
            _typeTable[167] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode);
            _typeTable[168] = typeof(global::WinUICommunity.PanelAttach);
            _typeTable[169] = typeof(global::WinUICommunity.PanelTransitionCollection);
            _typeTable[170] = typeof(global::WinUICommunity.SettingsNavigationAttach);
            _typeTable[171] = typeof(global::Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo);
            _typeTable[172] = typeof(global::WinUICommunity.SettingsCard);
            _typeTable[173] = typeof(global::Microsoft.UI.Xaml.Controls.IconElement);
            _typeTable[174] = typeof(global::WinUICommunity.ContentAlignment);
            _typeTable[175] = typeof(global::WinUICommunity.NavigationHelperEx);
            _typeTable[176] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItem);
            _typeTable[177] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase);
            _typeTable[178] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBadge);
            _typeTable[179] = typeof(global::AppFirst.Views.GeneralSettingPage);
            _typeTable[180] = typeof(global::AppFirst.ViewModels.GeneralSettingViewModel);
            _typeTable[181] = typeof(global::AppFirst.Views.ThemeSettingPage);
            _typeTable[182] = typeof(global::AppFirst.Views.AppUpdateSettingPage);
            _typeTable[183] = typeof(global::AppFirst.ViewModels.AppUpdateSettingViewModel);
            _typeTable[184] = typeof(global::AppFirst.Views.AboutUsSettingPage);
            _typeTable[185] = typeof(global::AppFirst.ViewModels.AboutUsSettingViewModel);
            _typeTable[186] = typeof(global::WinUICommunity.BitmapIconExtension);
            _typeTable[187] = typeof(global::AppFirst.Views.SettingsPage);
            _typeTable[188] = typeof(global::WinUICommunity.SettingsExpander);
            _typeTable[189] = typeof(global::WinUICommunity.ThemeServiceAttach);
            _typeTable[190] = typeof(global::WinUICommunity.IThemeService);
            _typeTable[191] = typeof(global::WinUIEx.SplashScreen);
            _typeTable[192] = typeof(global::AppFirst.Views.SplashScreen);
            _typeTable[193] = typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode);
            _typeTable[194] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_XamlControlsResources() { return new global::Microsoft.UI.Xaml.Controls.XamlControlsResources(); }
        private object Activate_7_Data1Page() { return new global::AppFirst.Views.Data1Page(); }
        private object Activate_10_Data2Page() { return new global::AppFirst.Views.Data2Page(); }
        private object Activate_11_Data3Page() { return new global::AppFirst.Views.Data3Page(); }
        private object Activate_12_ContentDialogExample() { return new global::AppFirst.Views.Dialogs.ContentDialogExample(); }
        private object Activate_16_LoginDialogViewModel() { return new global::AppFirst.ViewModels.Dialogs.LoginDialogViewModel(); }
        private object Activate_18_InfoBar() { return new global::Microsoft.UI.Xaml.Controls.InfoBar(); }
        private object Activate_28_InfoBarTemplateSettings() { return new global::Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings(); }
        private object Activate_30_WindowEx() { return new global::WinUIEx.WindowEx(); }
        private object Activate_38_MicaBackdrop() { return new global::Microsoft.UI.Xaml.Media.MicaBackdrop(); }
        private object Activate_41_ProgressBar() { return new global::Microsoft.UI.Xaml.Controls.ProgressBar(); }
        private object Activate_44_ProgressDialogEx() { return new global::AppFirst.Views.Dialogs.ProgressDialogEx(); }
        private object Activate_48_User() { return new global::AppFirst.Models.User(); }
        private object Activate_49_UserDialogViewModel() { return new global::AppFirst.ViewModels.Dialogs.UserDialogViewModel(); }
        private object Activate_50_AllLandingPage() { return new global::WinUICommunity.AllLandingPage(); }
        private object Activate_59_HomeLandingPage() { return new global::AppFirst.Views.HomeLandingPage(); }
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object Activate_60_TitleBar() { return new global::WinUICommunity.TitleBar(); }
#pragma warning restore 0618
        private object Activate_61_TitleBarTemplateSettings() { return new global::WinUICommunity.TitleBarTemplateSettings(); }
        private object Activate_62_NavigationView() { return new global::Microsoft.UI.Xaml.Controls.NavigationView(); }
        private object Activate_74_NavigationViewTemplateSettings() { return new global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings(); }
        private object Activate_75_BreadcrumbNavigator() { return new global::WinUICommunity.BreadcrumbNavigator(); }
        private object Activate_76_BreadcrumbBar() { return new global::Microsoft.UI.Xaml.Controls.BreadcrumbBar(); }
        private object Activate_77_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::WinUICommunity.NavigationBreadcrumb>(); }
        private object Activate_78_Collection() { return new global::System.Collections.ObjectModel.Collection<global::WinUICommunity.NavigationBreadcrumb>(); }
        private object Activate_83_Dictionary() { return new global::System.Collections.Generic.Dictionary<global::System.Type, global::WinUICommunity.BreadcrumbPageConfig>(); }
        private object Activate_84_BreadcrumbPageConfig() { return new global::WinUICommunity.BreadcrumbPageConfig(); }
        private object Activate_101_BitmapIconSourceExtension() { return new global::WinUICommunity.BitmapIconSourceExtension(); }
        private object Activate_104_FontIconExtension() { return new global::WinUICommunity.FontIconExtension(); }
        private object Activate_112_MainPage() { return new global::AppFirst.Views.MainPage(); }
        private object Activate_113_MainViewModel() { return new global::AppFirst.ViewModels.MainViewModel(); }
        private object Activate_114_DataGrid() { return new global::CommunityToolkit.WinUI.UI.Controls.DataGrid(); }
        private object Activate_117_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>(); }
        private object Activate_118_Collection() { return new global::System.Collections.ObjectModel.Collection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>(); }
        private object Activate_131_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Microsoft.UI.Xaml.Style>(); }
        private object Activate_132_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Microsoft.UI.Xaml.Style>(); }
        private object Activate_134_ProgressRing() { return new global::Microsoft.UI.Xaml.Controls.ProgressRing(); }
        private object Activate_136_DataGridTextColumn() { return new global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn(); }
        private object Activate_138_LoadSqlDataGridPage() { return new global::AppFirst.Views.Pages.LoadSqlDataGridPage(); }
        private object Activate_141_LoadSqlDataPage() { return new global::AppFirst.Views.Pages.LoadSqlDataPage(); }
        private object Activate_142_LoadSqlDataPageViewModel() { return new global::AppFirst.ViewModels.Pages.LoadSqlDataPageViewModel(); }
        private object Activate_143_MenuBar() { return new global::Microsoft.UI.Xaml.Controls.MenuBar(); }
        private object Activate_145_MenuBarItem() { return new global::Microsoft.UI.Xaml.Controls.MenuBarItem(); }
        private object Activate_148_LoadSqlDataSqlitePage() { return new global::AppFirst.Views.Pages.LoadSqlDataSqlitePage(); }
        private object Activate_149_LoadSqlDataSqliteViewModel() { return new global::AppFirst.ViewModels.Pages.LoadSqlDataSqliteViewModel(); }
        private object Activate_150_SamplePage() { return new global::AppFirst.Views.Pages.SamplePage(); }
        private object Activate_151_SamplePageViewModel() { return new global::AppFirst.ViewModels.Pages.SamplePageViewModel(); }
        private object Activate_152_Sample1Page() { return new global::AppFirst.Views.Sample1Page(); }
        private object Activate_153_Sample1PageViewModel() { return new global::AppFirst.ViewModels.Sample1PageViewModel(); }
        private object Activate_154_ScrollView() { return new global::Microsoft.UI.Xaml.Controls.ScrollView(); }
        private object Activate_163_ScrollPresenter() { return new global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter(); }
        private object Activate_168_PanelAttach() { return new global::WinUICommunity.PanelAttach(); }
        private object Activate_170_SettingsNavigationAttach() { return new global::WinUICommunity.SettingsNavigationAttach(); }
        private object Activate_172_SettingsCard() { return new global::WinUICommunity.SettingsCard(); }
        private object Activate_175_NavigationHelperEx() { return new global::WinUICommunity.NavigationHelperEx(); }
        private object Activate_176_NavigationViewItem() { return new global::Microsoft.UI.Xaml.Controls.NavigationViewItem(); }
        private object Activate_178_InfoBadge() { return new global::Microsoft.UI.Xaml.Controls.InfoBadge(); }
        private object Activate_179_GeneralSettingPage() { return new global::AppFirst.Views.GeneralSettingPage(); }
        private object Activate_180_GeneralSettingViewModel() { return new global::AppFirst.ViewModels.GeneralSettingViewModel(); }
        private object Activate_181_ThemeSettingPage() { return new global::AppFirst.Views.ThemeSettingPage(); }
        private object Activate_182_AppUpdateSettingPage() { return new global::AppFirst.Views.AppUpdateSettingPage(); }
        private object Activate_183_AppUpdateSettingViewModel() { return new global::AppFirst.ViewModels.AppUpdateSettingViewModel(); }
        private object Activate_184_AboutUsSettingPage() { return new global::AppFirst.Views.AboutUsSettingPage(); }
        private object Activate_185_AboutUsSettingViewModel() { return new global::AppFirst.ViewModels.AboutUsSettingViewModel(); }
        private object Activate_186_BitmapIconExtension() { return new global::WinUICommunity.BitmapIconExtension(); }
        private object Activate_187_SettingsPage() { return new global::AppFirst.Views.SettingsPage(); }
        private object Activate_188_SettingsExpander() { return new global::WinUICommunity.SettingsExpander(); }
        private object Activate_193_TreeViewNode() { return new global::Microsoft.UI.Xaml.Controls.TreeViewNode(); }
        private void StaticInitializer_0_XamlControlsResources() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.XamlControlsResources).TypeHandle);
        private void StaticInitializer_4_Thickness() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Thickness).TypeHandle);
        private void StaticInitializer_5_ValueType() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.ValueType).TypeHandle);
        private void StaticInitializer_7_Data1Page() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.Views.Data1Page).TypeHandle);
        private void StaticInitializer_10_Data2Page() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.Views.Data2Page).TypeHandle);
        private void StaticInitializer_11_Data3Page() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.Views.Data3Page).TypeHandle);
        private void StaticInitializer_12_ContentDialogExample() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.Views.Dialogs.ContentDialogExample).TypeHandle);
        private void StaticInitializer_15_LoginDialog() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.Views.Dialogs.LoginDialog).TypeHandle);
        private void StaticInitializer_16_LoginDialogViewModel() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.ViewModels.Dialogs.LoginDialogViewModel).TypeHandle);
        private void StaticInitializer_17_ObservableObject() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.Mvvm.ComponentModel.ObservableObject).TypeHandle);
        private void StaticInitializer_18_InfoBar() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.InfoBar).TypeHandle);
        private void StaticInitializer_20_InfoBarSeverity() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.InfoBarSeverity).TypeHandle);
        private void StaticInitializer_21_Enum() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Enum).TypeHandle);
        private void StaticInitializer_23_ICommand() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Windows.Input.ICommand).TypeHandle);
        private void StaticInitializer_28_InfoBarTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings).TypeHandle);
        private void StaticInitializer_30_WindowEx() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUIEx.WindowEx).TypeHandle);
        private void StaticInitializer_32_AppWindow() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Windowing.AppWindow).TypeHandle);
        private void StaticInitializer_33_Icon() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUIEx.Icon).TypeHandle);
        private void StaticInitializer_34_WindowState() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUIEx.WindowState).TypeHandle);
        private void StaticInitializer_35_AppWindowPresenter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Windowing.AppWindowPresenter).TypeHandle);
        private void StaticInitializer_36_AppWindowPresenterKind() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Windowing.AppWindowPresenterKind).TypeHandle);
#pragma warning disable 0618  //   Warning on Deprecated usage
        private void StaticInitializer_37_SystemBackdrop() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUIEx.SystemBackdrop).TypeHandle);
#pragma warning restore 0618
        private void StaticInitializer_38_MicaBackdrop() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Media.MicaBackdrop).TypeHandle);
        private void StaticInitializer_40_MicaKind() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Composition.SystemBackdrops.MicaKind).TypeHandle);
        private void StaticInitializer_41_ProgressBar() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ProgressBar).TypeHandle);
        private void StaticInitializer_43_ProgressBarTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings).TypeHandle);
        private void StaticInitializer_44_ProgressDialogEx() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.Views.Dialogs.ProgressDialogEx).TypeHandle);
        private void StaticInitializer_45_SqlConnectionStringDialog() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.Views.Dialogs.SqlConnectionStringDialog).TypeHandle);
        private void StaticInitializer_46_SqlConnectionStringDialogViewModel() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.ViewModels.Dialogs.SqlConnectionStringDialogViewModel).TypeHandle);
        private void StaticInitializer_47_UserDialog() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.Views.Dialogs.UserDialog).TypeHandle);
        private void StaticInitializer_48_User() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.Models.User).TypeHandle);
        private void StaticInitializer_49_UserDialogViewModel() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.ViewModels.Dialogs.UserDialogViewModel).TypeHandle);
        private void StaticInitializer_50_AllLandingPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.AllLandingPage).TypeHandle);
        private void StaticInitializer_51_ItemsPageBase() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.ItemsPageBase).TypeHandle);
        private void StaticInitializer_52_IJsonNavigationViewService() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.IJsonNavigationViewService).TypeHandle);
        private void StaticInitializer_53_IEnumerable() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IEnumerable<global::WinUICommunity.DataItem>).TypeHandle);
        private void StaticInitializer_55_GridLength() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.GridLength).TypeHandle);
        private void StaticInitializer_58_CornerRadius() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.CornerRadius).TypeHandle);
        private void StaticInitializer_59_HomeLandingPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.Views.HomeLandingPage).TypeHandle);
#pragma warning disable 0618  //   Warning on Deprecated usage
        private void StaticInitializer_60_TitleBar() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.TitleBar).TypeHandle);
#pragma warning restore 0618
        private void StaticInitializer_61_TitleBarTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.TitleBarTemplateSettings).TypeHandle);
        private void StaticInitializer_62_NavigationView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationView).TypeHandle);
        private void StaticInitializer_63_NavigationViewBackButtonVisible() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible).TypeHandle);
        private void StaticInitializer_66_NavigationViewDisplayMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode).TypeHandle);
        private void StaticInitializer_67_IList() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IList<global::System.Object>).TypeHandle);
        private void StaticInitializer_70_NavigationViewOverflowLabelMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode).TypeHandle);
        private void StaticInitializer_71_NavigationViewPaneDisplayMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode).TypeHandle);
        private void StaticInitializer_72_NavigationViewSelectionFollowsFocus() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus).TypeHandle);
        private void StaticInitializer_73_NavigationViewShoulderNavigationEnabled() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled).TypeHandle);
        private void StaticInitializer_74_NavigationViewTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings).TypeHandle);
        private void StaticInitializer_75_BreadcrumbNavigator() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.BreadcrumbNavigator).TypeHandle);
        private void StaticInitializer_76_BreadcrumbBar() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.BreadcrumbBar).TypeHandle);
        private void StaticInitializer_77_ObservableCollection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::WinUICommunity.NavigationBreadcrumb>).TypeHandle);
        private void StaticInitializer_78_Collection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.Collection<global::WinUICommunity.NavigationBreadcrumb>).TypeHandle);
        private void StaticInitializer_79_NavigationBreadcrumb() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.NavigationBreadcrumb).TypeHandle);
        private void StaticInitializer_80_Type() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Type).TypeHandle);
        private void StaticInitializer_81_MemberInfo() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Reflection.MemberInfo).TypeHandle);
        private void StaticInitializer_83_Dictionary() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.Dictionary<global::System.Type, global::WinUICommunity.BreadcrumbPageConfig>).TypeHandle);
        private void StaticInitializer_84_BreadcrumbPageConfig() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.BreadcrumbPageConfig).TypeHandle);
        private void StaticInitializer_85_Assembly() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Reflection.Assembly).TypeHandle);
        private void StaticInitializer_86_TypeAttributes() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Reflection.TypeAttributes).TypeHandle);
        private void StaticInitializer_87_MethodBase() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Reflection.MethodBase).TypeHandle);
        private void StaticInitializer_88_GenericParameterAttributes() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Reflection.GenericParameterAttributes).TypeHandle);
        private void StaticInitializer_91_Array() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Array).TypeHandle);
        private void StaticInitializer_92_Guid() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Guid).TypeHandle);
        private void StaticInitializer_93_MemberTypes() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Reflection.MemberTypes).TypeHandle);
        private void StaticInitializer_94_Module() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Reflection.Module).TypeHandle);
        private void StaticInitializer_95_StructLayoutAttribute() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Runtime.InteropServices.StructLayoutAttribute).TypeHandle);
        private void StaticInitializer_96_Attribute() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Attribute).TypeHandle);
        private void StaticInitializer_97_RuntimeTypeHandle() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.RuntimeTypeHandle).TypeHandle);
        private void StaticInitializer_98_ConstructorInfo() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Reflection.ConstructorInfo).TypeHandle);
        private void StaticInitializer_99_IEnumerable() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IEnumerable<global::System.Reflection.CustomAttributeData>).TypeHandle);
        private void StaticInitializer_100_BreadcrumbNavigatorHeaderVisibilityOptions() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.BreadcrumbNavigatorHeaderVisibilityOptions).TypeHandle);
        private void StaticInitializer_101_BitmapIconSourceExtension() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.BitmapIconSourceExtension).TypeHandle);
        private void StaticInitializer_103_Uri() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Uri).TypeHandle);
        private void StaticInitializer_104_FontIconExtension() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.FontIconExtension).TypeHandle);
        private void StaticInitializer_105_TextIconExtension() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.TextIconExtension).TypeHandle);
        private void StaticInitializer_106_GlyphCode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.GlyphCode).TypeHandle);
        private void StaticInitializer_107_GlyphName() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.GlyphName).TypeHandle);
        private void StaticInitializer_109_FontWeight() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Windows.UI.Text.FontWeight).TypeHandle);
        private void StaticInitializer_110_FontStyle() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Windows.UI.Text.FontStyle).TypeHandle);
        private void StaticInitializer_112_MainPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.Views.MainPage).TypeHandle);
        private void StaticInitializer_113_MainViewModel() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.ViewModels.MainViewModel).TypeHandle);
        private void StaticInitializer_114_DataGrid() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGrid).TypeHandle);
        private void StaticInitializer_115_DataGridGridLinesVisibility() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility).TypeHandle);
        private void StaticInitializer_116_IEnumerable() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.IEnumerable).TypeHandle);
        private void StaticInitializer_117_ObservableCollection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>).TypeHandle);
        private void StaticInitializer_118_Collection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.Collection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>).TypeHandle);
        private void StaticInitializer_119_DataGridColumn() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn).TypeHandle);
        private void StaticInitializer_121_Nullable() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Nullable<global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>).TypeHandle);
        private void StaticInitializer_122_DataGridSortDirection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection).TypeHandle);
        private void StaticInitializer_124_DataGridLength() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridLength).TypeHandle);
        private void StaticInitializer_125_DataGridClipboardCopyMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode).TypeHandle);
        private void StaticInitializer_126_DataGridHeadersVisibility() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility).TypeHandle);
        private void StaticInitializer_129_DataGridRowDetailsVisibilityMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode).TypeHandle);
        private void StaticInitializer_130_DataGridSelectionMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode).TypeHandle);
        private void StaticInitializer_131_ObservableCollection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Microsoft.UI.Xaml.Style>).TypeHandle);
        private void StaticInitializer_132_Collection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.Collection<global::Microsoft.UI.Xaml.Style>).TypeHandle);
        private void StaticInitializer_133_IList() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.IList).TypeHandle);
        private void StaticInitializer_134_ProgressRing() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ProgressRing).TypeHandle);
        private void StaticInitializer_135_ProgressRingTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings).TypeHandle);
        private void StaticInitializer_136_DataGridTextColumn() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn).TypeHandle);
        private void StaticInitializer_137_DataGridBoundColumn() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn).TypeHandle);
        private void StaticInitializer_138_LoadSqlDataGridPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.Views.Pages.LoadSqlDataGridPage).TypeHandle);
        private void StaticInitializer_139_LoadSqlDataGridViewModel() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.ViewModels.Pages.LoadSqlDataGridViewModel).TypeHandle);
        private void StaticInitializer_140_ObservableRecipient() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient).TypeHandle);
        private void StaticInitializer_141_LoadSqlDataPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.Views.Pages.LoadSqlDataPage).TypeHandle);
        private void StaticInitializer_142_LoadSqlDataPageViewModel() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.ViewModels.Pages.LoadSqlDataPageViewModel).TypeHandle);
        private void StaticInitializer_143_MenuBar() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.MenuBar).TypeHandle);
        private void StaticInitializer_144_IList() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.MenuBarItem>).TypeHandle);
        private void StaticInitializer_145_MenuBarItem() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.MenuBarItem).TypeHandle);
        private void StaticInitializer_146_IList() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase>).TypeHandle);
        private void StaticInitializer_148_LoadSqlDataSqlitePage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.Views.Pages.LoadSqlDataSqlitePage).TypeHandle);
        private void StaticInitializer_149_LoadSqlDataSqliteViewModel() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.ViewModels.Pages.LoadSqlDataSqliteViewModel).TypeHandle);
        private void StaticInitializer_150_SamplePage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.Views.Pages.SamplePage).TypeHandle);
        private void StaticInitializer_151_SamplePageViewModel() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.ViewModels.Pages.SamplePageViewModel).TypeHandle);
        private void StaticInitializer_152_Sample1Page() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.Views.Sample1Page).TypeHandle);
        private void StaticInitializer_153_Sample1PageViewModel() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.ViewModels.Sample1PageViewModel).TypeHandle);
        private void StaticInitializer_154_ScrollView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollView).TypeHandle);
        private void StaticInitializer_155_ScrollingScrollBarVisibility() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility).TypeHandle);
        private void StaticInitializer_156_ScrollingScrollMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode).TypeHandle);
        private void StaticInitializer_157_ScrollingContentOrientation() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation).TypeHandle);
        private void StaticInitializer_158_CompositionPropertySet() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Composition.CompositionPropertySet).TypeHandle);
        private void StaticInitializer_159_CompositionObject() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Composition.CompositionObject).TypeHandle);
        private void StaticInitializer_160_ScrollingChainMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingChainMode).TypeHandle);
        private void StaticInitializer_161_ScrollingRailMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingRailMode).TypeHandle);
        private void StaticInitializer_162_ScrollingInputKinds() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds).TypeHandle);
        private void StaticInitializer_163_ScrollPresenter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter).TypeHandle);
        private void StaticInitializer_165_ScrollingInteractionState() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState).TypeHandle);
        private void StaticInitializer_167_ScrollingZoomMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode).TypeHandle);
        private void StaticInitializer_168_PanelAttach() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.PanelAttach).TypeHandle);
        private void StaticInitializer_169_PanelTransitionCollection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.PanelTransitionCollection).TypeHandle);
        private void StaticInitializer_170_SettingsNavigationAttach() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.SettingsNavigationAttach).TypeHandle);
        private void StaticInitializer_172_SettingsCard() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.SettingsCard).TypeHandle);
        private void StaticInitializer_174_ContentAlignment() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.ContentAlignment).TypeHandle);
        private void StaticInitializer_175_NavigationHelperEx() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.NavigationHelperEx).TypeHandle);
        private void StaticInitializer_176_NavigationViewItem() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItem).TypeHandle);
        private void StaticInitializer_177_NavigationViewItemBase() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase).TypeHandle);
        private void StaticInitializer_178_InfoBadge() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.InfoBadge).TypeHandle);
        private void StaticInitializer_179_GeneralSettingPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.Views.GeneralSettingPage).TypeHandle);
        private void StaticInitializer_180_GeneralSettingViewModel() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.ViewModels.GeneralSettingViewModel).TypeHandle);
        private void StaticInitializer_181_ThemeSettingPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.Views.ThemeSettingPage).TypeHandle);
        private void StaticInitializer_182_AppUpdateSettingPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.Views.AppUpdateSettingPage).TypeHandle);
        private void StaticInitializer_183_AppUpdateSettingViewModel() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.ViewModels.AppUpdateSettingViewModel).TypeHandle);
        private void StaticInitializer_184_AboutUsSettingPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.Views.AboutUsSettingPage).TypeHandle);
        private void StaticInitializer_185_AboutUsSettingViewModel() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.ViewModels.AboutUsSettingViewModel).TypeHandle);
        private void StaticInitializer_186_BitmapIconExtension() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.BitmapIconExtension).TypeHandle);
        private void StaticInitializer_187_SettingsPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.Views.SettingsPage).TypeHandle);
        private void StaticInitializer_188_SettingsExpander() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.SettingsExpander).TypeHandle);
        private void StaticInitializer_189_ThemeServiceAttach() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.ThemeServiceAttach).TypeHandle);
        private void StaticInitializer_190_IThemeService() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.IThemeService).TypeHandle);
        private void StaticInitializer_191_SplashScreen() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUIEx.SplashScreen).TypeHandle);
        private void StaticInitializer_192_SplashScreen() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::AppFirst.Views.SplashScreen).TypeHandle);
        private void StaticInitializer_193_TreeViewNode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode).TypeHandle);
        private void StaticInitializer_194_IList() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>).TypeHandle);
        private void MapAdd_0_XamlControlsResources(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.Object, global::System.Object>)instance;
            var newKey = (global::System.Object)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_67_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_77_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::WinUICommunity.NavigationBreadcrumb>)instance;
            var newItem = (global::WinUICommunity.NavigationBreadcrumb)item;
            collection.Add(newItem);
        }
        private void VectorAdd_78_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::WinUICommunity.NavigationBreadcrumb>)instance;
            var newItem = (global::WinUICommunity.NavigationBreadcrumb)item;
            collection.Add(newItem);
        }
        private void MapAdd_83_Dictionary(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.Type, global::WinUICommunity.BreadcrumbPageConfig>)instance;
            var newKey = (global::System.Type)key;
            var newItem = (global::WinUICommunity.BreadcrumbPageConfig)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_117_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>)instance;
            var newItem = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)item;
            collection.Add(newItem);
        }
        private void VectorAdd_118_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>)instance;
            var newItem = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)item;
            collection.Add(newItem);
        }
        private void VectorAdd_131_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Style>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Style)item;
            collection.Add(newItem);
        }
        private void VectorAdd_132_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Style>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Style)item;
            collection.Add(newItem);
        }
        private void VectorAdd_144_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.MenuBarItem>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Controls.MenuBarItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_146_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_194_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.TreeViewNode>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)item;
            collection.Add(newItem);
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Microsoft.UI.Xaml.Controls.XamlControlsResources
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.ResourceDictionary"));
                userType.Activator = Activate_0_XamlControlsResources;
                userType.StaticInitializer = StaticInitializer_0_XamlControlsResources;
                userType.DictionaryAdd = MapAdd_0_XamlControlsResources;
                userType.AddMemberName("UseCompactResources");
                xamlType = userType;
                break;

            case 1:   //  Microsoft.UI.Xaml.ResourceDictionary
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Object
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Boolean
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  Microsoft.UI.Xaml.Thickness
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_4_Thickness;
                userType.AddMemberName("Left");
                userType.AddMemberName("Top");
                userType.AddMemberName("Right");
                userType.AddMemberName("Bottom");
                xamlType = userType;
                break;

            case 5:   //  System.ValueType
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_5_ValueType;
                xamlType = userType;
                break;

            case 6:   //  Double
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  AppFirst.Views.Data1Page
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_7_Data1Page;
                userType.StaticInitializer = StaticInitializer_7_Data1Page;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 8:   //  Microsoft.UI.Xaml.Controls.Page
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  Microsoft.UI.Xaml.Controls.UserControl
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 10:   //  AppFirst.Views.Data2Page
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_10_Data2Page;
                userType.StaticInitializer = StaticInitializer_10_Data2Page;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 11:   //  AppFirst.Views.Data3Page
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_11_Data3Page;
                userType.StaticInitializer = StaticInitializer_11_Data3Page;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 12:   //  AppFirst.Views.Dialogs.ContentDialogExample
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentDialog"));
                userType.Activator = Activate_12_ContentDialogExample;
                userType.StaticInitializer = StaticInitializer_12_ContentDialogExample;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 13:   //  Microsoft.UI.Xaml.Controls.ContentDialog
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 14:   //  Microsoft.UI.Xaml.Controls.ContentControl
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 15:   //  AppFirst.Views.Dialogs.LoginDialog
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentDialog"));
                userType.StaticInitializer = StaticInitializer_15_LoginDialog;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 16:   //  AppFirst.ViewModels.Dialogs.LoginDialogViewModel
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableObject"));
                userType.StaticInitializer = StaticInitializer_16_LoginDialogViewModel;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 17:   //  CommunityToolkit.Mvvm.ComponentModel.ObservableObject
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_17_ObservableObject;
                xamlType = userType;
                break;

            case 18:   //  Microsoft.UI.Xaml.Controls.InfoBar
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_18_InfoBar;
                userType.StaticInitializer = StaticInitializer_18_InfoBar;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.InfoBar.Content");
                userType.AddMemberName("Content");
                userType.AddMemberName("IsClosable");
                userType.AddMemberName("IsOpen");
                userType.AddMemberName("Severity");
                userType.AddMemberName("ActionButton");
                userType.AddMemberName("CloseButtonCommand");
                userType.AddMemberName("CloseButtonCommandParameter");
                userType.AddMemberName("CloseButtonStyle");
                userType.AddMemberName("ContentTemplate");
                userType.AddMemberName("IconSource");
                userType.AddMemberName("IsIconVisible");
                userType.AddMemberName("Message");
                userType.AddMemberName("TemplateSettings");
                userType.AddMemberName("Title");
                xamlType = userType;
                break;

            case 19:   //  Microsoft.UI.Xaml.Controls.Control
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  Microsoft.UI.Xaml.Controls.InfoBarSeverity
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_20_InfoBarSeverity;
                userType.AddEnumValue("Informational", global::Microsoft.UI.Xaml.Controls.InfoBarSeverity.Informational);
                userType.AddEnumValue("Success", global::Microsoft.UI.Xaml.Controls.InfoBarSeverity.Success);
                userType.AddEnumValue("Warning", global::Microsoft.UI.Xaml.Controls.InfoBarSeverity.Warning);
                userType.AddEnumValue("Error", global::Microsoft.UI.Xaml.Controls.InfoBarSeverity.Error);
                xamlType = userType;
                break;

            case 21:   //  System.Enum
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_21_Enum;
                xamlType = userType;
                break;

            case 22:   //  Microsoft.UI.Xaml.Controls.Primitives.ButtonBase
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 23:   //  System.Windows.Input.ICommand
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_23_ICommand;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 24:   //  Microsoft.UI.Xaml.Style
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 25:   //  Microsoft.UI.Xaml.DataTemplate
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 26:   //  Microsoft.UI.Xaml.Controls.IconSource
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 27:   //  String
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 28:   //  Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_28_InfoBarTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 29:   //  Microsoft.UI.Xaml.DependencyObject
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 30:   //  WinUIEx.WindowEx
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Window"));
                userType.Activator = Activate_30_WindowEx;
                userType.StaticInitializer = StaticInitializer_30_WindowEx;
                userType.SetContentPropertyName("WinUIEx.WindowEx.WindowContent");
                userType.AddMemberName("WindowContent");
                userType.AddMemberName("Width");
                userType.AddMemberName("Height");
                userType.AddMemberName("MinWidth");
                userType.AddMemberName("MinHeight");
                userType.AddMemberName("MaxWidth");
                userType.AddMemberName("MaxHeight");
                userType.AddMemberName("PersistenceId");
                userType.AddMemberName("Title");
                userType.AddMemberName("IsResizable");
                userType.AddMemberName("IsAlwaysOnTop");
                userType.AddMemberName("IsTitleBarVisible");
                userType.AddMemberName("AppWindow");
                userType.AddMemberName("TaskBarIcon");
                userType.AddMemberName("IsMinimizable");
                userType.AddMemberName("IsMaximizable");
                userType.AddMemberName("WindowState");
                userType.AddMemberName("IsShownInSwitchers");
                userType.AddMemberName("Presenter");
                userType.AddMemberName("PresenterKind");
                userType.AddMemberName("Backdrop");
                xamlType = userType;
                break;

            case 31:   //  Microsoft.UI.Xaml.Window
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 32:   //  Microsoft.UI.Windowing.AppWindow
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_32_AppWindow;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 33:   //  WinUIEx.Icon
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_33_Icon;
                userType.CreateFromStringMethod = global::WinUIEx.Icon.FromFile;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 34:   //  WinUIEx.WindowState
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_34_WindowState;
                userType.AddEnumValue("Normal", global::WinUIEx.WindowState.Normal);
                userType.AddEnumValue("Minimized", global::WinUIEx.WindowState.Minimized);
                userType.AddEnumValue("Maximized", global::WinUIEx.WindowState.Maximized);
                xamlType = userType;
                break;

            case 35:   //  Microsoft.UI.Windowing.AppWindowPresenter
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_35_AppWindowPresenter;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 36:   //  Microsoft.UI.Windowing.AppWindowPresenterKind
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_36_AppWindowPresenterKind;
                userType.AddEnumValue("Default", global::Microsoft.UI.Windowing.AppWindowPresenterKind.Default);
                userType.AddEnumValue("CompactOverlay", global::Microsoft.UI.Windowing.AppWindowPresenterKind.CompactOverlay);
                userType.AddEnumValue("FullScreen", global::Microsoft.UI.Windowing.AppWindowPresenterKind.FullScreen);
                userType.AddEnumValue("Overlapped", global::Microsoft.UI.Windowing.AppWindowPresenterKind.Overlapped);
                xamlType = userType;
                break;

            case 37:   //  WinUIEx.SystemBackdrop
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_37_SystemBackdrop;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 38:   //  Microsoft.UI.Xaml.Media.MicaBackdrop
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Media.SystemBackdrop"));
                userType.Activator = Activate_38_MicaBackdrop;
                userType.StaticInitializer = StaticInitializer_38_MicaBackdrop;
                userType.AddMemberName("Kind");
                xamlType = userType;
                break;

            case 39:   //  Microsoft.UI.Xaml.Media.SystemBackdrop
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 40:   //  Microsoft.UI.Composition.SystemBackdrops.MicaKind
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_40_MicaKind;
                userType.AddEnumValue("Base", global::Microsoft.UI.Composition.SystemBackdrops.MicaKind.Base);
                userType.AddEnumValue("BaseAlt", global::Microsoft.UI.Composition.SystemBackdrops.MicaKind.BaseAlt);
                xamlType = userType;
                break;

            case 41:   //  Microsoft.UI.Xaml.Controls.ProgressBar
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Primitives.RangeBase"));
                userType.Activator = Activate_41_ProgressBar;
                userType.StaticInitializer = StaticInitializer_41_ProgressBar;
                userType.AddMemberName("IsIndeterminate");
                userType.AddMemberName("ShowError");
                userType.AddMemberName("ShowPaused");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 42:   //  Microsoft.UI.Xaml.Controls.Primitives.RangeBase
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 43:   //  Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_43_ProgressBarTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 44:   //  AppFirst.Views.Dialogs.ProgressDialogEx
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("WinUIEx.WindowEx"));
                userType.Activator = Activate_44_ProgressDialogEx;
                userType.StaticInitializer = StaticInitializer_44_ProgressDialogEx;
                userType.SetContentPropertyName("WinUIEx.WindowEx.WindowContent");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 45:   //  AppFirst.Views.Dialogs.SqlConnectionStringDialog
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentDialog"));
                userType.StaticInitializer = StaticInitializer_45_SqlConnectionStringDialog;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 46:   //  AppFirst.ViewModels.Dialogs.SqlConnectionStringDialogViewModel
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableObject"));
                userType.StaticInitializer = StaticInitializer_46_SqlConnectionStringDialogViewModel;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 47:   //  AppFirst.Views.Dialogs.UserDialog
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentDialog"));
                userType.StaticInitializer = StaticInitializer_47_UserDialog;
                userType.AddMemberName("ResultUser");
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 48:   //  AppFirst.Models.User
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_48_User;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 49:   //  AppFirst.ViewModels.Dialogs.UserDialogViewModel
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableObject"));
                userType.StaticInitializer = StaticInitializer_49_UserDialogViewModel;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 50:   //  WinUICommunity.AllLandingPage
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("WinUICommunity.ItemsPageBase"));
                userType.Activator = Activate_50_AllLandingPage;
                userType.StaticInitializer = StaticInitializer_50_AllLandingPage;
                userType.AddMemberName("UseFullScreenHeaderImage");
                xamlType = userType;
                break;

            case 51:   //  WinUICommunity.ItemsPageBase
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.StaticInitializer = StaticInitializer_51_ItemsPageBase;
                userType.AddMemberName("HeaderImage");
                userType.AddMemberName("HeaderOverlayImage");
                userType.AddMemberName("HeaderSubtitleText");
                userType.AddMemberName("HeaderText");
                userType.AddMemberName("JsonNavigationViewService");
                userType.AddMemberName("CanExecuteInternalCommand");
                userType.AddMemberName("Items");
                userType.AddMemberName("PlaceholderSource");
                userType.AddMemberName("IsCacheEnabled");
                userType.AddMemberName("EnableLazyLoading");
                userType.AddMemberName("LazyLoadingThreshold");
                userType.AddMemberName("SpaceBetweenHeaderAndGridView");
                userType.AddMemberName("Stretch");
                userType.AddMemberName("NormalizedCenterPoint");
                userType.AddMemberName("OverlayOpacity");
                userType.AddMemberName("HeaderVerticalAlignment");
                userType.AddMemberName("HeaderCornerRadius");
                userType.AddMemberName("HeaderContentMargin");
                userType.AddMemberName("HeaderSubtitleFontSize");
                userType.AddMemberName("GridViewPadding");
                userType.AddMemberName("GridViewVerticalAlignment");
                userType.AddMemberName("HeaderFontSize");
                xamlType = userType;
                break;

            case 52:   //  WinUICommunity.IJsonNavigationViewService
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_52_IJsonNavigationViewService;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 53:   //  System.Collections.Generic.IEnumerable`1<WinUICommunity.DataItem>
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_53_IEnumerable;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 54:   //  Microsoft.UI.Xaml.Media.ImageSource
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 55:   //  Microsoft.UI.Xaml.GridLength
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_55_GridLength;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 56:   //  Microsoft.UI.Xaml.Media.Stretch
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 57:   //  Microsoft.UI.Xaml.VerticalAlignment
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 58:   //  Microsoft.UI.Xaml.CornerRadius
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_58_CornerRadius;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 59:   //  AppFirst.Views.HomeLandingPage
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_59_HomeLandingPage;
                userType.StaticInitializer = StaticInitializer_59_HomeLandingPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 60:   //  WinUICommunity.TitleBar
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_60_TitleBar;
                userType.StaticInitializer = StaticInitializer_60_TitleBar;
                userType.AddMemberName("Title");
                userType.AddMemberName("IconSource");
                userType.AddMemberName("IsBackButtonVisible");
                userType.AddMemberName("IsPaneToggleButtonVisible");
                userType.AddMemberName("Subtitle");
                userType.AddMemberName("Content");
                userType.AddMemberName("Footer");
                userType.AddMemberName("Header");
                userType.AddMemberName("IsBackEnabled");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 61:   //  WinUICommunity.TitleBarTemplateSettings
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_61_TitleBarTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 62:   //  Microsoft.UI.Xaml.Controls.NavigationView
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_62_NavigationView;
                userType.StaticInitializer = StaticInitializer_62_NavigationView;
                userType.AddMemberName("IsBackButtonVisible");
                userType.AddMemberName("IsPaneToggleButtonVisible");
                userType.AddMemberName("Header");
                userType.AddMemberName("AlwaysShowHeader");
                userType.AddMemberName("AutoSuggestBox");
                userType.AddMemberName("CompactModeThresholdWidth");
                userType.AddMemberName("CompactPaneLength");
                userType.AddMemberName("ContentOverlay");
                userType.AddMemberName("DisplayMode");
                userType.AddMemberName("ExpandedModeThresholdWidth");
                userType.AddMemberName("FooterMenuItems");
                userType.AddMemberName("FooterMenuItemsSource");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("IsBackEnabled");
                userType.AddMemberName("IsPaneOpen");
                userType.AddMemberName("IsPaneVisible");
                userType.AddMemberName("IsSettingsVisible");
                userType.AddMemberName("IsTitleBarAutoPaddingEnabled");
                userType.AddMemberName("MenuItemContainerStyle");
                userType.AddMemberName("MenuItemContainerStyleSelector");
                userType.AddMemberName("MenuItemTemplate");
                userType.AddMemberName("MenuItemTemplateSelector");
                userType.AddMemberName("MenuItems");
                userType.AddMemberName("MenuItemsSource");
                userType.AddMemberName("OpenPaneLength");
                userType.AddMemberName("OverflowLabelMode");
                userType.AddMemberName("PaneCustomContent");
                userType.AddMemberName("PaneDisplayMode");
                userType.AddMemberName("PaneFooter");
                userType.AddMemberName("PaneHeader");
                userType.AddMemberName("PaneTitle");
                userType.AddMemberName("PaneToggleButtonStyle");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("SelectionFollowsFocus");
                userType.AddMemberName("SettingsItem");
                userType.AddMemberName("ShoulderNavigationEnabled");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 63:   //  Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_63_NavigationViewBackButtonVisible;
                userType.AddEnumValue("Collapsed", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Collapsed);
                userType.AddEnumValue("Visible", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Visible);
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Auto);
                xamlType = userType;
                break;

            case 64:   //  Microsoft.UI.Xaml.Controls.AutoSuggestBox
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 65:   //  Microsoft.UI.Xaml.UIElement
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 66:   //  Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_66_NavigationViewDisplayMode;
                userType.AddEnumValue("Minimal", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Minimal);
                userType.AddEnumValue("Compact", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Compact);
                userType.AddEnumValue("Expanded", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Expanded);
                xamlType = userType;
                break;

            case 67:   //  System.Collections.Generic.IList`1<Object>
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_67_IList;
                userType.CollectionAdd = VectorAdd_67_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 68:   //  Microsoft.UI.Xaml.Controls.StyleSelector
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 69:   //  Microsoft.UI.Xaml.Controls.DataTemplateSelector
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 70:   //  Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_70_NavigationViewOverflowLabelMode;
                userType.AddEnumValue("MoreLabel", global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode.MoreLabel);
                userType.AddEnumValue("NoLabel", global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode.NoLabel);
                xamlType = userType;
                break;

            case 71:   //  Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_71_NavigationViewPaneDisplayMode;
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Auto);
                userType.AddEnumValue("Left", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Left);
                userType.AddEnumValue("Top", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Top);
                userType.AddEnumValue("LeftCompact", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.LeftCompact);
                userType.AddEnumValue("LeftMinimal", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.LeftMinimal);
                xamlType = userType;
                break;

            case 72:   //  Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_72_NavigationViewSelectionFollowsFocus;
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus.Disabled);
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus.Enabled);
                xamlType = userType;
                break;

            case 73:   //  Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_73_NavigationViewShoulderNavigationEnabled;
                userType.AddEnumValue("WhenSelectionFollowsFocus", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.WhenSelectionFollowsFocus);
                userType.AddEnumValue("Always", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.Always);
                userType.AddEnumValue("Never", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.Never);
                xamlType = userType;
                break;

            case 74:   //  Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_74_NavigationViewTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 75:   //  WinUICommunity.BreadcrumbNavigator
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.BreadcrumbBar"));
                userType.Activator = Activate_75_BreadcrumbNavigator;
                userType.StaticInitializer = StaticInitializer_75_BreadcrumbNavigator;
                userType.AddMemberName("BreadCrumbs");
                userType.AddMemberName("UseBuiltInEventForFrame");
                userType.AddMemberName("Frame");
                userType.AddMemberName("PageDictionary");
                userType.AddMemberName("NavigationView");
                userType.AddMemberName("HeaderVisibilityOptions");
                userType.AddMemberName("IsHeaderVisible");
                userType.AddMemberName("PageTitle");
                userType.AddMemberName("ClearNavigation");
                xamlType = userType;
                break;

            case 76:   //  Microsoft.UI.Xaml.Controls.BreadcrumbBar
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_76_BreadcrumbBar;
                userType.StaticInitializer = StaticInitializer_76_BreadcrumbBar;
                userType.AddMemberName("ItemTemplate");
                userType.AddMemberName("ItemsSource");
                xamlType = userType;
                break;

            case 77:   //  System.Collections.ObjectModel.ObservableCollection`1<WinUICommunity.NavigationBreadcrumb>
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<WinUICommunity.NavigationBreadcrumb>"));
                userType.StaticInitializer = StaticInitializer_77_ObservableCollection;
                userType.CollectionAdd = VectorAdd_77_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 78:   //  System.Collections.ObjectModel.Collection`1<WinUICommunity.NavigationBreadcrumb>
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_78_Collection;
                userType.StaticInitializer = StaticInitializer_78_Collection;
                userType.CollectionAdd = VectorAdd_78_Collection;
                xamlType = userType;
                break;

            case 79:   //  WinUICommunity.NavigationBreadcrumb
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_79_NavigationBreadcrumb;
                userType.AddMemberName("Label");
                userType.AddMemberName("Page");
                userType.AddMemberName("Parameter");
                xamlType = userType;
                break;

            case 80:   //  System.Type
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Reflection.MemberInfo"));
                userType.StaticInitializer = StaticInitializer_80_Type;
                userType.AddMemberName("Assembly");
                userType.AddMemberName("AssemblyQualifiedName");
                userType.AddMemberName("Attributes");
                userType.AddMemberName("BaseType");
                userType.AddMemberName("ContainsGenericParameters");
                userType.AddMemberName("DeclaringMethod");
                userType.AddMemberName("DeclaringType");
                userType.AddMemberName("FullName");
                userType.AddMemberName("GenericParameterAttributes");
                userType.AddMemberName("GenericParameterPosition");
                userType.AddMemberName("GenericTypeArguments");
                userType.AddMemberName("GUID");
                userType.AddMemberName("HasElementType");
                userType.AddMemberName("IsAbstract");
                userType.AddMemberName("IsAnsiClass");
                userType.AddMemberName("IsArray");
                userType.AddMemberName("IsAutoClass");
                userType.AddMemberName("IsAutoLayout");
                userType.AddMemberName("IsByRef");
                userType.AddMemberName("IsByRefLike");
                userType.AddMemberName("IsClass");
                userType.AddMemberName("IsCOMObject");
                userType.AddMemberName("IsConstructedGenericType");
                userType.AddMemberName("IsContextful");
                userType.AddMemberName("IsEnum");
                userType.AddMemberName("IsExplicitLayout");
                userType.AddMemberName("IsFunctionPointer");
                userType.AddMemberName("IsGenericMethodParameter");
                userType.AddMemberName("IsGenericParameter");
                userType.AddMemberName("IsGenericType");
                userType.AddMemberName("IsGenericTypeDefinition");
                userType.AddMemberName("IsGenericTypeParameter");
                userType.AddMemberName("IsImport");
                userType.AddMemberName("IsInterface");
                userType.AddMemberName("IsLayoutSequential");
                userType.AddMemberName("IsMarshalByRef");
                userType.AddMemberName("IsNested");
                userType.AddMemberName("IsNestedAssembly");
                userType.AddMemberName("IsNestedFamANDAssem");
                userType.AddMemberName("IsNestedFamily");
                userType.AddMemberName("IsNestedFamORAssem");
                userType.AddMemberName("IsNestedPrivate");
                userType.AddMemberName("IsNestedPublic");
                userType.AddMemberName("IsNotPublic");
                userType.AddMemberName("IsPointer");
                userType.AddMemberName("IsPrimitive");
                userType.AddMemberName("IsPublic");
                userType.AddMemberName("IsSealed");
                userType.AddMemberName("IsSecurityCritical");
                userType.AddMemberName("IsSecuritySafeCritical");
                userType.AddMemberName("IsSecurityTransparent");
                userType.AddMemberName("IsSerializable");
                userType.AddMemberName("IsSignatureType");
                userType.AddMemberName("IsSpecialName");
                userType.AddMemberName("IsSZArray");
                userType.AddMemberName("IsTypeDefinition");
                userType.AddMemberName("IsUnicodeClass");
                userType.AddMemberName("IsUnmanagedFunctionPointer");
                userType.AddMemberName("IsValueType");
                userType.AddMemberName("IsVariableBoundArray");
                userType.AddMemberName("IsVisible");
                userType.AddMemberName("MemberType");
                userType.AddMemberName("Module");
                userType.AddMemberName("Namespace");
                userType.AddMemberName("ReflectedType");
                userType.AddMemberName("StructLayoutAttribute");
                userType.AddMemberName("TypeHandle");
                userType.AddMemberName("TypeInitializer");
                userType.AddMemberName("UnderlyingSystemType");
                xamlType = userType;
                break;

            case 81:   //  System.Reflection.MemberInfo
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_81_MemberInfo;
                userType.AddMemberName("CustomAttributes");
                userType.AddMemberName("IsCollectible");
                userType.AddMemberName("MetadataToken");
                userType.AddMemberName("Name");
                xamlType = userType;
                break;

            case 82:   //  Microsoft.UI.Xaml.Controls.Frame
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 83:   //  System.Collections.Generic.Dictionary`2<System.Type, WinUICommunity.BreadcrumbPageConfig>
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_83_Dictionary;
                userType.DictionaryAdd = MapAdd_83_Dictionary;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 84:   //  WinUICommunity.BreadcrumbPageConfig
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_84_BreadcrumbPageConfig;
                userType.StaticInitializer = StaticInitializer_84_BreadcrumbPageConfig;
                userType.AddMemberName("PageTitle");
                userType.AddMemberName("IsHeaderVisible");
                userType.AddMemberName("ClearNavigation");
                xamlType = userType;
                break;

            case 85:   //  System.Reflection.Assembly
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_85_Assembly;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 86:   //  System.Reflection.TypeAttributes
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_86_TypeAttributes;
                userType.AddEnumValue("AnsiClass", global::System.Reflection.TypeAttributes.AnsiClass);
                userType.AddEnumValue("AutoLayout", global::System.Reflection.TypeAttributes.AutoLayout);
                userType.AddEnumValue("Class", global::System.Reflection.TypeAttributes.Class);
                userType.AddEnumValue("NotPublic", global::System.Reflection.TypeAttributes.NotPublic);
                userType.AddEnumValue("Public", global::System.Reflection.TypeAttributes.Public);
                userType.AddEnumValue("NestedPublic", global::System.Reflection.TypeAttributes.NestedPublic);
                userType.AddEnumValue("NestedPrivate", global::System.Reflection.TypeAttributes.NestedPrivate);
                userType.AddEnumValue("NestedFamily", global::System.Reflection.TypeAttributes.NestedFamily);
                userType.AddEnumValue("NestedAssembly", global::System.Reflection.TypeAttributes.NestedAssembly);
                userType.AddEnumValue("NestedFamANDAssem", global::System.Reflection.TypeAttributes.NestedFamANDAssem);
                userType.AddEnumValue("NestedFamORAssem", global::System.Reflection.TypeAttributes.NestedFamORAssem);
                userType.AddEnumValue("VisibilityMask", global::System.Reflection.TypeAttributes.VisibilityMask);
                userType.AddEnumValue("SequentialLayout", global::System.Reflection.TypeAttributes.SequentialLayout);
                userType.AddEnumValue("ExplicitLayout", global::System.Reflection.TypeAttributes.ExplicitLayout);
                userType.AddEnumValue("LayoutMask", global::System.Reflection.TypeAttributes.LayoutMask);
                userType.AddEnumValue("ClassSemanticsMask", global::System.Reflection.TypeAttributes.ClassSemanticsMask);
                userType.AddEnumValue("Interface", global::System.Reflection.TypeAttributes.Interface);
                userType.AddEnumValue("Abstract", global::System.Reflection.TypeAttributes.Abstract);
                userType.AddEnumValue("Sealed", global::System.Reflection.TypeAttributes.Sealed);
                userType.AddEnumValue("SpecialName", global::System.Reflection.TypeAttributes.SpecialName);
                userType.AddEnumValue("RTSpecialName", global::System.Reflection.TypeAttributes.RTSpecialName);
                userType.AddEnumValue("Import", global::System.Reflection.TypeAttributes.Import);
                userType.AddEnumValue("Serializable", global::System.Reflection.TypeAttributes.Serializable);
                userType.AddEnumValue("WindowsRuntime", global::System.Reflection.TypeAttributes.WindowsRuntime);
                userType.AddEnumValue("UnicodeClass", global::System.Reflection.TypeAttributes.UnicodeClass);
                userType.AddEnumValue("AutoClass", global::System.Reflection.TypeAttributes.AutoClass);
                userType.AddEnumValue("CustomFormatClass", global::System.Reflection.TypeAttributes.CustomFormatClass);
                userType.AddEnumValue("StringFormatMask", global::System.Reflection.TypeAttributes.StringFormatMask);
                userType.AddEnumValue("HasSecurity", global::System.Reflection.TypeAttributes.HasSecurity);
                userType.AddEnumValue("ReservedMask", global::System.Reflection.TypeAttributes.ReservedMask);
                userType.AddEnumValue("BeforeFieldInit", global::System.Reflection.TypeAttributes.BeforeFieldInit);
                userType.AddEnumValue("CustomFormatMask", global::System.Reflection.TypeAttributes.CustomFormatMask);
                xamlType = userType;
                break;

            case 87:   //  System.Reflection.MethodBase
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Reflection.MemberInfo"));
                userType.StaticInitializer = StaticInitializer_87_MethodBase;
                xamlType = userType;
                break;

            case 88:   //  System.Reflection.GenericParameterAttributes
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_88_GenericParameterAttributes;
                userType.AddEnumValue("None", global::System.Reflection.GenericParameterAttributes.None);
                userType.AddEnumValue("Covariant", global::System.Reflection.GenericParameterAttributes.Covariant);
                userType.AddEnumValue("Contravariant", global::System.Reflection.GenericParameterAttributes.Contravariant);
                userType.AddEnumValue("VarianceMask", global::System.Reflection.GenericParameterAttributes.VarianceMask);
                userType.AddEnumValue("ReferenceTypeConstraint", global::System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint);
                userType.AddEnumValue("NotNullableValueTypeConstraint", global::System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint);
                userType.AddEnumValue("DefaultConstructorConstraint", global::System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint);
                userType.AddEnumValue("SpecialConstraintMask", global::System.Reflection.GenericParameterAttributes.SpecialConstraintMask);
                userType.AddEnumValue("AllowByRefLike", global::System.Reflection.GenericParameterAttributes.AllowByRefLike);
                xamlType = userType;
                break;

            case 89:   //  Int32
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 90:   //  System.Type[]
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Array"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 91:   //  System.Array
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_91_Array;
                xamlType = userType;
                break;

            case 92:   //  Guid
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_92_Guid;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 93:   //  System.Reflection.MemberTypes
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_93_MemberTypes;
                userType.AddEnumValue("Constructor", global::System.Reflection.MemberTypes.Constructor);
                userType.AddEnumValue("Event", global::System.Reflection.MemberTypes.Event);
                userType.AddEnumValue("Field", global::System.Reflection.MemberTypes.Field);
                userType.AddEnumValue("Method", global::System.Reflection.MemberTypes.Method);
                userType.AddEnumValue("Property", global::System.Reflection.MemberTypes.Property);
                userType.AddEnumValue("TypeInfo", global::System.Reflection.MemberTypes.TypeInfo);
                userType.AddEnumValue("Custom", global::System.Reflection.MemberTypes.Custom);
                userType.AddEnumValue("NestedType", global::System.Reflection.MemberTypes.NestedType);
                userType.AddEnumValue("All", global::System.Reflection.MemberTypes.All);
                xamlType = userType;
                break;

            case 94:   //  System.Reflection.Module
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_94_Module;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 95:   //  System.Runtime.InteropServices.StructLayoutAttribute
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Attribute"));
                userType.StaticInitializer = StaticInitializer_95_StructLayoutAttribute;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 96:   //  System.Attribute
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_96_Attribute;
                xamlType = userType;
                break;

            case 97:   //  System.RuntimeTypeHandle
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_97_RuntimeTypeHandle;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 98:   //  System.Reflection.ConstructorInfo
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Reflection.MethodBase"));
                userType.StaticInitializer = StaticInitializer_98_ConstructorInfo;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 99:   //  System.Collections.Generic.IEnumerable`1<System.Reflection.CustomAttributeData>
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_99_IEnumerable;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 100:   //  WinUICommunity.BreadcrumbNavigatorHeaderVisibilityOptions
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_100_BreadcrumbNavigatorHeaderVisibilityOptions;
                userType.AddEnumValue("None", global::WinUICommunity.BreadcrumbNavigatorHeaderVisibilityOptions.None);
                userType.AddEnumValue("BreadcrumbNavigatorOnly", global::WinUICommunity.BreadcrumbNavigatorHeaderVisibilityOptions.BreadcrumbNavigatorOnly);
                userType.AddEnumValue("NavigationViewOnly", global::WinUICommunity.BreadcrumbNavigatorHeaderVisibilityOptions.NavigationViewOnly);
                userType.AddEnumValue("Both", global::WinUICommunity.BreadcrumbNavigatorHeaderVisibilityOptions.Both);
                xamlType = userType;
                break;

            case 101:   //  WinUICommunity.BitmapIconSourceExtension
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Markup.MarkupExtension"));
                userType.Activator = Activate_101_BitmapIconSourceExtension;
                userType.StaticInitializer = StaticInitializer_101_BitmapIconSourceExtension;
                userType.AddMemberName("Source");
                userType.AddMemberName("ShowAsMonochrome");
                userType.SetIsMarkupExtension();
                xamlType = userType;
                break;

            case 102:   //  Microsoft.UI.Xaml.Markup.MarkupExtension
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 103:   //  System.Uri
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_103_Uri;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 104:   //  WinUICommunity.FontIconExtension
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("WinUICommunity.TextIconExtension"));
                userType.Activator = Activate_104_FontIconExtension;
                userType.StaticInitializer = StaticInitializer_104_FontIconExtension;
                userType.AddMemberName("Glyph");
                userType.AddMemberName("GlyphCode");
                userType.AddMemberName("GlyphName");
                userType.AddMemberName("FontFamily");
                userType.SetIsMarkupExtension();
                xamlType = userType;
                break;

            case 105:   //  WinUICommunity.TextIconExtension
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Markup.MarkupExtension"));
                userType.StaticInitializer = StaticInitializer_105_TextIconExtension;
                userType.AddMemberName("FontSize");
                userType.AddMemberName("FontWeight");
                userType.AddMemberName("FontStyle");
                userType.AddMemberName("Foreground");
                userType.AddMemberName("IsTextScaleFactorEnabled");
                userType.AddMemberName("MirroredWhenRightToLeft");
                userType.SetIsMarkupExtension();
                xamlType = userType;
                break;

            case 106:   //  WinUICommunity.GlyphCode
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_106_GlyphCode;
                userType.AddEnumValue("None", global::WinUICommunity.GlyphCode.None);
                userType.AddEnumValue("E700", global::WinUICommunity.GlyphCode.E700);
                userType.AddEnumValue("E701", global::WinUICommunity.GlyphCode.E701);
                userType.AddEnumValue("E702", global::WinUICommunity.GlyphCode.E702);
                userType.AddEnumValue("E703", global::WinUICommunity.GlyphCode.E703);
                userType.AddEnumValue("E704", global::WinUICommunity.GlyphCode.E704);
                userType.AddEnumValue("E705", global::WinUICommunity.GlyphCode.E705);
                userType.AddEnumValue("E706", global::WinUICommunity.GlyphCode.E706);
                userType.AddEnumValue("E707", global::WinUICommunity.GlyphCode.E707);
                userType.AddEnumValue("E708", global::WinUICommunity.GlyphCode.E708);
                userType.AddEnumValue("E709", global::WinUICommunity.GlyphCode.E709);
                userType.AddEnumValue("E70A", global::WinUICommunity.GlyphCode.E70A);
                userType.AddEnumValue("E70B", global::WinUICommunity.GlyphCode.E70B);
                userType.AddEnumValue("E70C", global::WinUICommunity.GlyphCode.E70C);
                userType.AddEnumValue("E70D", global::WinUICommunity.GlyphCode.E70D);
                userType.AddEnumValue("E70E", global::WinUICommunity.GlyphCode.E70E);
                userType.AddEnumValue("E70F", global::WinUICommunity.GlyphCode.E70F);
                userType.AddEnumValue("E710", global::WinUICommunity.GlyphCode.E710);
                userType.AddEnumValue("E711", global::WinUICommunity.GlyphCode.E711);
                userType.AddEnumValue("E712", global::WinUICommunity.GlyphCode.E712);
                userType.AddEnumValue("E713", global::WinUICommunity.GlyphCode.E713);
                userType.AddEnumValue("E714", global::WinUICommunity.GlyphCode.E714);
                userType.AddEnumValue("E715", global::WinUICommunity.GlyphCode.E715);
                userType.AddEnumValue("E716", global::WinUICommunity.GlyphCode.E716);
                userType.AddEnumValue("E717", global::WinUICommunity.GlyphCode.E717);
                userType.AddEnumValue("E718", global::WinUICommunity.GlyphCode.E718);
                userType.AddEnumValue("E719", global::WinUICommunity.GlyphCode.E719);
                userType.AddEnumValue("E71A", global::WinUICommunity.GlyphCode.E71A);
                userType.AddEnumValue("E71B", global::WinUICommunity.GlyphCode.E71B);
                userType.AddEnumValue("E71C", global::WinUICommunity.GlyphCode.E71C);
                userType.AddEnumValue("E71D", global::WinUICommunity.GlyphCode.E71D);
                userType.AddEnumValue("E71E", global::WinUICommunity.GlyphCode.E71E);
                userType.AddEnumValue("E71F", global::WinUICommunity.GlyphCode.E71F);
                userType.AddEnumValue("E720", global::WinUICommunity.GlyphCode.E720);
                userType.AddEnumValue("E721", global::WinUICommunity.GlyphCode.E721);
                userType.AddEnumValue("E722", global::WinUICommunity.GlyphCode.E722);
                userType.AddEnumValue("E723", global::WinUICommunity.GlyphCode.E723);
                userType.AddEnumValue("E724", global::WinUICommunity.GlyphCode.E724);
                userType.AddEnumValue("E725", global::WinUICommunity.GlyphCode.E725);
                userType.AddEnumValue("E726", global::WinUICommunity.GlyphCode.E726);
                userType.AddEnumValue("E727", global::WinUICommunity.GlyphCode.E727);
                userType.AddEnumValue("E728", global::WinUICommunity.GlyphCode.E728);
                userType.AddEnumValue("E729", global::WinUICommunity.GlyphCode.E729);
                userType.AddEnumValue("E72A", global::WinUICommunity.GlyphCode.E72A);
                userType.AddEnumValue("E72B", global::WinUICommunity.GlyphCode.E72B);
                userType.AddEnumValue("E72C", global::WinUICommunity.GlyphCode.E72C);
                userType.AddEnumValue("E72D", global::WinUICommunity.GlyphCode.E72D);
                userType.AddEnumValue("E72E", global::WinUICommunity.GlyphCode.E72E);
                userType.AddEnumValue("E730", global::WinUICommunity.GlyphCode.E730);
                userType.AddEnumValue("E731", global::WinUICommunity.GlyphCode.E731);
                userType.AddEnumValue("E734", global::WinUICommunity.GlyphCode.E734);
                userType.AddEnumValue("E735", global::WinUICommunity.GlyphCode.E735);
                userType.AddEnumValue("E736", global::WinUICommunity.GlyphCode.E736);
                userType.AddEnumValue("E737", global::WinUICommunity.GlyphCode.E737);
                userType.AddEnumValue("E738", global::WinUICommunity.GlyphCode.E738);
                userType.AddEnumValue("E739", global::WinUICommunity.GlyphCode.E739);
                userType.AddEnumValue("E73A", global::WinUICommunity.GlyphCode.E73A);
                userType.AddEnumValue("E73B", global::WinUICommunity.GlyphCode.E73B);
                userType.AddEnumValue("E73C", global::WinUICommunity.GlyphCode.E73C);
                userType.AddEnumValue("E73D", global::WinUICommunity.GlyphCode.E73D);
                userType.AddEnumValue("E73E", global::WinUICommunity.GlyphCode.E73E);
                userType.AddEnumValue("E73F", global::WinUICommunity.GlyphCode.E73F);
                userType.AddEnumValue("E740", global::WinUICommunity.GlyphCode.E740);
                userType.AddEnumValue("E741", global::WinUICommunity.GlyphCode.E741);
                userType.AddEnumValue("E742", global::WinUICommunity.GlyphCode.E742);
                userType.AddEnumValue("E743", global::WinUICommunity.GlyphCode.E743);
                userType.AddEnumValue("E744", global::WinUICommunity.GlyphCode.E744);
                userType.AddEnumValue("E745", global::WinUICommunity.GlyphCode.E745);
                userType.AddEnumValue("E746", global::WinUICommunity.GlyphCode.E746);
                userType.AddEnumValue("E747", global::WinUICommunity.GlyphCode.E747);
                userType.AddEnumValue("E748", global::WinUICommunity.GlyphCode.E748);
                userType.AddEnumValue("E749", global::WinUICommunity.GlyphCode.E749);
                userType.AddEnumValue("E74A", global::WinUICommunity.GlyphCode.E74A);
                userType.AddEnumValue("E74B", global::WinUICommunity.GlyphCode.E74B);
                userType.AddEnumValue("E74C", global::WinUICommunity.GlyphCode.E74C);
                userType.AddEnumValue("E74D", global::WinUICommunity.GlyphCode.E74D);
                userType.AddEnumValue("E74E", global::WinUICommunity.GlyphCode.E74E);
                userType.AddEnumValue("E74F", global::WinUICommunity.GlyphCode.E74F);
                userType.AddEnumValue("E750", global::WinUICommunity.GlyphCode.E750);
                userType.AddEnumValue("E751", global::WinUICommunity.GlyphCode.E751);
                userType.AddEnumValue("E752", global::WinUICommunity.GlyphCode.E752);
                userType.AddEnumValue("E753", global::WinUICommunity.GlyphCode.E753);
                userType.AddEnumValue("E754", global::WinUICommunity.GlyphCode.E754);
                userType.AddEnumValue("E755", global::WinUICommunity.GlyphCode.E755);
                userType.AddEnumValue("E756", global::WinUICommunity.GlyphCode.E756);
                userType.AddEnumValue("E759", global::WinUICommunity.GlyphCode.E759);
                userType.AddEnumValue("E75A", global::WinUICommunity.GlyphCode.E75A);
                userType.AddEnumValue("E75B", global::WinUICommunity.GlyphCode.E75B);
                userType.AddEnumValue("E75C", global::WinUICommunity.GlyphCode.E75C);
                userType.AddEnumValue("E75D", global::WinUICommunity.GlyphCode.E75D);
                userType.AddEnumValue("E75E", global::WinUICommunity.GlyphCode.E75E);
                userType.AddEnumValue("E75F", global::WinUICommunity.GlyphCode.E75F);
                userType.AddEnumValue("E760", global::WinUICommunity.GlyphCode.E760);
                userType.AddEnumValue("E761", global::WinUICommunity.GlyphCode.E761);
                userType.AddEnumValue("E762", global::WinUICommunity.GlyphCode.E762);
                userType.AddEnumValue("E763", global::WinUICommunity.GlyphCode.E763);
                userType.AddEnumValue("E764", global::WinUICommunity.GlyphCode.E764);
                userType.AddEnumValue("E765", global::WinUICommunity.GlyphCode.E765);
                userType.AddEnumValue("E766", global::WinUICommunity.GlyphCode.E766);
                userType.AddEnumValue("E767", global::WinUICommunity.GlyphCode.E767);
                userType.AddEnumValue("E768", global::WinUICommunity.GlyphCode.E768);
                userType.AddEnumValue("E769", global::WinUICommunity.GlyphCode.E769);
                userType.AddEnumValue("E76B", global::WinUICommunity.GlyphCode.E76B);
                userType.AddEnumValue("E76C", global::WinUICommunity.GlyphCode.E76C);
                userType.AddEnumValue("E76D", global::WinUICommunity.GlyphCode.E76D);
                userType.AddEnumValue("E76E", global::WinUICommunity.GlyphCode.E76E);
                userType.AddEnumValue("E76F", global::WinUICommunity.GlyphCode.E76F);
                userType.AddEnumValue("E770", global::WinUICommunity.GlyphCode.E770);
                userType.AddEnumValue("E771", global::WinUICommunity.GlyphCode.E771);
                userType.AddEnumValue("E772", global::WinUICommunity.GlyphCode.E772);
                userType.AddEnumValue("E773", global::WinUICommunity.GlyphCode.E773);
                userType.AddEnumValue("E774", global::WinUICommunity.GlyphCode.E774);
                userType.AddEnumValue("E775", global::WinUICommunity.GlyphCode.E775);
                userType.AddEnumValue("E776", global::WinUICommunity.GlyphCode.E776);
                userType.AddEnumValue("E777", global::WinUICommunity.GlyphCode.E777);
                userType.AddEnumValue("E778", global::WinUICommunity.GlyphCode.E778);
                userType.AddEnumValue("E779", global::WinUICommunity.GlyphCode.E779);
                userType.AddEnumValue("E77A", global::WinUICommunity.GlyphCode.E77A);
                userType.AddEnumValue("E77B", global::WinUICommunity.GlyphCode.E77B);
                userType.AddEnumValue("E77C", global::WinUICommunity.GlyphCode.E77C);
                userType.AddEnumValue("E77E", global::WinUICommunity.GlyphCode.E77E);
                userType.AddEnumValue("E77F", global::WinUICommunity.GlyphCode.E77F);
                userType.AddEnumValue("E780", global::WinUICommunity.GlyphCode.E780);
                userType.AddEnumValue("E781", global::WinUICommunity.GlyphCode.E781);
                userType.AddEnumValue("E783", global::WinUICommunity.GlyphCode.E783);
                userType.AddEnumValue("E784", global::WinUICommunity.GlyphCode.E784);
                userType.AddEnumValue("E785", global::WinUICommunity.GlyphCode.E785);
                userType.AddEnumValue("E786", global::WinUICommunity.GlyphCode.E786);
                userType.AddEnumValue("E787", global::WinUICommunity.GlyphCode.E787);
                userType.AddEnumValue("E788", global::WinUICommunity.GlyphCode.E788);
                userType.AddEnumValue("E789", global::WinUICommunity.GlyphCode.E789);
                userType.AddEnumValue("E78A", global::WinUICommunity.GlyphCode.E78A);
                userType.AddEnumValue("E78B", global::WinUICommunity.GlyphCode.E78B);
                userType.AddEnumValue("E78C", global::WinUICommunity.GlyphCode.E78C);
                userType.AddEnumValue("E790", global::WinUICommunity.GlyphCode.E790);
                userType.AddEnumValue("E791", global::WinUICommunity.GlyphCode.E791);
                userType.AddEnumValue("E792", global::WinUICommunity.GlyphCode.E792);
                userType.AddEnumValue("E793", global::WinUICommunity.GlyphCode.E793);
                userType.AddEnumValue("E799", global::WinUICommunity.GlyphCode.E799);
                userType.AddEnumValue("E7A5", global::WinUICommunity.GlyphCode.E7A5);
                userType.AddEnumValue("E7A6", global::WinUICommunity.GlyphCode.E7A6);
                userType.AddEnumValue("E7A7", global::WinUICommunity.GlyphCode.E7A7);
                userType.AddEnumValue("E7A8", global::WinUICommunity.GlyphCode.E7A8);
                userType.AddEnumValue("E7AC", global::WinUICommunity.GlyphCode.E7AC);
                userType.AddEnumValue("E7AD", global::WinUICommunity.GlyphCode.E7AD);
                userType.AddEnumValue("E7B3", global::WinUICommunity.GlyphCode.E7B3);
                userType.AddEnumValue("E7B5", global::WinUICommunity.GlyphCode.E7B5);
                userType.AddEnumValue("E7B7", global::WinUICommunity.GlyphCode.E7B7);
                userType.AddEnumValue("E7B8", global::WinUICommunity.GlyphCode.E7B8);
                userType.AddEnumValue("E7BA", global::WinUICommunity.GlyphCode.E7BA);
                userType.AddEnumValue("E7BC", global::WinUICommunity.GlyphCode.E7BC);
                userType.AddEnumValue("E7BE", global::WinUICommunity.GlyphCode.E7BE);
                userType.AddEnumValue("E7BF", global::WinUICommunity.GlyphCode.E7BF);
                userType.AddEnumValue("E7C0", global::WinUICommunity.GlyphCode.E7C0);
                userType.AddEnumValue("E7C1", global::WinUICommunity.GlyphCode.E7C1);
                userType.AddEnumValue("E7C2", global::WinUICommunity.GlyphCode.E7C2);
                userType.AddEnumValue("E7C3", global::WinUICommunity.GlyphCode.E7C3);
                userType.AddEnumValue("E7C4", global::WinUICommunity.GlyphCode.E7C4);
                userType.AddEnumValue("E7C5", global::WinUICommunity.GlyphCode.E7C5);
                userType.AddEnumValue("E7C6", global::WinUICommunity.GlyphCode.E7C6);
                userType.AddEnumValue("E7C7", global::WinUICommunity.GlyphCode.E7C7);
                userType.AddEnumValue("E7C8", global::WinUICommunity.GlyphCode.E7C8);
                userType.AddEnumValue("E7C9", global::WinUICommunity.GlyphCode.E7C9);
                userType.AddEnumValue("E7DE", global::WinUICommunity.GlyphCode.E7DE);
                userType.AddEnumValue("E7E3", global::WinUICommunity.GlyphCode.E7E3);
                userType.AddEnumValue("E7E6", global::WinUICommunity.GlyphCode.E7E6);
                userType.AddEnumValue("E7E7", global::WinUICommunity.GlyphCode.E7E7);
                userType.AddEnumValue("E7E8", global::WinUICommunity.GlyphCode.E7E8);
                userType.AddEnumValue("E7EA", global::WinUICommunity.GlyphCode.E7EA);
                userType.AddEnumValue("E7EB", global::WinUICommunity.GlyphCode.E7EB);
                userType.AddEnumValue("E7EC", global::WinUICommunity.GlyphCode.E7EC);
                userType.AddEnumValue("E7ED", global::WinUICommunity.GlyphCode.E7ED);
                userType.AddEnumValue("E7EE", global::WinUICommunity.GlyphCode.E7EE);
                userType.AddEnumValue("E7EF", global::WinUICommunity.GlyphCode.E7EF);
                userType.AddEnumValue("E7F0", global::WinUICommunity.GlyphCode.E7F0);
                userType.AddEnumValue("E7F1", global::WinUICommunity.GlyphCode.E7F1);
                userType.AddEnumValue("E7F2", global::WinUICommunity.GlyphCode.E7F2);
                userType.AddEnumValue("E7F3", global::WinUICommunity.GlyphCode.E7F3);
                userType.AddEnumValue("E7F4", global::WinUICommunity.GlyphCode.E7F4);
                userType.AddEnumValue("E7F5", global::WinUICommunity.GlyphCode.E7F5);
                userType.AddEnumValue("E7F6", global::WinUICommunity.GlyphCode.E7F6);
                userType.AddEnumValue("E7F7", global::WinUICommunity.GlyphCode.E7F7);
                userType.AddEnumValue("E7F8", global::WinUICommunity.GlyphCode.E7F8);
                userType.AddEnumValue("E7F9", global::WinUICommunity.GlyphCode.E7F9);
                userType.AddEnumValue("E7FA", global::WinUICommunity.GlyphCode.E7FA);
                userType.AddEnumValue("E7FB", global::WinUICommunity.GlyphCode.E7FB);
                userType.AddEnumValue("E7FC", global::WinUICommunity.GlyphCode.E7FC);
                userType.AddEnumValue("E7FD", global::WinUICommunity.GlyphCode.E7FD);
                userType.AddEnumValue("E802", global::WinUICommunity.GlyphCode.E802);
                userType.AddEnumValue("E803", global::WinUICommunity.GlyphCode.E803);
                userType.AddEnumValue("E804", global::WinUICommunity.GlyphCode.E804);
                userType.AddEnumValue("E805", global::WinUICommunity.GlyphCode.E805);
                userType.AddEnumValue("E806", global::WinUICommunity.GlyphCode.E806);
                userType.AddEnumValue("E809", global::WinUICommunity.GlyphCode.E809);
                userType.AddEnumValue("E80A", global::WinUICommunity.GlyphCode.E80A);
                userType.AddEnumValue("E80B", global::WinUICommunity.GlyphCode.E80B);
                userType.AddEnumValue("E80C", global::WinUICommunity.GlyphCode.E80C);
                userType.AddEnumValue("E80D", global::WinUICommunity.GlyphCode.E80D);
                userType.AddEnumValue("E80F", global::WinUICommunity.GlyphCode.E80F);
                userType.AddEnumValue("E811", global::WinUICommunity.GlyphCode.E811);
                userType.AddEnumValue("E812", global::WinUICommunity.GlyphCode.E812);
                userType.AddEnumValue("E813", global::WinUICommunity.GlyphCode.E813);
                userType.AddEnumValue("E814", global::WinUICommunity.GlyphCode.E814);
                userType.AddEnumValue("E815", global::WinUICommunity.GlyphCode.E815);
                userType.AddEnumValue("E816", global::WinUICommunity.GlyphCode.E816);
                userType.AddEnumValue("E819", global::WinUICommunity.GlyphCode.E819);
                userType.AddEnumValue("E81A", global::WinUICommunity.GlyphCode.E81A);
                userType.AddEnumValue("E81B", global::WinUICommunity.GlyphCode.E81B);
                userType.AddEnumValue("E81C", global::WinUICommunity.GlyphCode.E81C);
                userType.AddEnumValue("E81D", global::WinUICommunity.GlyphCode.E81D);
                userType.AddEnumValue("E81E", global::WinUICommunity.GlyphCode.E81E);
                userType.AddEnumValue("E81F", global::WinUICommunity.GlyphCode.E81F);
                userType.AddEnumValue("E821", global::WinUICommunity.GlyphCode.E821);
                userType.AddEnumValue("E822", global::WinUICommunity.GlyphCode.E822);
                userType.AddEnumValue("E823", global::WinUICommunity.GlyphCode.E823);
                userType.AddEnumValue("E825", global::WinUICommunity.GlyphCode.E825);
                userType.AddEnumValue("E826", global::WinUICommunity.GlyphCode.E826);
                userType.AddEnumValue("E829", global::WinUICommunity.GlyphCode.E829);
                userType.AddEnumValue("E82A", global::WinUICommunity.GlyphCode.E82A);
                userType.AddEnumValue("E82B", global::WinUICommunity.GlyphCode.E82B);
                userType.AddEnumValue("E82C", global::WinUICommunity.GlyphCode.E82C);
                userType.AddEnumValue("E82D", global::WinUICommunity.GlyphCode.E82D);
                userType.AddEnumValue("E82E", global::WinUICommunity.GlyphCode.E82E);
                userType.AddEnumValue("E82F", global::WinUICommunity.GlyphCode.E82F);
                userType.AddEnumValue("E830", global::WinUICommunity.GlyphCode.E830);
                userType.AddEnumValue("E835", global::WinUICommunity.GlyphCode.E835);
                userType.AddEnumValue("E836", global::WinUICommunity.GlyphCode.E836);
                userType.AddEnumValue("E838", global::WinUICommunity.GlyphCode.E838);
                userType.AddEnumValue("E839", global::WinUICommunity.GlyphCode.E839);
                userType.AddEnumValue("E83A", global::WinUICommunity.GlyphCode.E83A);
                userType.AddEnumValue("E83B", global::WinUICommunity.GlyphCode.E83B);
                userType.AddEnumValue("E83C", global::WinUICommunity.GlyphCode.E83C);
                userType.AddEnumValue("E83D", global::WinUICommunity.GlyphCode.E83D);
                userType.AddEnumValue("E83E", global::WinUICommunity.GlyphCode.E83E);
                userType.AddEnumValue("E83F", global::WinUICommunity.GlyphCode.E83F);
                userType.AddEnumValue("E840", global::WinUICommunity.GlyphCode.E840);
                userType.AddEnumValue("E841", global::WinUICommunity.GlyphCode.E841);
                userType.AddEnumValue("E842", global::WinUICommunity.GlyphCode.E842);
                userType.AddEnumValue("E843", global::WinUICommunity.GlyphCode.E843);
                userType.AddEnumValue("E844", global::WinUICommunity.GlyphCode.E844);
                userType.AddEnumValue("E845", global::WinUICommunity.GlyphCode.E845);
                userType.AddEnumValue("E846", global::WinUICommunity.GlyphCode.E846);
                userType.AddEnumValue("E847", global::WinUICommunity.GlyphCode.E847);
                userType.AddEnumValue("E848", global::WinUICommunity.GlyphCode.E848);
                userType.AddEnumValue("E849", global::WinUICommunity.GlyphCode.E849);
                userType.AddEnumValue("E84A", global::WinUICommunity.GlyphCode.E84A);
                userType.AddEnumValue("E84B", global::WinUICommunity.GlyphCode.E84B);
                userType.AddEnumValue("E84C", global::WinUICommunity.GlyphCode.E84C);
                userType.AddEnumValue("E84D", global::WinUICommunity.GlyphCode.E84D);
                userType.AddEnumValue("E84E", global::WinUICommunity.GlyphCode.E84E);
                userType.AddEnumValue("E84F", global::WinUICommunity.GlyphCode.E84F);
                userType.AddEnumValue("E850", global::WinUICommunity.GlyphCode.E850);
                userType.AddEnumValue("E851", global::WinUICommunity.GlyphCode.E851);
                userType.AddEnumValue("E852", global::WinUICommunity.GlyphCode.E852);
                userType.AddEnumValue("E853", global::WinUICommunity.GlyphCode.E853);
                userType.AddEnumValue("E854", global::WinUICommunity.GlyphCode.E854);
                userType.AddEnumValue("E855", global::WinUICommunity.GlyphCode.E855);
                userType.AddEnumValue("E856", global::WinUICommunity.GlyphCode.E856);
                userType.AddEnumValue("E857", global::WinUICommunity.GlyphCode.E857);
                userType.AddEnumValue("E858", global::WinUICommunity.GlyphCode.E858);
                userType.AddEnumValue("E859", global::WinUICommunity.GlyphCode.E859);
                userType.AddEnumValue("E85A", global::WinUICommunity.GlyphCode.E85A);
                userType.AddEnumValue("E85B", global::WinUICommunity.GlyphCode.E85B);
                userType.AddEnumValue("E85C", global::WinUICommunity.GlyphCode.E85C);
                userType.AddEnumValue("E85D", global::WinUICommunity.GlyphCode.E85D);
                userType.AddEnumValue("E85E", global::WinUICommunity.GlyphCode.E85E);
                userType.AddEnumValue("E85F", global::WinUICommunity.GlyphCode.E85F);
                userType.AddEnumValue("E860", global::WinUICommunity.GlyphCode.E860);
                userType.AddEnumValue("E861", global::WinUICommunity.GlyphCode.E861);
                userType.AddEnumValue("E862", global::WinUICommunity.GlyphCode.E862);
                userType.AddEnumValue("E863", global::WinUICommunity.GlyphCode.E863);
                userType.AddEnumValue("E864", global::WinUICommunity.GlyphCode.E864);
                userType.AddEnumValue("E865", global::WinUICommunity.GlyphCode.E865);
                userType.AddEnumValue("E866", global::WinUICommunity.GlyphCode.E866);
                userType.AddEnumValue("E867", global::WinUICommunity.GlyphCode.E867);
                userType.AddEnumValue("E868", global::WinUICommunity.GlyphCode.E868);
                userType.AddEnumValue("E869", global::WinUICommunity.GlyphCode.E869);
                userType.AddEnumValue("E86A", global::WinUICommunity.GlyphCode.E86A);
                userType.AddEnumValue("E86B", global::WinUICommunity.GlyphCode.E86B);
                userType.AddEnumValue("E86C", global::WinUICommunity.GlyphCode.E86C);
                userType.AddEnumValue("E86D", global::WinUICommunity.GlyphCode.E86D);
                userType.AddEnumValue("E86E", global::WinUICommunity.GlyphCode.E86E);
                userType.AddEnumValue("E86F", global::WinUICommunity.GlyphCode.E86F);
                userType.AddEnumValue("E870", global::WinUICommunity.GlyphCode.E870);
                userType.AddEnumValue("E871", global::WinUICommunity.GlyphCode.E871);
                userType.AddEnumValue("E872", global::WinUICommunity.GlyphCode.E872);
                userType.AddEnumValue("E873", global::WinUICommunity.GlyphCode.E873);
                userType.AddEnumValue("E874", global::WinUICommunity.GlyphCode.E874);
                userType.AddEnumValue("E875", global::WinUICommunity.GlyphCode.E875);
                userType.AddEnumValue("E876", global::WinUICommunity.GlyphCode.E876);
                userType.AddEnumValue("E877", global::WinUICommunity.GlyphCode.E877);
                userType.AddEnumValue("E878", global::WinUICommunity.GlyphCode.E878);
                userType.AddEnumValue("E879", global::WinUICommunity.GlyphCode.E879);
                userType.AddEnumValue("E87A", global::WinUICommunity.GlyphCode.E87A);
                userType.AddEnumValue("E87B", global::WinUICommunity.GlyphCode.E87B);
                userType.AddEnumValue("E87C", global::WinUICommunity.GlyphCode.E87C);
                userType.AddEnumValue("E87D", global::WinUICommunity.GlyphCode.E87D);
                userType.AddEnumValue("E87E", global::WinUICommunity.GlyphCode.E87E);
                userType.AddEnumValue("E87F", global::WinUICommunity.GlyphCode.E87F);
                userType.AddEnumValue("E880", global::WinUICommunity.GlyphCode.E880);
                userType.AddEnumValue("E881", global::WinUICommunity.GlyphCode.E881);
                userType.AddEnumValue("E882", global::WinUICommunity.GlyphCode.E882);
                userType.AddEnumValue("E883", global::WinUICommunity.GlyphCode.E883);
                userType.AddEnumValue("E884", global::WinUICommunity.GlyphCode.E884);
                userType.AddEnumValue("E885", global::WinUICommunity.GlyphCode.E885);
                userType.AddEnumValue("E886", global::WinUICommunity.GlyphCode.E886);
                userType.AddEnumValue("E887", global::WinUICommunity.GlyphCode.E887);
                userType.AddEnumValue("E888", global::WinUICommunity.GlyphCode.E888);
                userType.AddEnumValue("E889", global::WinUICommunity.GlyphCode.E889);
                userType.AddEnumValue("E88A", global::WinUICommunity.GlyphCode.E88A);
                userType.AddEnumValue("E88B", global::WinUICommunity.GlyphCode.E88B);
                userType.AddEnumValue("E88C", global::WinUICommunity.GlyphCode.E88C);
                userType.AddEnumValue("E88D", global::WinUICommunity.GlyphCode.E88D);
                userType.AddEnumValue("E88E", global::WinUICommunity.GlyphCode.E88E);
                userType.AddEnumValue("E88F", global::WinUICommunity.GlyphCode.E88F);
                userType.AddEnumValue("E890", global::WinUICommunity.GlyphCode.E890);
                userType.AddEnumValue("E891", global::WinUICommunity.GlyphCode.E891);
                userType.AddEnumValue("E892", global::WinUICommunity.GlyphCode.E892);
                userType.AddEnumValue("E893", global::WinUICommunity.GlyphCode.E893);
                userType.AddEnumValue("E894", global::WinUICommunity.GlyphCode.E894);
                userType.AddEnumValue("E895", global::WinUICommunity.GlyphCode.E895);
                userType.AddEnumValue("E896", global::WinUICommunity.GlyphCode.E896);
                userType.AddEnumValue("E897", global::WinUICommunity.GlyphCode.E897);
                userType.AddEnumValue("E898", global::WinUICommunity.GlyphCode.E898);
                userType.AddEnumValue("E899", global::WinUICommunity.GlyphCode.E899);
                userType.AddEnumValue("E89A", global::WinUICommunity.GlyphCode.E89A);
                userType.AddEnumValue("E89B", global::WinUICommunity.GlyphCode.E89B);
                userType.AddEnumValue("E89C", global::WinUICommunity.GlyphCode.E89C);
                userType.AddEnumValue("E89E", global::WinUICommunity.GlyphCode.E89E);
                userType.AddEnumValue("E89F", global::WinUICommunity.GlyphCode.E89F);
                userType.AddEnumValue("E8A0", global::WinUICommunity.GlyphCode.E8A0);
                userType.AddEnumValue("E8A1", global::WinUICommunity.GlyphCode.E8A1);
                userType.AddEnumValue("E8A2", global::WinUICommunity.GlyphCode.E8A2);
                userType.AddEnumValue("E8A3", global::WinUICommunity.GlyphCode.E8A3);
                userType.AddEnumValue("E8A4", global::WinUICommunity.GlyphCode.E8A4);
                userType.AddEnumValue("E8A5", global::WinUICommunity.GlyphCode.E8A5);
                userType.AddEnumValue("E8A6", global::WinUICommunity.GlyphCode.E8A6);
                userType.AddEnumValue("E8A7", global::WinUICommunity.GlyphCode.E8A7);
                userType.AddEnumValue("E8A8", global::WinUICommunity.GlyphCode.E8A8);
                userType.AddEnumValue("E8A9", global::WinUICommunity.GlyphCode.E8A9);
                userType.AddEnumValue("E8AA", global::WinUICommunity.GlyphCode.E8AA);
                userType.AddEnumValue("E8AB", global::WinUICommunity.GlyphCode.E8AB);
                userType.AddEnumValue("E8AC", global::WinUICommunity.GlyphCode.E8AC);
                userType.AddEnumValue("E8AD", global::WinUICommunity.GlyphCode.E8AD);
                userType.AddEnumValue("E8AE", global::WinUICommunity.GlyphCode.E8AE);
                userType.AddEnumValue("E8AF", global::WinUICommunity.GlyphCode.E8AF);
                userType.AddEnumValue("E8B0", global::WinUICommunity.GlyphCode.E8B0);
                userType.AddEnumValue("E8B1", global::WinUICommunity.GlyphCode.E8B1);
                userType.AddEnumValue("E8B2", global::WinUICommunity.GlyphCode.E8B2);
                userType.AddEnumValue("E8B3", global::WinUICommunity.GlyphCode.E8B3);
                userType.AddEnumValue("E8B4", global::WinUICommunity.GlyphCode.E8B4);
                userType.AddEnumValue("E8B5", global::WinUICommunity.GlyphCode.E8B5);
                userType.AddEnumValue("E8B6", global::WinUICommunity.GlyphCode.E8B6);
                userType.AddEnumValue("E8B7", global::WinUICommunity.GlyphCode.E8B7);
                userType.AddEnumValue("E8B8", global::WinUICommunity.GlyphCode.E8B8);
                userType.AddEnumValue("E8B9", global::WinUICommunity.GlyphCode.E8B9);
                userType.AddEnumValue("E8BA", global::WinUICommunity.GlyphCode.E8BA);
                userType.AddEnumValue("E8BB", global::WinUICommunity.GlyphCode.E8BB);
                userType.AddEnumValue("E8BC", global::WinUICommunity.GlyphCode.E8BC);
                userType.AddEnumValue("E8BD", global::WinUICommunity.GlyphCode.E8BD);
                userType.AddEnumValue("E8BE", global::WinUICommunity.GlyphCode.E8BE);
                userType.AddEnumValue("E8BF", global::WinUICommunity.GlyphCode.E8BF);
                userType.AddEnumValue("E8C0", global::WinUICommunity.GlyphCode.E8C0);
                userType.AddEnumValue("E8C1", global::WinUICommunity.GlyphCode.E8C1);
                userType.AddEnumValue("E8C2", global::WinUICommunity.GlyphCode.E8C2);
                userType.AddEnumValue("E8C3", global::WinUICommunity.GlyphCode.E8C3);
                userType.AddEnumValue("E8C4", global::WinUICommunity.GlyphCode.E8C4);
                userType.AddEnumValue("E8C5", global::WinUICommunity.GlyphCode.E8C5);
                userType.AddEnumValue("E8C6", global::WinUICommunity.GlyphCode.E8C6);
                userType.AddEnumValue("E8C7", global::WinUICommunity.GlyphCode.E8C7);
                userType.AddEnumValue("E8C8", global::WinUICommunity.GlyphCode.E8C8);
                userType.AddEnumValue("E8C9", global::WinUICommunity.GlyphCode.E8C9);
                userType.AddEnumValue("E8CA", global::WinUICommunity.GlyphCode.E8CA);
                userType.AddEnumValue("E8CB", global::WinUICommunity.GlyphCode.E8CB);
                userType.AddEnumValue("E8CC", global::WinUICommunity.GlyphCode.E8CC);
                userType.AddEnumValue("E8CD", global::WinUICommunity.GlyphCode.E8CD);
                userType.AddEnumValue("E8CE", global::WinUICommunity.GlyphCode.E8CE);
                userType.AddEnumValue("E8CF", global::WinUICommunity.GlyphCode.E8CF);
                userType.AddEnumValue("E8D0", global::WinUICommunity.GlyphCode.E8D0);
                userType.AddEnumValue("E8D1", global::WinUICommunity.GlyphCode.E8D1);
                userType.AddEnumValue("E8D2", global::WinUICommunity.GlyphCode.E8D2);
                userType.AddEnumValue("E8D3", global::WinUICommunity.GlyphCode.E8D3);
                userType.AddEnumValue("E8D4", global::WinUICommunity.GlyphCode.E8D4);
                userType.AddEnumValue("E8D5", global::WinUICommunity.GlyphCode.E8D5);
                userType.AddEnumValue("E8D6", global::WinUICommunity.GlyphCode.E8D6);
                userType.AddEnumValue("E8D7", global::WinUICommunity.GlyphCode.E8D7);
                userType.AddEnumValue("E8D8", global::WinUICommunity.GlyphCode.E8D8);
                userType.AddEnumValue("E8D9", global::WinUICommunity.GlyphCode.E8D9);
                userType.AddEnumValue("E8DA", global::WinUICommunity.GlyphCode.E8DA);
                userType.AddEnumValue("E8DB", global::WinUICommunity.GlyphCode.E8DB);
                userType.AddEnumValue("E8DC", global::WinUICommunity.GlyphCode.E8DC);
                userType.AddEnumValue("E8DD", global::WinUICommunity.GlyphCode.E8DD);
                userType.AddEnumValue("E8DE", global::WinUICommunity.GlyphCode.E8DE);
                userType.AddEnumValue("E8DF", global::WinUICommunity.GlyphCode.E8DF);
                userType.AddEnumValue("E8E0", global::WinUICommunity.GlyphCode.E8E0);
                userType.AddEnumValue("E8E1", global::WinUICommunity.GlyphCode.E8E1);
                userType.AddEnumValue("E8E2", global::WinUICommunity.GlyphCode.E8E2);
                userType.AddEnumValue("E8E3", global::WinUICommunity.GlyphCode.E8E3);
                userType.AddEnumValue("E8E4", global::WinUICommunity.GlyphCode.E8E4);
                userType.AddEnumValue("E8E5", global::WinUICommunity.GlyphCode.E8E5);
                userType.AddEnumValue("E8E6", global::WinUICommunity.GlyphCode.E8E6);
                userType.AddEnumValue("E8E7", global::WinUICommunity.GlyphCode.E8E7);
                userType.AddEnumValue("E8E8", global::WinUICommunity.GlyphCode.E8E8);
                userType.AddEnumValue("E8E9", global::WinUICommunity.GlyphCode.E8E9);
                userType.AddEnumValue("E8EA", global::WinUICommunity.GlyphCode.E8EA);
                userType.AddEnumValue("E8EB", global::WinUICommunity.GlyphCode.E8EB);
                userType.AddEnumValue("E8EC", global::WinUICommunity.GlyphCode.E8EC);
                userType.AddEnumValue("E8ED", global::WinUICommunity.GlyphCode.E8ED);
                userType.AddEnumValue("E8EE", global::WinUICommunity.GlyphCode.E8EE);
                userType.AddEnumValue("E8EF", global::WinUICommunity.GlyphCode.E8EF);
                userType.AddEnumValue("E8F0", global::WinUICommunity.GlyphCode.E8F0);
                userType.AddEnumValue("E8F1", global::WinUICommunity.GlyphCode.E8F1);
                userType.AddEnumValue("E8F2", global::WinUICommunity.GlyphCode.E8F2);
                userType.AddEnumValue("E8F3", global::WinUICommunity.GlyphCode.E8F3);
                userType.AddEnumValue("E8F4", global::WinUICommunity.GlyphCode.E8F4);
                userType.AddEnumValue("E8F5", global::WinUICommunity.GlyphCode.E8F5);
                userType.AddEnumValue("E8F6", global::WinUICommunity.GlyphCode.E8F6);
                userType.AddEnumValue("E8F7", global::WinUICommunity.GlyphCode.E8F7);
                userType.AddEnumValue("E8F8", global::WinUICommunity.GlyphCode.E8F8);
                userType.AddEnumValue("E8F9", global::WinUICommunity.GlyphCode.E8F9);
                userType.AddEnumValue("E8FA", global::WinUICommunity.GlyphCode.E8FA);
                userType.AddEnumValue("E8FB", global::WinUICommunity.GlyphCode.E8FB);
                userType.AddEnumValue("E8FC", global::WinUICommunity.GlyphCode.E8FC);
                userType.AddEnumValue("E8FD", global::WinUICommunity.GlyphCode.E8FD);
                userType.AddEnumValue("E8FE", global::WinUICommunity.GlyphCode.E8FE);
                userType.AddEnumValue("E8FF", global::WinUICommunity.GlyphCode.E8FF);
                userType.AddEnumValue("E902", global::WinUICommunity.GlyphCode.E902);
                userType.AddEnumValue("E904", global::WinUICommunity.GlyphCode.E904);
                userType.AddEnumValue("E905", global::WinUICommunity.GlyphCode.E905);
                userType.AddEnumValue("E906", global::WinUICommunity.GlyphCode.E906);
                userType.AddEnumValue("E907", global::WinUICommunity.GlyphCode.E907);
                userType.AddEnumValue("E908", global::WinUICommunity.GlyphCode.E908);
                userType.AddEnumValue("E909", global::WinUICommunity.GlyphCode.E909);
                userType.AddEnumValue("E90A", global::WinUICommunity.GlyphCode.E90A);
                userType.AddEnumValue("E90B", global::WinUICommunity.GlyphCode.E90B);
                userType.AddEnumValue("E90C", global::WinUICommunity.GlyphCode.E90C);
                userType.AddEnumValue("E90D", global::WinUICommunity.GlyphCode.E90D);
                userType.AddEnumValue("E90E", global::WinUICommunity.GlyphCode.E90E);
                userType.AddEnumValue("E90F", global::WinUICommunity.GlyphCode.E90F);
                userType.AddEnumValue("E910", global::WinUICommunity.GlyphCode.E910);
                userType.AddEnumValue("E911", global::WinUICommunity.GlyphCode.E911);
                userType.AddEnumValue("E912", global::WinUICommunity.GlyphCode.E912);
                userType.AddEnumValue("E913", global::WinUICommunity.GlyphCode.E913);
                userType.AddEnumValue("E914", global::WinUICommunity.GlyphCode.E914);
                userType.AddEnumValue("E915", global::WinUICommunity.GlyphCode.E915);
                userType.AddEnumValue("E916", global::WinUICommunity.GlyphCode.E916);
                userType.AddEnumValue("E91B", global::WinUICommunity.GlyphCode.E91B);
                userType.AddEnumValue("E91C", global::WinUICommunity.GlyphCode.E91C);
                userType.AddEnumValue("E91F", global::WinUICommunity.GlyphCode.E91F);
                userType.AddEnumValue("E921", global::WinUICommunity.GlyphCode.E921);
                userType.AddEnumValue("E922", global::WinUICommunity.GlyphCode.E922);
                userType.AddEnumValue("E923", global::WinUICommunity.GlyphCode.E923);
                userType.AddEnumValue("E924", global::WinUICommunity.GlyphCode.E924);
                userType.AddEnumValue("E925", global::WinUICommunity.GlyphCode.E925);
                userType.AddEnumValue("E926", global::WinUICommunity.GlyphCode.E926);
                userType.AddEnumValue("E927", global::WinUICommunity.GlyphCode.E927);
                userType.AddEnumValue("E928", global::WinUICommunity.GlyphCode.E928);
                userType.AddEnumValue("E929", global::WinUICommunity.GlyphCode.E929);
                userType.AddEnumValue("E92C", global::WinUICommunity.GlyphCode.E92C);
                userType.AddEnumValue("E92D", global::WinUICommunity.GlyphCode.E92D);
                userType.AddEnumValue("E92E", global::WinUICommunity.GlyphCode.E92E);
                userType.AddEnumValue("E92F", global::WinUICommunity.GlyphCode.E92F);
                userType.AddEnumValue("E930", global::WinUICommunity.GlyphCode.E930);
                userType.AddEnumValue("E931", global::WinUICommunity.GlyphCode.E931);
                userType.AddEnumValue("E932", global::WinUICommunity.GlyphCode.E932);
                userType.AddEnumValue("E933", global::WinUICommunity.GlyphCode.E933);
                userType.AddEnumValue("E934", global::WinUICommunity.GlyphCode.E934);
                userType.AddEnumValue("E935", global::WinUICommunity.GlyphCode.E935);
                userType.AddEnumValue("E936", global::WinUICommunity.GlyphCode.E936);
                userType.AddEnumValue("E937", global::WinUICommunity.GlyphCode.E937);
                userType.AddEnumValue("E938", global::WinUICommunity.GlyphCode.E938);
                userType.AddEnumValue("E939", global::WinUICommunity.GlyphCode.E939);
                userType.AddEnumValue("E93C", global::WinUICommunity.GlyphCode.E93C);
                userType.AddEnumValue("E93E", global::WinUICommunity.GlyphCode.E93E);
                userType.AddEnumValue("E943", global::WinUICommunity.GlyphCode.E943);
                userType.AddEnumValue("E944", global::WinUICommunity.GlyphCode.E944);
                userType.AddEnumValue("E945", global::WinUICommunity.GlyphCode.E945);
                userType.AddEnumValue("E946", global::WinUICommunity.GlyphCode.E946);
                userType.AddEnumValue("E947", global::WinUICommunity.GlyphCode.E947);
                userType.AddEnumValue("E948", global::WinUICommunity.GlyphCode.E948);
                userType.AddEnumValue("E949", global::WinUICommunity.GlyphCode.E949);
                userType.AddEnumValue("E94A", global::WinUICommunity.GlyphCode.E94A);
                userType.AddEnumValue("E94B", global::WinUICommunity.GlyphCode.E94B);
                userType.AddEnumValue("E94C", global::WinUICommunity.GlyphCode.E94C);
                userType.AddEnumValue("E94D", global::WinUICommunity.GlyphCode.E94D);
                userType.AddEnumValue("E94E", global::WinUICommunity.GlyphCode.E94E);
                userType.AddEnumValue("E94F", global::WinUICommunity.GlyphCode.E94F);
                userType.AddEnumValue("E950", global::WinUICommunity.GlyphCode.E950);
                userType.AddEnumValue("E951", global::WinUICommunity.GlyphCode.E951);
                userType.AddEnumValue("E952", global::WinUICommunity.GlyphCode.E952);
                userType.AddEnumValue("E953", global::WinUICommunity.GlyphCode.E953);
                userType.AddEnumValue("E954", global::WinUICommunity.GlyphCode.E954);
                userType.AddEnumValue("E955", global::WinUICommunity.GlyphCode.E955);
                userType.AddEnumValue("E956", global::WinUICommunity.GlyphCode.E956);
                userType.AddEnumValue("E957", global::WinUICommunity.GlyphCode.E957);
                userType.AddEnumValue("E958", global::WinUICommunity.GlyphCode.E958);
                userType.AddEnumValue("E95A", global::WinUICommunity.GlyphCode.E95A);
                userType.AddEnumValue("E95B", global::WinUICommunity.GlyphCode.E95B);
                userType.AddEnumValue("E95D", global::WinUICommunity.GlyphCode.E95D);
                userType.AddEnumValue("E95E", global::WinUICommunity.GlyphCode.E95E);
                userType.AddEnumValue("E95F", global::WinUICommunity.GlyphCode.E95F);
                userType.AddEnumValue("E960", global::WinUICommunity.GlyphCode.E960);
                userType.AddEnumValue("E961", global::WinUICommunity.GlyphCode.E961);
                userType.AddEnumValue("E962", global::WinUICommunity.GlyphCode.E962);
                userType.AddEnumValue("E963", global::WinUICommunity.GlyphCode.E963);
                userType.AddEnumValue("E964", global::WinUICommunity.GlyphCode.E964);
                userType.AddEnumValue("E965", global::WinUICommunity.GlyphCode.E965);
                userType.AddEnumValue("E966", global::WinUICommunity.GlyphCode.E966);
                userType.AddEnumValue("E967", global::WinUICommunity.GlyphCode.E967);
                userType.AddEnumValue("E968", global::WinUICommunity.GlyphCode.E968);
                userType.AddEnumValue("E969", global::WinUICommunity.GlyphCode.E969);
                userType.AddEnumValue("E96A", global::WinUICommunity.GlyphCode.E96A);
                userType.AddEnumValue("E96D", global::WinUICommunity.GlyphCode.E96D);
                userType.AddEnumValue("E96E", global::WinUICommunity.GlyphCode.E96E);
                userType.AddEnumValue("E96F", global::WinUICommunity.GlyphCode.E96F);
                userType.AddEnumValue("E970", global::WinUICommunity.GlyphCode.E970);
                userType.AddEnumValue("E971", global::WinUICommunity.GlyphCode.E971);
                userType.AddEnumValue("E972", global::WinUICommunity.GlyphCode.E972);
                userType.AddEnumValue("E973", global::WinUICommunity.GlyphCode.E973);
                userType.AddEnumValue("E974", global::WinUICommunity.GlyphCode.E974);
                userType.AddEnumValue("E975", global::WinUICommunity.GlyphCode.E975);
                userType.AddEnumValue("E976", global::WinUICommunity.GlyphCode.E976);
                userType.AddEnumValue("E977", global::WinUICommunity.GlyphCode.E977);
                userType.AddEnumValue("E978", global::WinUICommunity.GlyphCode.E978);
                userType.AddEnumValue("E979", global::WinUICommunity.GlyphCode.E979);
                userType.AddEnumValue("E97A", global::WinUICommunity.GlyphCode.E97A);
                userType.AddEnumValue("E97B", global::WinUICommunity.GlyphCode.E97B);
                userType.AddEnumValue("E97C", global::WinUICommunity.GlyphCode.E97C);
                userType.AddEnumValue("E97D", global::WinUICommunity.GlyphCode.E97D);
                userType.AddEnumValue("E97E", global::WinUICommunity.GlyphCode.E97E);
                userType.AddEnumValue("E97F", global::WinUICommunity.GlyphCode.E97F);
                userType.AddEnumValue("E980", global::WinUICommunity.GlyphCode.E980);
                userType.AddEnumValue("E981", global::WinUICommunity.GlyphCode.E981);
                userType.AddEnumValue("E982", global::WinUICommunity.GlyphCode.E982);
                userType.AddEnumValue("E983", global::WinUICommunity.GlyphCode.E983);
                userType.AddEnumValue("E984", global::WinUICommunity.GlyphCode.E984);
                userType.AddEnumValue("E985", global::WinUICommunity.GlyphCode.E985);
                userType.AddEnumValue("E986", global::WinUICommunity.GlyphCode.E986);
                userType.AddEnumValue("E987", global::WinUICommunity.GlyphCode.E987);
                userType.AddEnumValue("E988", global::WinUICommunity.GlyphCode.E988);
                userType.AddEnumValue("E989", global::WinUICommunity.GlyphCode.E989);
                userType.AddEnumValue("E98A", global::WinUICommunity.GlyphCode.E98A);
                userType.AddEnumValue("E98F", global::WinUICommunity.GlyphCode.E98F);
                userType.AddEnumValue("E990", global::WinUICommunity.GlyphCode.E990);
                userType.AddEnumValue("E992", global::WinUICommunity.GlyphCode.E992);
                userType.AddEnumValue("E993", global::WinUICommunity.GlyphCode.E993);
                userType.AddEnumValue("E994", global::WinUICommunity.GlyphCode.E994);
                userType.AddEnumValue("E995", global::WinUICommunity.GlyphCode.E995);
                userType.AddEnumValue("E996", global::WinUICommunity.GlyphCode.E996);
                userType.AddEnumValue("E998", global::WinUICommunity.GlyphCode.E998);
                userType.AddEnumValue("E99A", global::WinUICommunity.GlyphCode.E99A);
                userType.AddEnumValue("E9A1", global::WinUICommunity.GlyphCode.E9A1);
                userType.AddEnumValue("E9A6", global::WinUICommunity.GlyphCode.E9A6);
                userType.AddEnumValue("E9A8", global::WinUICommunity.GlyphCode.E9A8);
                userType.AddEnumValue("E9A9", global::WinUICommunity.GlyphCode.E9A9);
                userType.AddEnumValue("E9AA", global::WinUICommunity.GlyphCode.E9AA);
                userType.AddEnumValue("E9AB", global::WinUICommunity.GlyphCode.E9AB);
                userType.AddEnumValue("E9AC", global::WinUICommunity.GlyphCode.E9AC);
                userType.AddEnumValue("E9AD", global::WinUICommunity.GlyphCode.E9AD);
                userType.AddEnumValue("E9AE", global::WinUICommunity.GlyphCode.E9AE);
                userType.AddEnumValue("E9AF", global::WinUICommunity.GlyphCode.E9AF);
                userType.AddEnumValue("E9B0", global::WinUICommunity.GlyphCode.E9B0);
                userType.AddEnumValue("E9B1", global::WinUICommunity.GlyphCode.E9B1);
                userType.AddEnumValue("E9B2", global::WinUICommunity.GlyphCode.E9B2);
                userType.AddEnumValue("E9B3", global::WinUICommunity.GlyphCode.E9B3);
                userType.AddEnumValue("E9B4", global::WinUICommunity.GlyphCode.E9B4);
                userType.AddEnumValue("E9B5", global::WinUICommunity.GlyphCode.E9B5);
                userType.AddEnumValue("E9B6", global::WinUICommunity.GlyphCode.E9B6);
                userType.AddEnumValue("E9B7", global::WinUICommunity.GlyphCode.E9B7);
                userType.AddEnumValue("E9B8", global::WinUICommunity.GlyphCode.E9B8);
                userType.AddEnumValue("E9B9", global::WinUICommunity.GlyphCode.E9B9);
                userType.AddEnumValue("E9BA", global::WinUICommunity.GlyphCode.E9BA);
                userType.AddEnumValue("E9BB", global::WinUICommunity.GlyphCode.E9BB);
                userType.AddEnumValue("E9BC", global::WinUICommunity.GlyphCode.E9BC);
                userType.AddEnumValue("E9CA", global::WinUICommunity.GlyphCode.E9CA);
                userType.AddEnumValue("E9CE", global::WinUICommunity.GlyphCode.E9CE);
                userType.AddEnumValue("E9D2", global::WinUICommunity.GlyphCode.E9D2);
                userType.AddEnumValue("E9D5", global::WinUICommunity.GlyphCode.E9D5);
                userType.AddEnumValue("E9D9", global::WinUICommunity.GlyphCode.E9D9);
                userType.AddEnumValue("E9E9", global::WinUICommunity.GlyphCode.E9E9);
                userType.AddEnumValue("E9F3", global::WinUICommunity.GlyphCode.E9F3);
                userType.AddEnumValue("E9F5", global::WinUICommunity.GlyphCode.E9F5);
                userType.AddEnumValue("E9F9", global::WinUICommunity.GlyphCode.E9F9);
                userType.AddEnumValue("EA0C", global::WinUICommunity.GlyphCode.EA0C);
                userType.AddEnumValue("EA0D", global::WinUICommunity.GlyphCode.EA0D);
                userType.AddEnumValue("EA14", global::WinUICommunity.GlyphCode.EA14);
                userType.AddEnumValue("EA18", global::WinUICommunity.GlyphCode.EA18);
                userType.AddEnumValue("EA1F", global::WinUICommunity.GlyphCode.EA1F);
                userType.AddEnumValue("EA21", global::WinUICommunity.GlyphCode.EA21);
                userType.AddEnumValue("EA24", global::WinUICommunity.GlyphCode.EA24);
                userType.AddEnumValue("EA35", global::WinUICommunity.GlyphCode.EA35);
                userType.AddEnumValue("EA37", global::WinUICommunity.GlyphCode.EA37);
                userType.AddEnumValue("EA38", global::WinUICommunity.GlyphCode.EA38);
                userType.AddEnumValue("EA39", global::WinUICommunity.GlyphCode.EA39);
                userType.AddEnumValue("EA3A", global::WinUICommunity.GlyphCode.EA3A);
                userType.AddEnumValue("EA3B", global::WinUICommunity.GlyphCode.EA3B);
                userType.AddEnumValue("EA3C", global::WinUICommunity.GlyphCode.EA3C);
                userType.AddEnumValue("EA3D", global::WinUICommunity.GlyphCode.EA3D);
                userType.AddEnumValue("EA3F", global::WinUICommunity.GlyphCode.EA3F);
                userType.AddEnumValue("EA40", global::WinUICommunity.GlyphCode.EA40);
                userType.AddEnumValue("EA41", global::WinUICommunity.GlyphCode.EA41);
                userType.AddEnumValue("EA42", global::WinUICommunity.GlyphCode.EA42);
                userType.AddEnumValue("EA43", global::WinUICommunity.GlyphCode.EA43);
                userType.AddEnumValue("EA44", global::WinUICommunity.GlyphCode.EA44);
                userType.AddEnumValue("EA47", global::WinUICommunity.GlyphCode.EA47);
                userType.AddEnumValue("EA48", global::WinUICommunity.GlyphCode.EA48);
                userType.AddEnumValue("EA49", global::WinUICommunity.GlyphCode.EA49);
                userType.AddEnumValue("EA4A", global::WinUICommunity.GlyphCode.EA4A);
                userType.AddEnumValue("EA4B", global::WinUICommunity.GlyphCode.EA4B);
                userType.AddEnumValue("EA4C", global::WinUICommunity.GlyphCode.EA4C);
                userType.AddEnumValue("EA4E", global::WinUICommunity.GlyphCode.EA4E);
                userType.AddEnumValue("EA4F", global::WinUICommunity.GlyphCode.EA4F);
                userType.AddEnumValue("EA50", global::WinUICommunity.GlyphCode.EA50);
                userType.AddEnumValue("EA51", global::WinUICommunity.GlyphCode.EA51);
                userType.AddEnumValue("EA52", global::WinUICommunity.GlyphCode.EA52);
                userType.AddEnumValue("EA53", global::WinUICommunity.GlyphCode.EA53);
                userType.AddEnumValue("EA54", global::WinUICommunity.GlyphCode.EA54);
                userType.AddEnumValue("EA55", global::WinUICommunity.GlyphCode.EA55);
                userType.AddEnumValue("EA56", global::WinUICommunity.GlyphCode.EA56);
                userType.AddEnumValue("EA57", global::WinUICommunity.GlyphCode.EA57);
                userType.AddEnumValue("EA58", global::WinUICommunity.GlyphCode.EA58);
                userType.AddEnumValue("EA5B", global::WinUICommunity.GlyphCode.EA5B);
                userType.AddEnumValue("EA5C", global::WinUICommunity.GlyphCode.EA5C);
                userType.AddEnumValue("EA5E", global::WinUICommunity.GlyphCode.EA5E);
                userType.AddEnumValue("EA5F", global::WinUICommunity.GlyphCode.EA5F);
                userType.AddEnumValue("EA60", global::WinUICommunity.GlyphCode.EA60);
                userType.AddEnumValue("EA61", global::WinUICommunity.GlyphCode.EA61);
                userType.AddEnumValue("EA62", global::WinUICommunity.GlyphCode.EA62);
                userType.AddEnumValue("EA63", global::WinUICommunity.GlyphCode.EA63);
                userType.AddEnumValue("EA64", global::WinUICommunity.GlyphCode.EA64);
                userType.AddEnumValue("EA65", global::WinUICommunity.GlyphCode.EA65);
                userType.AddEnumValue("EA69", global::WinUICommunity.GlyphCode.EA69);
                userType.AddEnumValue("EA6A", global::WinUICommunity.GlyphCode.EA6A);
                userType.AddEnumValue("EA6C", global::WinUICommunity.GlyphCode.EA6C);
                userType.AddEnumValue("EA79", global::WinUICommunity.GlyphCode.EA79);
                userType.AddEnumValue("EA80", global::WinUICommunity.GlyphCode.EA80);
                userType.AddEnumValue("EA81", global::WinUICommunity.GlyphCode.EA81);
                userType.AddEnumValue("EA82", global::WinUICommunity.GlyphCode.EA82);
                userType.AddEnumValue("EA83", global::WinUICommunity.GlyphCode.EA83);
                userType.AddEnumValue("EA84", global::WinUICommunity.GlyphCode.EA84);
                userType.AddEnumValue("EA86", global::WinUICommunity.GlyphCode.EA86);
                userType.AddEnumValue("EA89", global::WinUICommunity.GlyphCode.EA89);
                userType.AddEnumValue("EA8A", global::WinUICommunity.GlyphCode.EA8A);
                userType.AddEnumValue("EA8B", global::WinUICommunity.GlyphCode.EA8B);
                userType.AddEnumValue("EA8C", global::WinUICommunity.GlyphCode.EA8C);
                userType.AddEnumValue("EA8D", global::WinUICommunity.GlyphCode.EA8D);
                userType.AddEnumValue("EA8E", global::WinUICommunity.GlyphCode.EA8E);
                userType.AddEnumValue("EA8F", global::WinUICommunity.GlyphCode.EA8F);
                userType.AddEnumValue("EA90", global::WinUICommunity.GlyphCode.EA90);
                userType.AddEnumValue("EA91", global::WinUICommunity.GlyphCode.EA91);
                userType.AddEnumValue("EA92", global::WinUICommunity.GlyphCode.EA92);
                userType.AddEnumValue("EA93", global::WinUICommunity.GlyphCode.EA93);
                userType.AddEnumValue("EA94", global::WinUICommunity.GlyphCode.EA94);
                userType.AddEnumValue("EA95", global::WinUICommunity.GlyphCode.EA95);
                userType.AddEnumValue("EA97", global::WinUICommunity.GlyphCode.EA97);
                userType.AddEnumValue("EA98", global::WinUICommunity.GlyphCode.EA98);
                userType.AddEnumValue("EA99", global::WinUICommunity.GlyphCode.EA99);
                userType.AddEnumValue("EAC2", global::WinUICommunity.GlyphCode.EAC2);
                userType.AddEnumValue("EADF", global::WinUICommunity.GlyphCode.EADF);
                userType.AddEnumValue("EAFC", global::WinUICommunity.GlyphCode.EAFC);
                userType.AddEnumValue("EB05", global::WinUICommunity.GlyphCode.EB05);
                userType.AddEnumValue("EB0F", global::WinUICommunity.GlyphCode.EB0F);
                userType.AddEnumValue("EB11", global::WinUICommunity.GlyphCode.EB11);
                userType.AddEnumValue("EB3C", global::WinUICommunity.GlyphCode.EB3C);
                userType.AddEnumValue("EB41", global::WinUICommunity.GlyphCode.EB41);
                userType.AddEnumValue("EB42", global::WinUICommunity.GlyphCode.EB42);
                userType.AddEnumValue("EB44", global::WinUICommunity.GlyphCode.EB44);
                userType.AddEnumValue("EB47", global::WinUICommunity.GlyphCode.EB47);
                userType.AddEnumValue("EB48", global::WinUICommunity.GlyphCode.EB48);
                userType.AddEnumValue("EB49", global::WinUICommunity.GlyphCode.EB49);
                userType.AddEnumValue("EB4A", global::WinUICommunity.GlyphCode.EB4A);
                userType.AddEnumValue("EB4B", global::WinUICommunity.GlyphCode.EB4B);
                userType.AddEnumValue("EB4C", global::WinUICommunity.GlyphCode.EB4C);
                userType.AddEnumValue("EB4D", global::WinUICommunity.GlyphCode.EB4D);
                userType.AddEnumValue("EB4E", global::WinUICommunity.GlyphCode.EB4E);
                userType.AddEnumValue("EB4F", global::WinUICommunity.GlyphCode.EB4F);
                userType.AddEnumValue("EB50", global::WinUICommunity.GlyphCode.EB50);
                userType.AddEnumValue("EB51", global::WinUICommunity.GlyphCode.EB51);
                userType.AddEnumValue("EB52", global::WinUICommunity.GlyphCode.EB52);
                userType.AddEnumValue("EB55", global::WinUICommunity.GlyphCode.EB55);
                userType.AddEnumValue("EB56", global::WinUICommunity.GlyphCode.EB56);
                userType.AddEnumValue("EB57", global::WinUICommunity.GlyphCode.EB57);
                userType.AddEnumValue("EB58", global::WinUICommunity.GlyphCode.EB58);
                userType.AddEnumValue("EB59", global::WinUICommunity.GlyphCode.EB59);
                userType.AddEnumValue("EB5A", global::WinUICommunity.GlyphCode.EB5A);
                userType.AddEnumValue("EB5B", global::WinUICommunity.GlyphCode.EB5B);
                userType.AddEnumValue("EB5C", global::WinUICommunity.GlyphCode.EB5C);
                userType.AddEnumValue("EB5D", global::WinUICommunity.GlyphCode.EB5D);
                userType.AddEnumValue("EB5E", global::WinUICommunity.GlyphCode.EB5E);
                userType.AddEnumValue("EB5F", global::WinUICommunity.GlyphCode.EB5F);
                userType.AddEnumValue("EB60", global::WinUICommunity.GlyphCode.EB60);
                userType.AddEnumValue("EB61", global::WinUICommunity.GlyphCode.EB61);
                userType.AddEnumValue("EB62", global::WinUICommunity.GlyphCode.EB62);
                userType.AddEnumValue("EB63", global::WinUICommunity.GlyphCode.EB63);
                userType.AddEnumValue("EB66", global::WinUICommunity.GlyphCode.EB66);
                userType.AddEnumValue("EB67", global::WinUICommunity.GlyphCode.EB67);
                userType.AddEnumValue("EB68", global::WinUICommunity.GlyphCode.EB68);
                userType.AddEnumValue("EB77", global::WinUICommunity.GlyphCode.EB77);
                userType.AddEnumValue("EB7E", global::WinUICommunity.GlyphCode.EB7E);
                userType.AddEnumValue("EB82", global::WinUICommunity.GlyphCode.EB82);
                userType.AddEnumValue("EB83", global::WinUICommunity.GlyphCode.EB83);
                userType.AddEnumValue("EB84", global::WinUICommunity.GlyphCode.EB84);
                userType.AddEnumValue("EB85", global::WinUICommunity.GlyphCode.EB85);
                userType.AddEnumValue("EB86", global::WinUICommunity.GlyphCode.EB86);
                userType.AddEnumValue("EB87", global::WinUICommunity.GlyphCode.EB87);
                userType.AddEnumValue("EB88", global::WinUICommunity.GlyphCode.EB88);
                userType.AddEnumValue("EB89", global::WinUICommunity.GlyphCode.EB89);
                userType.AddEnumValue("EB8A", global::WinUICommunity.GlyphCode.EB8A);
                userType.AddEnumValue("EB8B", global::WinUICommunity.GlyphCode.EB8B);
                userType.AddEnumValue("EB8C", global::WinUICommunity.GlyphCode.EB8C);
                userType.AddEnumValue("EB8D", global::WinUICommunity.GlyphCode.EB8D);
                userType.AddEnumValue("EB90", global::WinUICommunity.GlyphCode.EB90);
                userType.AddEnumValue("EB91", global::WinUICommunity.GlyphCode.EB91);
                userType.AddEnumValue("EB95", global::WinUICommunity.GlyphCode.EB95);
                userType.AddEnumValue("EB96", global::WinUICommunity.GlyphCode.EB96);
                userType.AddEnumValue("EB97", global::WinUICommunity.GlyphCode.EB97);
                userType.AddEnumValue("EB9D", global::WinUICommunity.GlyphCode.EB9D);
                userType.AddEnumValue("EB9E", global::WinUICommunity.GlyphCode.EB9E);
                userType.AddEnumValue("EB9F", global::WinUICommunity.GlyphCode.EB9F);
                userType.AddEnumValue("EBA0", global::WinUICommunity.GlyphCode.EBA0);
                userType.AddEnumValue("EBA1", global::WinUICommunity.GlyphCode.EBA1);
                userType.AddEnumValue("EBA2", global::WinUICommunity.GlyphCode.EBA2);
                userType.AddEnumValue("EBA3", global::WinUICommunity.GlyphCode.EBA3);
                userType.AddEnumValue("EBA4", global::WinUICommunity.GlyphCode.EBA4);
                userType.AddEnumValue("EBA5", global::WinUICommunity.GlyphCode.EBA5);
                userType.AddEnumValue("EBA6", global::WinUICommunity.GlyphCode.EBA6);
                userType.AddEnumValue("EBA7", global::WinUICommunity.GlyphCode.EBA7);
                userType.AddEnumValue("EBA8", global::WinUICommunity.GlyphCode.EBA8);
                userType.AddEnumValue("EBA9", global::WinUICommunity.GlyphCode.EBA9);
                userType.AddEnumValue("EBAA", global::WinUICommunity.GlyphCode.EBAA);
                userType.AddEnumValue("EBAB", global::WinUICommunity.GlyphCode.EBAB);
                userType.AddEnumValue("EBAC", global::WinUICommunity.GlyphCode.EBAC);
                userType.AddEnumValue("EBAD", global::WinUICommunity.GlyphCode.EBAD);
                userType.AddEnumValue("EBAE", global::WinUICommunity.GlyphCode.EBAE);
                userType.AddEnumValue("EBAF", global::WinUICommunity.GlyphCode.EBAF);
                userType.AddEnumValue("EBB0", global::WinUICommunity.GlyphCode.EBB0);
                userType.AddEnumValue("EBB1", global::WinUICommunity.GlyphCode.EBB1);
                userType.AddEnumValue("EBB2", global::WinUICommunity.GlyphCode.EBB2);
                userType.AddEnumValue("EBB3", global::WinUICommunity.GlyphCode.EBB3);
                userType.AddEnumValue("EBB4", global::WinUICommunity.GlyphCode.EBB4);
                userType.AddEnumValue("EBB5", global::WinUICommunity.GlyphCode.EBB5);
                userType.AddEnumValue("EBB6", global::WinUICommunity.GlyphCode.EBB6);
                userType.AddEnumValue("EBB7", global::WinUICommunity.GlyphCode.EBB7);
                userType.AddEnumValue("EBB8", global::WinUICommunity.GlyphCode.EBB8);
                userType.AddEnumValue("EBB9", global::WinUICommunity.GlyphCode.EBB9);
                userType.AddEnumValue("EBBA", global::WinUICommunity.GlyphCode.EBBA);
                userType.AddEnumValue("EBBB", global::WinUICommunity.GlyphCode.EBBB);
                userType.AddEnumValue("EBBC", global::WinUICommunity.GlyphCode.EBBC);
                userType.AddEnumValue("EBBD", global::WinUICommunity.GlyphCode.EBBD);
                userType.AddEnumValue("EBBE", global::WinUICommunity.GlyphCode.EBBE);
                userType.AddEnumValue("EBBF", global::WinUICommunity.GlyphCode.EBBF);
                userType.AddEnumValue("EBC0", global::WinUICommunity.GlyphCode.EBC0);
                userType.AddEnumValue("EBC3", global::WinUICommunity.GlyphCode.EBC3);
                userType.AddEnumValue("EBC4", global::WinUICommunity.GlyphCode.EBC4);
                userType.AddEnumValue("EBC5", global::WinUICommunity.GlyphCode.EBC5);
                userType.AddEnumValue("EBC6", global::WinUICommunity.GlyphCode.EBC6);
                userType.AddEnumValue("EBD2", global::WinUICommunity.GlyphCode.EBD2);
                userType.AddEnumValue("EBD3", global::WinUICommunity.GlyphCode.EBD3);
                userType.AddEnumValue("EBD4", global::WinUICommunity.GlyphCode.EBD4);
                userType.AddEnumValue("EBD5", global::WinUICommunity.GlyphCode.EBD5);
                userType.AddEnumValue("EBD6", global::WinUICommunity.GlyphCode.EBD6);
                userType.AddEnumValue("EBD7", global::WinUICommunity.GlyphCode.EBD7);
                userType.AddEnumValue("EBD8", global::WinUICommunity.GlyphCode.EBD8);
                userType.AddEnumValue("EBD9", global::WinUICommunity.GlyphCode.EBD9);
                userType.AddEnumValue("EBDA", global::WinUICommunity.GlyphCode.EBDA);
                userType.AddEnumValue("EBDB", global::WinUICommunity.GlyphCode.EBDB);
                userType.AddEnumValue("EBDE", global::WinUICommunity.GlyphCode.EBDE);
                userType.AddEnumValue("EBE6", global::WinUICommunity.GlyphCode.EBE6);
                userType.AddEnumValue("EBE7", global::WinUICommunity.GlyphCode.EBE7);
                userType.AddEnumValue("EBE8", global::WinUICommunity.GlyphCode.EBE8);
                userType.AddEnumValue("EBFC", global::WinUICommunity.GlyphCode.EBFC);
                userType.AddEnumValue("EBFD", global::WinUICommunity.GlyphCode.EBFD);
                userType.AddEnumValue("EBFE", global::WinUICommunity.GlyphCode.EBFE);
                userType.AddEnumValue("EBFF", global::WinUICommunity.GlyphCode.EBFF);
                userType.AddEnumValue("EC00", global::WinUICommunity.GlyphCode.EC00);
                userType.AddEnumValue("EC02", global::WinUICommunity.GlyphCode.EC02);
                userType.AddEnumValue("EC05", global::WinUICommunity.GlyphCode.EC05);
                userType.AddEnumValue("EC06", global::WinUICommunity.GlyphCode.EC06);
                userType.AddEnumValue("EC07", global::WinUICommunity.GlyphCode.EC07);
                userType.AddEnumValue("EC08", global::WinUICommunity.GlyphCode.EC08);
                userType.AddEnumValue("EC09", global::WinUICommunity.GlyphCode.EC09);
                userType.AddEnumValue("EC0A", global::WinUICommunity.GlyphCode.EC0A);
                userType.AddEnumValue("EC0B", global::WinUICommunity.GlyphCode.EC0B);
                userType.AddEnumValue("EC11", global::WinUICommunity.GlyphCode.EC11);
                userType.AddEnumValue("EC12", global::WinUICommunity.GlyphCode.EC12);
                userType.AddEnumValue("EC13", global::WinUICommunity.GlyphCode.EC13);
                userType.AddEnumValue("EC14", global::WinUICommunity.GlyphCode.EC14);
                userType.AddEnumValue("EC15", global::WinUICommunity.GlyphCode.EC15);
                userType.AddEnumValue("EC16", global::WinUICommunity.GlyphCode.EC16);
                userType.AddEnumValue("EC19", global::WinUICommunity.GlyphCode.EC19);
                userType.AddEnumValue("EC1B", global::WinUICommunity.GlyphCode.EC1B);
                userType.AddEnumValue("EC1E", global::WinUICommunity.GlyphCode.EC1E);
                userType.AddEnumValue("EC20", global::WinUICommunity.GlyphCode.EC20);
                userType.AddEnumValue("EC24", global::WinUICommunity.GlyphCode.EC24);
                userType.AddEnumValue("EC25", global::WinUICommunity.GlyphCode.EC25);
                userType.AddEnumValue("EC26", global::WinUICommunity.GlyphCode.EC26);
                userType.AddEnumValue("EC27", global::WinUICommunity.GlyphCode.EC27);
                userType.AddEnumValue("EC31", global::WinUICommunity.GlyphCode.EC31);
                userType.AddEnumValue("EC32", global::WinUICommunity.GlyphCode.EC32);
                userType.AddEnumValue("EC37", global::WinUICommunity.GlyphCode.EC37);
                userType.AddEnumValue("EC38", global::WinUICommunity.GlyphCode.EC38);
                userType.AddEnumValue("EC39", global::WinUICommunity.GlyphCode.EC39);
                userType.AddEnumValue("EC3A", global::WinUICommunity.GlyphCode.EC3A);
                userType.AddEnumValue("EC3B", global::WinUICommunity.GlyphCode.EC3B);
                userType.AddEnumValue("EC3C", global::WinUICommunity.GlyphCode.EC3C);
                userType.AddEnumValue("EC3D", global::WinUICommunity.GlyphCode.EC3D);
                userType.AddEnumValue("EC3E", global::WinUICommunity.GlyphCode.EC3E);
                userType.AddEnumValue("EC3F", global::WinUICommunity.GlyphCode.EC3F);
                userType.AddEnumValue("EC40", global::WinUICommunity.GlyphCode.EC40);
                userType.AddEnumValue("EC41", global::WinUICommunity.GlyphCode.EC41);
                userType.AddEnumValue("EC42", global::WinUICommunity.GlyphCode.EC42);
                userType.AddEnumValue("EC43", global::WinUICommunity.GlyphCode.EC43);
                userType.AddEnumValue("EC44", global::WinUICommunity.GlyphCode.EC44);
                userType.AddEnumValue("EC45", global::WinUICommunity.GlyphCode.EC45);
                userType.AddEnumValue("EC46", global::WinUICommunity.GlyphCode.EC46);
                userType.AddEnumValue("EC47", global::WinUICommunity.GlyphCode.EC47);
                userType.AddEnumValue("EC48", global::WinUICommunity.GlyphCode.EC48);
                userType.AddEnumValue("EC49", global::WinUICommunity.GlyphCode.EC49);
                userType.AddEnumValue("EC4A", global::WinUICommunity.GlyphCode.EC4A);
                userType.AddEnumValue("EC4E", global::WinUICommunity.GlyphCode.EC4E);
                userType.AddEnumValue("EC4F", global::WinUICommunity.GlyphCode.EC4F);
                userType.AddEnumValue("EC50", global::WinUICommunity.GlyphCode.EC50);
                userType.AddEnumValue("EC51", global::WinUICommunity.GlyphCode.EC51);
                userType.AddEnumValue("EC52", global::WinUICommunity.GlyphCode.EC52);
                userType.AddEnumValue("EC54", global::WinUICommunity.GlyphCode.EC54);
                userType.AddEnumValue("EC55", global::WinUICommunity.GlyphCode.EC55);
                userType.AddEnumValue("EC56", global::WinUICommunity.GlyphCode.EC56);
                userType.AddEnumValue("EC57", global::WinUICommunity.GlyphCode.EC57);
                userType.AddEnumValue("EC58", global::WinUICommunity.GlyphCode.EC58);
                userType.AddEnumValue("EC59", global::WinUICommunity.GlyphCode.EC59);
                userType.AddEnumValue("EC5A", global::WinUICommunity.GlyphCode.EC5A);
                userType.AddEnumValue("EC5B", global::WinUICommunity.GlyphCode.EC5B);
                userType.AddEnumValue("EC5C", global::WinUICommunity.GlyphCode.EC5C);
                userType.AddEnumValue("EC61", global::WinUICommunity.GlyphCode.EC61);
                userType.AddEnumValue("EC64", global::WinUICommunity.GlyphCode.EC64);
                userType.AddEnumValue("EC6C", global::WinUICommunity.GlyphCode.EC6C);
                userType.AddEnumValue("EC6D", global::WinUICommunity.GlyphCode.EC6D);
                userType.AddEnumValue("EC71", global::WinUICommunity.GlyphCode.EC71);
                userType.AddEnumValue("EC72", global::WinUICommunity.GlyphCode.EC72);
                userType.AddEnumValue("EC74", global::WinUICommunity.GlyphCode.EC74);
                userType.AddEnumValue("EC75", global::WinUICommunity.GlyphCode.EC75);
                userType.AddEnumValue("EC76", global::WinUICommunity.GlyphCode.EC76);
                userType.AddEnumValue("EC77", global::WinUICommunity.GlyphCode.EC77);
                userType.AddEnumValue("EC7A", global::WinUICommunity.GlyphCode.EC7A);
                userType.AddEnumValue("EC7E", global::WinUICommunity.GlyphCode.EC7E);
                userType.AddEnumValue("EC7F", global::WinUICommunity.GlyphCode.EC7F);
                userType.AddEnumValue("EC80", global::WinUICommunity.GlyphCode.EC80);
                userType.AddEnumValue("EC81", global::WinUICommunity.GlyphCode.EC81);
                userType.AddEnumValue("EC87", global::WinUICommunity.GlyphCode.EC87);
                userType.AddEnumValue("EC88", global::WinUICommunity.GlyphCode.EC88);
                userType.AddEnumValue("EC8A", global::WinUICommunity.GlyphCode.EC8A);
                userType.AddEnumValue("EC8F", global::WinUICommunity.GlyphCode.EC8F);
                userType.AddEnumValue("EC92", global::WinUICommunity.GlyphCode.EC92);
                userType.AddEnumValue("EC94", global::WinUICommunity.GlyphCode.EC94);
                userType.AddEnumValue("ECA5", global::WinUICommunity.GlyphCode.ECA5);
                userType.AddEnumValue("ECA7", global::WinUICommunity.GlyphCode.ECA7);
                userType.AddEnumValue("ECAA", global::WinUICommunity.GlyphCode.ECAA);
                userType.AddEnumValue("ECAD", global::WinUICommunity.GlyphCode.ECAD);
                userType.AddEnumValue("ECAF", global::WinUICommunity.GlyphCode.ECAF);
                userType.AddEnumValue("ECB9", global::WinUICommunity.GlyphCode.ECB9);
                userType.AddEnumValue("ECBA", global::WinUICommunity.GlyphCode.ECBA);
                userType.AddEnumValue("ECBB", global::WinUICommunity.GlyphCode.ECBB);
                userType.AddEnumValue("ECBC", global::WinUICommunity.GlyphCode.ECBC);
                userType.AddEnumValue("ECBD", global::WinUICommunity.GlyphCode.ECBD);
                userType.AddEnumValue("ECBE", global::WinUICommunity.GlyphCode.ECBE);
                userType.AddEnumValue("ECBF", global::WinUICommunity.GlyphCode.ECBF);
                userType.AddEnumValue("ECC4", global::WinUICommunity.GlyphCode.ECC4);
                userType.AddEnumValue("ECC5", global::WinUICommunity.GlyphCode.ECC5);
                userType.AddEnumValue("ECC6", global::WinUICommunity.GlyphCode.ECC6);
                userType.AddEnumValue("ECC8", global::WinUICommunity.GlyphCode.ECC8);
                userType.AddEnumValue("ECC9", global::WinUICommunity.GlyphCode.ECC9);
                userType.AddEnumValue("ECCA", global::WinUICommunity.GlyphCode.ECCA);
                userType.AddEnumValue("ECCB", global::WinUICommunity.GlyphCode.ECCB);
                userType.AddEnumValue("ECCC", global::WinUICommunity.GlyphCode.ECCC);
                userType.AddEnumValue("ECCD", global::WinUICommunity.GlyphCode.ECCD);
                userType.AddEnumValue("ECE4", global::WinUICommunity.GlyphCode.ECE4);
                userType.AddEnumValue("ECE7", global::WinUICommunity.GlyphCode.ECE7);
                userType.AddEnumValue("ECE8", global::WinUICommunity.GlyphCode.ECE8);
                userType.AddEnumValue("ECE9", global::WinUICommunity.GlyphCode.ECE9);
                userType.AddEnumValue("ECF0", global::WinUICommunity.GlyphCode.ECF0);
                userType.AddEnumValue("ECF1", global::WinUICommunity.GlyphCode.ECF1);
                userType.AddEnumValue("ECF3", global::WinUICommunity.GlyphCode.ECF3);
                userType.AddEnumValue("ED0C", global::WinUICommunity.GlyphCode.ED0C);
                userType.AddEnumValue("ED0D", global::WinUICommunity.GlyphCode.ED0D);
                userType.AddEnumValue("ED0E", global::WinUICommunity.GlyphCode.ED0E);
                userType.AddEnumValue("ED10", global::WinUICommunity.GlyphCode.ED10);
                userType.AddEnumValue("ED11", global::WinUICommunity.GlyphCode.ED11);
                userType.AddEnumValue("ED14", global::WinUICommunity.GlyphCode.ED14);
                userType.AddEnumValue("ED15", global::WinUICommunity.GlyphCode.ED15);
                userType.AddEnumValue("ED1A", global::WinUICommunity.GlyphCode.ED1A);
                userType.AddEnumValue("ED1E", global::WinUICommunity.GlyphCode.ED1E);
                userType.AddEnumValue("ED1F", global::WinUICommunity.GlyphCode.ED1F);
                userType.AddEnumValue("ED25", global::WinUICommunity.GlyphCode.ED25);
                userType.AddEnumValue("ED28", global::WinUICommunity.GlyphCode.ED28);
                userType.AddEnumValue("ED2A", global::WinUICommunity.GlyphCode.ED2A);
                userType.AddEnumValue("ED2B", global::WinUICommunity.GlyphCode.ED2B);
                userType.AddEnumValue("ED2C", global::WinUICommunity.GlyphCode.ED2C);
                userType.AddEnumValue("ED2D", global::WinUICommunity.GlyphCode.ED2D);
                userType.AddEnumValue("ED2E", global::WinUICommunity.GlyphCode.ED2E);
                userType.AddEnumValue("ED2F", global::WinUICommunity.GlyphCode.ED2F);
                userType.AddEnumValue("ED30", global::WinUICommunity.GlyphCode.ED30);
                userType.AddEnumValue("ED31", global::WinUICommunity.GlyphCode.ED31);
                userType.AddEnumValue("ED32", global::WinUICommunity.GlyphCode.ED32);
                userType.AddEnumValue("ED33", global::WinUICommunity.GlyphCode.ED33);
                userType.AddEnumValue("ED35", global::WinUICommunity.GlyphCode.ED35);
                userType.AddEnumValue("ED39", global::WinUICommunity.GlyphCode.ED39);
                userType.AddEnumValue("ED3A", global::WinUICommunity.GlyphCode.ED3A);
                userType.AddEnumValue("ED3C", global::WinUICommunity.GlyphCode.ED3C);
                userType.AddEnumValue("ED3D", global::WinUICommunity.GlyphCode.ED3D);
                userType.AddEnumValue("ED41", global::WinUICommunity.GlyphCode.ED41);
                userType.AddEnumValue("ED42", global::WinUICommunity.GlyphCode.ED42);
                userType.AddEnumValue("ED43", global::WinUICommunity.GlyphCode.ED43);
                userType.AddEnumValue("ED44", global::WinUICommunity.GlyphCode.ED44);
                userType.AddEnumValue("ED47", global::WinUICommunity.GlyphCode.ED47);
                userType.AddEnumValue("ED4C", global::WinUICommunity.GlyphCode.ED4C);
                userType.AddEnumValue("ED4D", global::WinUICommunity.GlyphCode.ED4D);
                userType.AddEnumValue("ED53", global::WinUICommunity.GlyphCode.ED53);
                userType.AddEnumValue("ED54", global::WinUICommunity.GlyphCode.ED54);
                userType.AddEnumValue("ED55", global::WinUICommunity.GlyphCode.ED55);
                userType.AddEnumValue("ED56", global::WinUICommunity.GlyphCode.ED56);
                userType.AddEnumValue("ED57", global::WinUICommunity.GlyphCode.ED57);
                userType.AddEnumValue("ED58", global::WinUICommunity.GlyphCode.ED58);
                userType.AddEnumValue("ED59", global::WinUICommunity.GlyphCode.ED59);
                userType.AddEnumValue("ED5A", global::WinUICommunity.GlyphCode.ED5A);
                userType.AddEnumValue("ED5B", global::WinUICommunity.GlyphCode.ED5B);
                userType.AddEnumValue("ED5C", global::WinUICommunity.GlyphCode.ED5C);
                userType.AddEnumValue("ED5D", global::WinUICommunity.GlyphCode.ED5D);
                userType.AddEnumValue("ED5E", global::WinUICommunity.GlyphCode.ED5E);
                userType.AddEnumValue("ED5F", global::WinUICommunity.GlyphCode.ED5F);
                userType.AddEnumValue("ED60", global::WinUICommunity.GlyphCode.ED60);
                userType.AddEnumValue("ED61", global::WinUICommunity.GlyphCode.ED61);
                userType.AddEnumValue("ED62", global::WinUICommunity.GlyphCode.ED62);
                userType.AddEnumValue("ED63", global::WinUICommunity.GlyphCode.ED63);
                userType.AddEnumValue("ED64", global::WinUICommunity.GlyphCode.ED64);
                userType.AddEnumValue("ED65", global::WinUICommunity.GlyphCode.ED65);
                userType.AddEnumValue("ED66", global::WinUICommunity.GlyphCode.ED66);
                userType.AddEnumValue("ED67", global::WinUICommunity.GlyphCode.ED67);
                userType.AddEnumValue("EDA2", global::WinUICommunity.GlyphCode.EDA2);
                userType.AddEnumValue("EDA3", global::WinUICommunity.GlyphCode.EDA3);
                userType.AddEnumValue("EDA4", global::WinUICommunity.GlyphCode.EDA4);
                userType.AddEnumValue("EDA5", global::WinUICommunity.GlyphCode.EDA5);
                userType.AddEnumValue("EDA6", global::WinUICommunity.GlyphCode.EDA6);
                userType.AddEnumValue("EDA7", global::WinUICommunity.GlyphCode.EDA7);
                userType.AddEnumValue("EDA8", global::WinUICommunity.GlyphCode.EDA8);
                userType.AddEnumValue("EDA9", global::WinUICommunity.GlyphCode.EDA9);
                userType.AddEnumValue("EDAA", global::WinUICommunity.GlyphCode.EDAA);
                userType.AddEnumValue("EDAB", global::WinUICommunity.GlyphCode.EDAB);
                userType.AddEnumValue("EDAC", global::WinUICommunity.GlyphCode.EDAC);
                userType.AddEnumValue("EDAD", global::WinUICommunity.GlyphCode.EDAD);
                userType.AddEnumValue("EDAE", global::WinUICommunity.GlyphCode.EDAE);
                userType.AddEnumValue("EDAF", global::WinUICommunity.GlyphCode.EDAF);
                userType.AddEnumValue("EDB0", global::WinUICommunity.GlyphCode.EDB0);
                userType.AddEnumValue("EDB1", global::WinUICommunity.GlyphCode.EDB1);
                userType.AddEnumValue("EDB3", global::WinUICommunity.GlyphCode.EDB3);
                userType.AddEnumValue("EDB4", global::WinUICommunity.GlyphCode.EDB4);
                userType.AddEnumValue("EDB5", global::WinUICommunity.GlyphCode.EDB5);
                userType.AddEnumValue("EDC6", global::WinUICommunity.GlyphCode.EDC6);
                userType.AddEnumValue("EDD5", global::WinUICommunity.GlyphCode.EDD5);
                userType.AddEnumValue("EDD6", global::WinUICommunity.GlyphCode.EDD6);
                userType.AddEnumValue("EDD7", global::WinUICommunity.GlyphCode.EDD7);
                userType.AddEnumValue("EDD8", global::WinUICommunity.GlyphCode.EDD8);
                userType.AddEnumValue("EDD9", global::WinUICommunity.GlyphCode.EDD9);
                userType.AddEnumValue("EDDA", global::WinUICommunity.GlyphCode.EDDA);
                userType.AddEnumValue("EDDB", global::WinUICommunity.GlyphCode.EDDB);
                userType.AddEnumValue("EDDC", global::WinUICommunity.GlyphCode.EDDC);
                userType.AddEnumValue("EDE0", global::WinUICommunity.GlyphCode.EDE0);
                userType.AddEnumValue("EDE1", global::WinUICommunity.GlyphCode.EDE1);
                userType.AddEnumValue("EDE2", global::WinUICommunity.GlyphCode.EDE2);
                userType.AddEnumValue("EDE3", global::WinUICommunity.GlyphCode.EDE3);
                userType.AddEnumValue("EDE4", global::WinUICommunity.GlyphCode.EDE4);
                userType.AddEnumValue("EDE5", global::WinUICommunity.GlyphCode.EDE5);
                userType.AddEnumValue("EDFB", global::WinUICommunity.GlyphCode.EDFB);
                userType.AddEnumValue("EE35", global::WinUICommunity.GlyphCode.EE35);
                userType.AddEnumValue("EE3F", global::WinUICommunity.GlyphCode.EE3F);
                userType.AddEnumValue("EE40", global::WinUICommunity.GlyphCode.EE40);
                userType.AddEnumValue("EE47", global::WinUICommunity.GlyphCode.EE47);
                userType.AddEnumValue("EE49", global::WinUICommunity.GlyphCode.EE49);
                userType.AddEnumValue("EE4A", global::WinUICommunity.GlyphCode.EE4A);
                userType.AddEnumValue("EE56", global::WinUICommunity.GlyphCode.EE56);
                userType.AddEnumValue("EE57", global::WinUICommunity.GlyphCode.EE57);
                userType.AddEnumValue("EE63", global::WinUICommunity.GlyphCode.EE63);
                userType.AddEnumValue("EE64", global::WinUICommunity.GlyphCode.EE64);
                userType.AddEnumValue("EE65", global::WinUICommunity.GlyphCode.EE65);
                userType.AddEnumValue("EE6F", global::WinUICommunity.GlyphCode.EE6F);
                userType.AddEnumValue("EE71", global::WinUICommunity.GlyphCode.EE71);
                userType.AddEnumValue("EE77", global::WinUICommunity.GlyphCode.EE77);
                userType.AddEnumValue("EE79", global::WinUICommunity.GlyphCode.EE79);
                userType.AddEnumValue("EE7A", global::WinUICommunity.GlyphCode.EE7A);
                userType.AddEnumValue("EE92", global::WinUICommunity.GlyphCode.EE92);
                userType.AddEnumValue("EE93", global::WinUICommunity.GlyphCode.EE93);
                userType.AddEnumValue("EE94", global::WinUICommunity.GlyphCode.EE94);
                userType.AddEnumValue("EEA3", global::WinUICommunity.GlyphCode.EEA3);
                userType.AddEnumValue("EECA", global::WinUICommunity.GlyphCode.EECA);
                userType.AddEnumValue("EF15", global::WinUICommunity.GlyphCode.EF15);
                userType.AddEnumValue("EF16", global::WinUICommunity.GlyphCode.EF16);
                userType.AddEnumValue("EF17", global::WinUICommunity.GlyphCode.EF17);
                userType.AddEnumValue("EF18", global::WinUICommunity.GlyphCode.EF18);
                userType.AddEnumValue("EF19", global::WinUICommunity.GlyphCode.EF19);
                userType.AddEnumValue("EF1F", global::WinUICommunity.GlyphCode.EF1F);
                userType.AddEnumValue("EF20", global::WinUICommunity.GlyphCode.EF20);
                userType.AddEnumValue("EF2C", global::WinUICommunity.GlyphCode.EF2C);
                userType.AddEnumValue("EF2D", global::WinUICommunity.GlyphCode.EF2D);
                userType.AddEnumValue("EF2E", global::WinUICommunity.GlyphCode.EF2E);
                userType.AddEnumValue("EF2F", global::WinUICommunity.GlyphCode.EF2F);
                userType.AddEnumValue("EF31", global::WinUICommunity.GlyphCode.EF31);
                userType.AddEnumValue("EF3B", global::WinUICommunity.GlyphCode.EF3B);
                userType.AddEnumValue("EF3C", global::WinUICommunity.GlyphCode.EF3C);
                userType.AddEnumValue("EF3D", global::WinUICommunity.GlyphCode.EF3D);
                userType.AddEnumValue("EF3E", global::WinUICommunity.GlyphCode.EF3E);
                userType.AddEnumValue("EF3F", global::WinUICommunity.GlyphCode.EF3F);
                userType.AddEnumValue("EF40", global::WinUICommunity.GlyphCode.EF40);
                userType.AddEnumValue("EF42", global::WinUICommunity.GlyphCode.EF42);
                userType.AddEnumValue("EF58", global::WinUICommunity.GlyphCode.EF58);
                userType.AddEnumValue("EF6B", global::WinUICommunity.GlyphCode.EF6B);
                userType.AddEnumValue("EF90", global::WinUICommunity.GlyphCode.EF90);
                userType.AddEnumValue("EFA5", global::WinUICommunity.GlyphCode.EFA5);
                userType.AddEnumValue("EFA9", global::WinUICommunity.GlyphCode.EFA9);
                userType.AddEnumValue("F000", global::WinUICommunity.GlyphCode.F000);
                userType.AddEnumValue("F003", global::WinUICommunity.GlyphCode.F003);
                userType.AddEnumValue("F012", global::WinUICommunity.GlyphCode.F012);
                userType.AddEnumValue("F080", global::WinUICommunity.GlyphCode.F080);
                userType.AddEnumValue("F081", global::WinUICommunity.GlyphCode.F081);
                userType.AddEnumValue("F085", global::WinUICommunity.GlyphCode.F085);
                userType.AddEnumValue("F08C", global::WinUICommunity.GlyphCode.F08C);
                userType.AddEnumValue("F08D", global::WinUICommunity.GlyphCode.F08D);
                userType.AddEnumValue("F08E", global::WinUICommunity.GlyphCode.F08E);
                userType.AddEnumValue("F08F", global::WinUICommunity.GlyphCode.F08F);
                userType.AddEnumValue("F090", global::WinUICommunity.GlyphCode.F090);
                userType.AddEnumValue("F093", global::WinUICommunity.GlyphCode.F093);
                userType.AddEnumValue("F094", global::WinUICommunity.GlyphCode.F094);
                userType.AddEnumValue("F095", global::WinUICommunity.GlyphCode.F095);
                userType.AddEnumValue("F096", global::WinUICommunity.GlyphCode.F096);
                userType.AddEnumValue("F0AD", global::WinUICommunity.GlyphCode.F0AD);
                userType.AddEnumValue("F0AE", global::WinUICommunity.GlyphCode.F0AE);
                userType.AddEnumValue("F0AF", global::WinUICommunity.GlyphCode.F0AF);
                userType.AddEnumValue("F0B0", global::WinUICommunity.GlyphCode.F0B0);
                userType.AddEnumValue("F0B2", global::WinUICommunity.GlyphCode.F0B2);
                userType.AddEnumValue("F0B3", global::WinUICommunity.GlyphCode.F0B3);
                userType.AddEnumValue("F0B4", global::WinUICommunity.GlyphCode.F0B4);
                userType.AddEnumValue("F0B5", global::WinUICommunity.GlyphCode.F0B5);
                userType.AddEnumValue("F0B6", global::WinUICommunity.GlyphCode.F0B6);
                userType.AddEnumValue("F0B7", global::WinUICommunity.GlyphCode.F0B7);
                userType.AddEnumValue("F0B8", global::WinUICommunity.GlyphCode.F0B8);
                userType.AddEnumValue("F0B9", global::WinUICommunity.GlyphCode.F0B9);
                userType.AddEnumValue("F0C6", global::WinUICommunity.GlyphCode.F0C6);
                userType.AddEnumValue("F0C7", global::WinUICommunity.GlyphCode.F0C7);
                userType.AddEnumValue("F0CA", global::WinUICommunity.GlyphCode.F0CA);
                userType.AddEnumValue("F0CB", global::WinUICommunity.GlyphCode.F0CB);
                userType.AddEnumValue("F0CC", global::WinUICommunity.GlyphCode.F0CC);
                userType.AddEnumValue("F0CD", global::WinUICommunity.GlyphCode.F0CD);
                userType.AddEnumValue("F0CE", global::WinUICommunity.GlyphCode.F0CE);
                userType.AddEnumValue("F0D2", global::WinUICommunity.GlyphCode.F0D2);
                userType.AddEnumValue("F0D3", global::WinUICommunity.GlyphCode.F0D3);
                userType.AddEnumValue("F0D5", global::WinUICommunity.GlyphCode.F0D5);
                userType.AddEnumValue("F0D6", global::WinUICommunity.GlyphCode.F0D6);
                userType.AddEnumValue("F0D7", global::WinUICommunity.GlyphCode.F0D7);
                userType.AddEnumValue("F0D8", global::WinUICommunity.GlyphCode.F0D8);
                userType.AddEnumValue("F0E2", global::WinUICommunity.GlyphCode.F0E2);
                userType.AddEnumValue("F0E3", global::WinUICommunity.GlyphCode.F0E3);
                userType.AddEnumValue("F0E4", global::WinUICommunity.GlyphCode.F0E4);
                userType.AddEnumValue("F0E5", global::WinUICommunity.GlyphCode.F0E5);
                userType.AddEnumValue("F0E6", global::WinUICommunity.GlyphCode.F0E6);
                userType.AddEnumValue("F0E7", global::WinUICommunity.GlyphCode.F0E7);
                userType.AddEnumValue("F0E8", global::WinUICommunity.GlyphCode.F0E8);
                userType.AddEnumValue("F0E9", global::WinUICommunity.GlyphCode.F0E9);
                userType.AddEnumValue("F0EA", global::WinUICommunity.GlyphCode.F0EA);
                userType.AddEnumValue("F0EB", global::WinUICommunity.GlyphCode.F0EB);
                userType.AddEnumValue("F0EC", global::WinUICommunity.GlyphCode.F0EC);
                userType.AddEnumValue("F0ED", global::WinUICommunity.GlyphCode.F0ED);
                userType.AddEnumValue("F0EE", global::WinUICommunity.GlyphCode.F0EE);
                userType.AddEnumValue("F0EF", global::WinUICommunity.GlyphCode.F0EF);
                userType.AddEnumValue("F0F7", global::WinUICommunity.GlyphCode.F0F7);
                userType.AddEnumValue("F0F8", global::WinUICommunity.GlyphCode.F0F8);
                userType.AddEnumValue("F0F9", global::WinUICommunity.GlyphCode.F0F9);
                userType.AddEnumValue("F0FB", global::WinUICommunity.GlyphCode.F0FB);
                userType.AddEnumValue("F103", global::WinUICommunity.GlyphCode.F103);
                userType.AddEnumValue("F108", global::WinUICommunity.GlyphCode.F108);
                userType.AddEnumValue("F109", global::WinUICommunity.GlyphCode.F109);
                userType.AddEnumValue("F10A", global::WinUICommunity.GlyphCode.F10A);
                userType.AddEnumValue("F10B", global::WinUICommunity.GlyphCode.F10B);
                userType.AddEnumValue("F10C", global::WinUICommunity.GlyphCode.F10C);
                userType.AddEnumValue("F10D", global::WinUICommunity.GlyphCode.F10D);
                userType.AddEnumValue("F10E", global::WinUICommunity.GlyphCode.F10E);
                userType.AddEnumValue("F110", global::WinUICommunity.GlyphCode.F110);
                userType.AddEnumValue("F111", global::WinUICommunity.GlyphCode.F111);
                userType.AddEnumValue("F119", global::WinUICommunity.GlyphCode.F119);
                userType.AddEnumValue("F11B", global::WinUICommunity.GlyphCode.F11B);
                userType.AddEnumValue("F126", global::WinUICommunity.GlyphCode.F126);
                userType.AddEnumValue("F127", global::WinUICommunity.GlyphCode.F127);
                userType.AddEnumValue("F128", global::WinUICommunity.GlyphCode.F128);
                userType.AddEnumValue("F129", global::WinUICommunity.GlyphCode.F129);
                userType.AddEnumValue("F12A", global::WinUICommunity.GlyphCode.F12A);
                userType.AddEnumValue("F12B", global::WinUICommunity.GlyphCode.F12B);
                userType.AddEnumValue("F12E", global::WinUICommunity.GlyphCode.F12E);
                userType.AddEnumValue("F12F", global::WinUICommunity.GlyphCode.F12F);
                userType.AddEnumValue("F131", global::WinUICommunity.GlyphCode.F131);
                userType.AddEnumValue("F133", global::WinUICommunity.GlyphCode.F133);
                userType.AddEnumValue("F136", global::WinUICommunity.GlyphCode.F136);
                userType.AddEnumValue("F137", global::WinUICommunity.GlyphCode.F137);
                userType.AddEnumValue("F138", global::WinUICommunity.GlyphCode.F138);
                userType.AddEnumValue("F139", global::WinUICommunity.GlyphCode.F139);
                userType.AddEnumValue("F13A", global::WinUICommunity.GlyphCode.F13A);
                userType.AddEnumValue("F13B", global::WinUICommunity.GlyphCode.F13B);
                userType.AddEnumValue("F13C", global::WinUICommunity.GlyphCode.F13C);
                userType.AddEnumValue("F13D", global::WinUICommunity.GlyphCode.F13D);
                userType.AddEnumValue("F13E", global::WinUICommunity.GlyphCode.F13E);
                userType.AddEnumValue("F13F", global::WinUICommunity.GlyphCode.F13F);
                userType.AddEnumValue("F140", global::WinUICommunity.GlyphCode.F140);
                userType.AddEnumValue("F141", global::WinUICommunity.GlyphCode.F141);
                userType.AddEnumValue("F142", global::WinUICommunity.GlyphCode.F142);
                userType.AddEnumValue("F143", global::WinUICommunity.GlyphCode.F143);
                userType.AddEnumValue("F146", global::WinUICommunity.GlyphCode.F146);
                userType.AddEnumValue("F147", global::WinUICommunity.GlyphCode.F147);
                userType.AddEnumValue("F148", global::WinUICommunity.GlyphCode.F148);
                userType.AddEnumValue("F149", global::WinUICommunity.GlyphCode.F149);
                userType.AddEnumValue("F14A", global::WinUICommunity.GlyphCode.F14A);
                userType.AddEnumValue("F14B", global::WinUICommunity.GlyphCode.F14B);
                userType.AddEnumValue("F14C", global::WinUICommunity.GlyphCode.F14C);
                userType.AddEnumValue("F14D", global::WinUICommunity.GlyphCode.F14D);
                userType.AddEnumValue("F14E", global::WinUICommunity.GlyphCode.F14E);
                userType.AddEnumValue("F14F", global::WinUICommunity.GlyphCode.F14F);
                userType.AddEnumValue("F150", global::WinUICommunity.GlyphCode.F150);
                userType.AddEnumValue("F151", global::WinUICommunity.GlyphCode.F151);
                userType.AddEnumValue("F152", global::WinUICommunity.GlyphCode.F152);
                userType.AddEnumValue("F153", global::WinUICommunity.GlyphCode.F153);
                userType.AddEnumValue("F154", global::WinUICommunity.GlyphCode.F154);
                userType.AddEnumValue("F155", global::WinUICommunity.GlyphCode.F155);
                userType.AddEnumValue("F156", global::WinUICommunity.GlyphCode.F156);
                userType.AddEnumValue("F157", global::WinUICommunity.GlyphCode.F157);
                userType.AddEnumValue("F158", global::WinUICommunity.GlyphCode.F158);
                userType.AddEnumValue("F159", global::WinUICommunity.GlyphCode.F159);
                userType.AddEnumValue("F15F", global::WinUICommunity.GlyphCode.F15F);
                userType.AddEnumValue("F161", global::WinUICommunity.GlyphCode.F161);
                userType.AddEnumValue("F163", global::WinUICommunity.GlyphCode.F163);
                userType.AddEnumValue("F164", global::WinUICommunity.GlyphCode.F164);
                userType.AddEnumValue("F165", global::WinUICommunity.GlyphCode.F165);
                userType.AddEnumValue("F166", global::WinUICommunity.GlyphCode.F166);
                userType.AddEnumValue("F167", global::WinUICommunity.GlyphCode.F167);
                userType.AddEnumValue("F168", global::WinUICommunity.GlyphCode.F168);
                userType.AddEnumValue("F169", global::WinUICommunity.GlyphCode.F169);
                userType.AddEnumValue("F16A", global::WinUICommunity.GlyphCode.F16A);
                userType.AddEnumValue("F16B", global::WinUICommunity.GlyphCode.F16B);
                userType.AddEnumValue("F16C", global::WinUICommunity.GlyphCode.F16C);
                userType.AddEnumValue("F16D", global::WinUICommunity.GlyphCode.F16D);
                userType.AddEnumValue("F16E", global::WinUICommunity.GlyphCode.F16E);
                userType.AddEnumValue("F175", global::WinUICommunity.GlyphCode.F175);
                userType.AddEnumValue("F17F", global::WinUICommunity.GlyphCode.F17F);
                userType.AddEnumValue("F180", global::WinUICommunity.GlyphCode.F180);
                userType.AddEnumValue("F182", global::WinUICommunity.GlyphCode.F182);
                userType.AddEnumValue("F191", global::WinUICommunity.GlyphCode.F191);
                userType.AddEnumValue("F193", global::WinUICommunity.GlyphCode.F193);
                userType.AddEnumValue("F19D", global::WinUICommunity.GlyphCode.F19D);
                userType.AddEnumValue("F19E", global::WinUICommunity.GlyphCode.F19E);
                userType.AddEnumValue("F19F", global::WinUICommunity.GlyphCode.F19F);
                userType.AddEnumValue("F1AD", global::WinUICommunity.GlyphCode.F1AD);
                userType.AddEnumValue("F1CB", global::WinUICommunity.GlyphCode.F1CB);
                userType.AddEnumValue("F1CC", global::WinUICommunity.GlyphCode.F1CC);
                userType.AddEnumValue("F1D8", global::WinUICommunity.GlyphCode.F1D8);
                userType.AddEnumValue("F1D9", global::WinUICommunity.GlyphCode.F1D9);
                userType.AddEnumValue("F20C", global::WinUICommunity.GlyphCode.F20C);
                userType.AddEnumValue("F20D", global::WinUICommunity.GlyphCode.F20D);
                userType.AddEnumValue("F210", global::WinUICommunity.GlyphCode.F210);
                userType.AddEnumValue("F211", global::WinUICommunity.GlyphCode.F211);
                userType.AddEnumValue("F22C", global::WinUICommunity.GlyphCode.F22C);
                userType.AddEnumValue("F22E", global::WinUICommunity.GlyphCode.F22E);
                userType.AddEnumValue("F246", global::WinUICommunity.GlyphCode.F246);
                userType.AddEnumValue("F259", global::WinUICommunity.GlyphCode.F259);
                userType.AddEnumValue("F260", global::WinUICommunity.GlyphCode.F260);
                userType.AddEnumValue("F261", global::WinUICommunity.GlyphCode.F261);
                userType.AddEnumValue("F26B", global::WinUICommunity.GlyphCode.F26B);
                userType.AddEnumValue("F26C", global::WinUICommunity.GlyphCode.F26C);
                userType.AddEnumValue("F26D", global::WinUICommunity.GlyphCode.F26D);
                userType.AddEnumValue("F26E", global::WinUICommunity.GlyphCode.F26E);
                userType.AddEnumValue("F270", global::WinUICommunity.GlyphCode.F270);
                userType.AddEnumValue("F271", global::WinUICommunity.GlyphCode.F271);
                userType.AddEnumValue("F272", global::WinUICommunity.GlyphCode.F272);
                userType.AddEnumValue("F28B", global::WinUICommunity.GlyphCode.F28B);
                userType.AddEnumValue("F2B7", global::WinUICommunity.GlyphCode.F2B7);
                userType.AddEnumValue("F32A", global::WinUICommunity.GlyphCode.F32A);
                userType.AddEnumValue("F354", global::WinUICommunity.GlyphCode.F354);
                userType.AddEnumValue("F384", global::WinUICommunity.GlyphCode.F384);
                userType.AddEnumValue("F385", global::WinUICommunity.GlyphCode.F385);
                userType.AddEnumValue("F386", global::WinUICommunity.GlyphCode.F386);
                userType.AddEnumValue("F3B1", global::WinUICommunity.GlyphCode.F3B1);
                userType.AddEnumValue("F3CC", global::WinUICommunity.GlyphCode.F3CC);
                userType.AddEnumValue("F3CD", global::WinUICommunity.GlyphCode.F3CD);
                userType.AddEnumValue("F3E2", global::WinUICommunity.GlyphCode.F3E2);
                userType.AddEnumValue("F3E7", global::WinUICommunity.GlyphCode.F3E7);
                userType.AddEnumValue("F404", global::WinUICommunity.GlyphCode.F404);
                userType.AddEnumValue("F405", global::WinUICommunity.GlyphCode.F405);
                userType.AddEnumValue("F406", global::WinUICommunity.GlyphCode.F406);
                userType.AddEnumValue("F407", global::WinUICommunity.GlyphCode.F407);
                userType.AddEnumValue("F408", global::WinUICommunity.GlyphCode.F408);
                userType.AddEnumValue("F413", global::WinUICommunity.GlyphCode.F413);
                userType.AddEnumValue("F427", global::WinUICommunity.GlyphCode.F427);
                userType.AddEnumValue("F439", global::WinUICommunity.GlyphCode.F439);
                userType.AddEnumValue("F45E", global::WinUICommunity.GlyphCode.F45E);
                userType.AddEnumValue("F45F", global::WinUICommunity.GlyphCode.F45F);
                userType.AddEnumValue("F460", global::WinUICommunity.GlyphCode.F460);
                userType.AddEnumValue("F461", global::WinUICommunity.GlyphCode.F461);
                userType.AddEnumValue("F462", global::WinUICommunity.GlyphCode.F462);
                userType.AddEnumValue("F463", global::WinUICommunity.GlyphCode.F463);
                userType.AddEnumValue("F464", global::WinUICommunity.GlyphCode.F464);
                userType.AddEnumValue("F465", global::WinUICommunity.GlyphCode.F465);
                userType.AddEnumValue("F466", global::WinUICommunity.GlyphCode.F466);
                userType.AddEnumValue("F473", global::WinUICommunity.GlyphCode.F473);
                userType.AddEnumValue("F474", global::WinUICommunity.GlyphCode.F474);
                userType.AddEnumValue("F475", global::WinUICommunity.GlyphCode.F475);
                userType.AddEnumValue("F476", global::WinUICommunity.GlyphCode.F476);
                userType.AddEnumValue("F47F", global::WinUICommunity.GlyphCode.F47F);
                userType.AddEnumValue("F49A", global::WinUICommunity.GlyphCode.F49A);
                userType.AddEnumValue("F4A5", global::WinUICommunity.GlyphCode.F4A5);
                userType.AddEnumValue("F4A9", global::WinUICommunity.GlyphCode.F4A9);
                userType.AddEnumValue("F4AA", global::WinUICommunity.GlyphCode.F4AA);
                userType.AddEnumValue("F4BE", global::WinUICommunity.GlyphCode.F4BE);
                userType.AddEnumValue("F4BF", global::WinUICommunity.GlyphCode.F4BF);
                userType.AddEnumValue("F4C0", global::WinUICommunity.GlyphCode.F4C0);
                userType.AddEnumValue("F4C3", global::WinUICommunity.GlyphCode.F4C3);
                userType.AddEnumValue("F540", global::WinUICommunity.GlyphCode.F540);
                userType.AddEnumValue("F552", global::WinUICommunity.GlyphCode.F552);
                userType.AddEnumValue("F56D", global::WinUICommunity.GlyphCode.F56D);
                userType.AddEnumValue("F56E", global::WinUICommunity.GlyphCode.F56E);
                userType.AddEnumValue("F56F", global::WinUICommunity.GlyphCode.F56F);
                userType.AddEnumValue("F570", global::WinUICommunity.GlyphCode.F570);
                userType.AddEnumValue("F571", global::WinUICommunity.GlyphCode.F571);
                userType.AddEnumValue("F572", global::WinUICommunity.GlyphCode.F572);
                userType.AddEnumValue("F573", global::WinUICommunity.GlyphCode.F573);
                userType.AddEnumValue("F574", global::WinUICommunity.GlyphCode.F574);
                userType.AddEnumValue("F575", global::WinUICommunity.GlyphCode.F575);
                userType.AddEnumValue("F576", global::WinUICommunity.GlyphCode.F576);
                userType.AddEnumValue("F577", global::WinUICommunity.GlyphCode.F577);
                userType.AddEnumValue("F578", global::WinUICommunity.GlyphCode.F578);
                userType.AddEnumValue("F579", global::WinUICommunity.GlyphCode.F579);
                userType.AddEnumValue("F57A", global::WinUICommunity.GlyphCode.F57A);
                userType.AddEnumValue("F57B", global::WinUICommunity.GlyphCode.F57B);
                userType.AddEnumValue("F57C", global::WinUICommunity.GlyphCode.F57C);
                userType.AddEnumValue("F57D", global::WinUICommunity.GlyphCode.F57D);
                userType.AddEnumValue("F57E", global::WinUICommunity.GlyphCode.F57E);
                userType.AddEnumValue("F57F", global::WinUICommunity.GlyphCode.F57F);
                userType.AddEnumValue("F580", global::WinUICommunity.GlyphCode.F580);
                userType.AddEnumValue("F581", global::WinUICommunity.GlyphCode.F581);
                userType.AddEnumValue("F582", global::WinUICommunity.GlyphCode.F582);
                userType.AddEnumValue("F583", global::WinUICommunity.GlyphCode.F583);
                userType.AddEnumValue("F584", global::WinUICommunity.GlyphCode.F584);
                userType.AddEnumValue("F585", global::WinUICommunity.GlyphCode.F585);
                userType.AddEnumValue("F586", global::WinUICommunity.GlyphCode.F586);
                userType.AddEnumValue("F587", global::WinUICommunity.GlyphCode.F587);
                userType.AddEnumValue("F588", global::WinUICommunity.GlyphCode.F588);
                userType.AddEnumValue("F589", global::WinUICommunity.GlyphCode.F589);
                userType.AddEnumValue("F58A", global::WinUICommunity.GlyphCode.F58A);
                userType.AddEnumValue("F58B", global::WinUICommunity.GlyphCode.F58B);
                userType.AddEnumValue("F58C", global::WinUICommunity.GlyphCode.F58C);
                userType.AddEnumValue("F58D", global::WinUICommunity.GlyphCode.F58D);
                userType.AddEnumValue("F58E", global::WinUICommunity.GlyphCode.F58E);
                userType.AddEnumValue("F58F", global::WinUICommunity.GlyphCode.F58F);
                userType.AddEnumValue("F590", global::WinUICommunity.GlyphCode.F590);
                userType.AddEnumValue("F591", global::WinUICommunity.GlyphCode.F591);
                userType.AddEnumValue("F592", global::WinUICommunity.GlyphCode.F592);
                userType.AddEnumValue("F593", global::WinUICommunity.GlyphCode.F593);
                userType.AddEnumValue("F594", global::WinUICommunity.GlyphCode.F594);
                userType.AddEnumValue("F595", global::WinUICommunity.GlyphCode.F595);
                userType.AddEnumValue("F596", global::WinUICommunity.GlyphCode.F596);
                userType.AddEnumValue("F597", global::WinUICommunity.GlyphCode.F597);
                userType.AddEnumValue("F598", global::WinUICommunity.GlyphCode.F598);
                userType.AddEnumValue("F599", global::WinUICommunity.GlyphCode.F599);
                userType.AddEnumValue("F59A", global::WinUICommunity.GlyphCode.F59A);
                userType.AddEnumValue("F59B", global::WinUICommunity.GlyphCode.F59B);
                userType.AddEnumValue("F59C", global::WinUICommunity.GlyphCode.F59C);
                userType.AddEnumValue("F59D", global::WinUICommunity.GlyphCode.F59D);
                userType.AddEnumValue("F59E", global::WinUICommunity.GlyphCode.F59E);
                userType.AddEnumValue("F59F", global::WinUICommunity.GlyphCode.F59F);
                userType.AddEnumValue("F5A0", global::WinUICommunity.GlyphCode.F5A0);
                userType.AddEnumValue("F5A1", global::WinUICommunity.GlyphCode.F5A1);
                userType.AddEnumValue("F5A2", global::WinUICommunity.GlyphCode.F5A2);
                userType.AddEnumValue("F5A3", global::WinUICommunity.GlyphCode.F5A3);
                userType.AddEnumValue("F5A4", global::WinUICommunity.GlyphCode.F5A4);
                userType.AddEnumValue("F5A5", global::WinUICommunity.GlyphCode.F5A5);
                userType.AddEnumValue("F5A6", global::WinUICommunity.GlyphCode.F5A6);
                userType.AddEnumValue("F5A7", global::WinUICommunity.GlyphCode.F5A7);
                userType.AddEnumValue("F5A8", global::WinUICommunity.GlyphCode.F5A8);
                userType.AddEnumValue("F5A9", global::WinUICommunity.GlyphCode.F5A9);
                userType.AddEnumValue("F5AA", global::WinUICommunity.GlyphCode.F5AA);
                userType.AddEnumValue("F5AB", global::WinUICommunity.GlyphCode.F5AB);
                userType.AddEnumValue("F5AC", global::WinUICommunity.GlyphCode.F5AC);
                userType.AddEnumValue("F5AD", global::WinUICommunity.GlyphCode.F5AD);
                userType.AddEnumValue("F5AE", global::WinUICommunity.GlyphCode.F5AE);
                userType.AddEnumValue("F5B0", global::WinUICommunity.GlyphCode.F5B0);
                userType.AddEnumValue("F5E7", global::WinUICommunity.GlyphCode.F5E7);
                userType.AddEnumValue("F5ED", global::WinUICommunity.GlyphCode.F5ED);
                userType.AddEnumValue("F5EE", global::WinUICommunity.GlyphCode.F5EE);
                userType.AddEnumValue("F5EF", global::WinUICommunity.GlyphCode.F5EF);
                userType.AddEnumValue("F5F2", global::WinUICommunity.GlyphCode.F5F2);
                userType.AddEnumValue("F5F3", global::WinUICommunity.GlyphCode.F5F3);
                userType.AddEnumValue("F5F4", global::WinUICommunity.GlyphCode.F5F4);
                userType.AddEnumValue("F5F5", global::WinUICommunity.GlyphCode.F5F5);
                userType.AddEnumValue("F5F6", global::WinUICommunity.GlyphCode.F5F6);
                userType.AddEnumValue("F5F7", global::WinUICommunity.GlyphCode.F5F7);
                userType.AddEnumValue("F5F8", global::WinUICommunity.GlyphCode.F5F8);
                userType.AddEnumValue("F5F9", global::WinUICommunity.GlyphCode.F5F9);
                userType.AddEnumValue("F5FA", global::WinUICommunity.GlyphCode.F5FA);
                userType.AddEnumValue("F5FB", global::WinUICommunity.GlyphCode.F5FB);
                userType.AddEnumValue("F5FC", global::WinUICommunity.GlyphCode.F5FC);
                userType.AddEnumValue("F5FD", global::WinUICommunity.GlyphCode.F5FD);
                userType.AddEnumValue("F5FE", global::WinUICommunity.GlyphCode.F5FE);
                userType.AddEnumValue("F5FF", global::WinUICommunity.GlyphCode.F5FF);
                userType.AddEnumValue("F600", global::WinUICommunity.GlyphCode.F600);
                userType.AddEnumValue("F601", global::WinUICommunity.GlyphCode.F601);
                userType.AddEnumValue("F602", global::WinUICommunity.GlyphCode.F602);
                userType.AddEnumValue("F603", global::WinUICommunity.GlyphCode.F603);
                userType.AddEnumValue("F604", global::WinUICommunity.GlyphCode.F604);
                userType.AddEnumValue("F605", global::WinUICommunity.GlyphCode.F605);
                userType.AddEnumValue("F606", global::WinUICommunity.GlyphCode.F606);
                userType.AddEnumValue("F607", global::WinUICommunity.GlyphCode.F607);
                userType.AddEnumValue("F608", global::WinUICommunity.GlyphCode.F608);
                userType.AddEnumValue("F618", global::WinUICommunity.GlyphCode.F618);
                userType.AddEnumValue("F619", global::WinUICommunity.GlyphCode.F619);
                userType.AddEnumValue("F61A", global::WinUICommunity.GlyphCode.F61A);
                userType.AddEnumValue("F61B", global::WinUICommunity.GlyphCode.F61B);
                userType.AddEnumValue("F61C", global::WinUICommunity.GlyphCode.F61C);
                userType.AddEnumValue("F61D", global::WinUICommunity.GlyphCode.F61D);
                userType.AddEnumValue("F61E", global::WinUICommunity.GlyphCode.F61E);
                userType.AddEnumValue("F61F", global::WinUICommunity.GlyphCode.F61F);
                userType.AddEnumValue("F620", global::WinUICommunity.GlyphCode.F620);
                userType.AddEnumValue("F623", global::WinUICommunity.GlyphCode.F623);
                userType.AddEnumValue("F624", global::WinUICommunity.GlyphCode.F624);
                userType.AddEnumValue("F63C", global::WinUICommunity.GlyphCode.F63C);
                userType.AddEnumValue("F657", global::WinUICommunity.GlyphCode.F657);
                userType.AddEnumValue("F658", global::WinUICommunity.GlyphCode.F658);
                userType.AddEnumValue("F659", global::WinUICommunity.GlyphCode.F659);
                userType.AddEnumValue("F65A", global::WinUICommunity.GlyphCode.F65A);
                userType.AddEnumValue("F65B", global::WinUICommunity.GlyphCode.F65B);
                userType.AddEnumValue("F65C", global::WinUICommunity.GlyphCode.F65C);
                userType.AddEnumValue("F69E", global::WinUICommunity.GlyphCode.F69E);
                userType.AddEnumValue("F6A9", global::WinUICommunity.GlyphCode.F6A9);
                userType.AddEnumValue("F6B8", global::WinUICommunity.GlyphCode.F6B8);
                userType.AddEnumValue("F6BA", global::WinUICommunity.GlyphCode.F6BA);
                userType.AddEnumValue("F6FA", global::WinUICommunity.GlyphCode.F6FA);
                userType.AddEnumValue("F712", global::WinUICommunity.GlyphCode.F712);
                userType.AddEnumValue("F714", global::WinUICommunity.GlyphCode.F714);
                userType.AddEnumValue("F715", global::WinUICommunity.GlyphCode.F715);
                userType.AddEnumValue("F716", global::WinUICommunity.GlyphCode.F716);
                userType.AddEnumValue("F71A", global::WinUICommunity.GlyphCode.F71A);
                userType.AddEnumValue("F71C", global::WinUICommunity.GlyphCode.F71C);
                userType.AddEnumValue("F71D", global::WinUICommunity.GlyphCode.F71D);
                userType.AddEnumValue("F71E", global::WinUICommunity.GlyphCode.F71E);
                userType.AddEnumValue("F738", global::WinUICommunity.GlyphCode.F738);
                userType.AddEnumValue("F739", global::WinUICommunity.GlyphCode.F739);
                userType.AddEnumValue("F73D", global::WinUICommunity.GlyphCode.F73D);
                userType.AddEnumValue("F73E", global::WinUICommunity.GlyphCode.F73E);
                userType.AddEnumValue("F73F", global::WinUICommunity.GlyphCode.F73F);
                userType.AddEnumValue("F740", global::WinUICommunity.GlyphCode.F740);
                userType.AddEnumValue("F741", global::WinUICommunity.GlyphCode.F741);
                userType.AddEnumValue("F742", global::WinUICommunity.GlyphCode.F742);
                userType.AddEnumValue("F743", global::WinUICommunity.GlyphCode.F743);
                userType.AddEnumValue("F744", global::WinUICommunity.GlyphCode.F744);
                userType.AddEnumValue("F745", global::WinUICommunity.GlyphCode.F745);
                userType.AddEnumValue("F746", global::WinUICommunity.GlyphCode.F746);
                userType.AddEnumValue("F763", global::WinUICommunity.GlyphCode.F763);
                userType.AddEnumValue("F781", global::WinUICommunity.GlyphCode.F781);
                userType.AddEnumValue("F785", global::WinUICommunity.GlyphCode.F785);
                userType.AddEnumValue("F78A", global::WinUICommunity.GlyphCode.F78A);
                userType.AddEnumValue("F78B", global::WinUICommunity.GlyphCode.F78B);
                userType.AddEnumValue("F78C", global::WinUICommunity.GlyphCode.F78C);
                userType.AddEnumValue("F78D", global::WinUICommunity.GlyphCode.F78D);
                userType.AddEnumValue("F7AD", global::WinUICommunity.GlyphCode.F7AD);
                userType.AddEnumValue("F7AE", global::WinUICommunity.GlyphCode.F7AE);
                userType.AddEnumValue("F7AF", global::WinUICommunity.GlyphCode.F7AF);
                userType.AddEnumValue("F7B0", global::WinUICommunity.GlyphCode.F7B0);
                userType.AddEnumValue("F7B1", global::WinUICommunity.GlyphCode.F7B1);
                userType.AddEnumValue("F7B2", global::WinUICommunity.GlyphCode.F7B2);
                userType.AddEnumValue("F7B3", global::WinUICommunity.GlyphCode.F7B3);
                userType.AddEnumValue("F7B4", global::WinUICommunity.GlyphCode.F7B4);
                userType.AddEnumValue("F7B5", global::WinUICommunity.GlyphCode.F7B5);
                userType.AddEnumValue("F7B6", global::WinUICommunity.GlyphCode.F7B6);
                userType.AddEnumValue("F7B7", global::WinUICommunity.GlyphCode.F7B7);
                userType.AddEnumValue("F7B8", global::WinUICommunity.GlyphCode.F7B8);
                userType.AddEnumValue("F7B9", global::WinUICommunity.GlyphCode.F7B9);
                userType.AddEnumValue("F7BA", global::WinUICommunity.GlyphCode.F7BA);
                userType.AddEnumValue("F7BB", global::WinUICommunity.GlyphCode.F7BB);
                userType.AddEnumValue("F7ED", global::WinUICommunity.GlyphCode.F7ED);
                userType.AddEnumValue("F7EE", global::WinUICommunity.GlyphCode.F7EE);
                userType.AddEnumValue("F809", global::WinUICommunity.GlyphCode.F809);
                userType.AddEnumValue("F83B", global::WinUICommunity.GlyphCode.F83B);
                userType.AddEnumValue("F83D", global::WinUICommunity.GlyphCode.F83D);
                userType.AddEnumValue("F83E", global::WinUICommunity.GlyphCode.F83E);
                userType.AddEnumValue("F83F", global::WinUICommunity.GlyphCode.F83F);
                userType.AddEnumValue("F847", global::WinUICommunity.GlyphCode.F847);
                userType.AddEnumValue("F87B", global::WinUICommunity.GlyphCode.F87B);
                userType.AddEnumValue("F87C", global::WinUICommunity.GlyphCode.F87C);
                userType.AddEnumValue("F87D", global::WinUICommunity.GlyphCode.F87D);
                userType.AddEnumValue("F87E", global::WinUICommunity.GlyphCode.F87E);
                userType.AddEnumValue("F89A", global::WinUICommunity.GlyphCode.F89A);
                userType.AddEnumValue("F8A5", global::WinUICommunity.GlyphCode.F8A5);
                userType.AddEnumValue("F8A6", global::WinUICommunity.GlyphCode.F8A6);
                userType.AddEnumValue("F8AA", global::WinUICommunity.GlyphCode.F8AA);
                userType.AddEnumValue("F8AB", global::WinUICommunity.GlyphCode.F8AB);
                userType.AddEnumValue("F8AC", global::WinUICommunity.GlyphCode.F8AC);
                userType.AddEnumValue("F8AD", global::WinUICommunity.GlyphCode.F8AD);
                userType.AddEnumValue("F8AE", global::WinUICommunity.GlyphCode.F8AE);
                userType.AddEnumValue("F8AF", global::WinUICommunity.GlyphCode.F8AF);
                userType.AddEnumValue("F8B0", global::WinUICommunity.GlyphCode.F8B0);
                userType.AddEnumValue("F8B1", global::WinUICommunity.GlyphCode.F8B1);
                userType.AddEnumValue("F8B2", global::WinUICommunity.GlyphCode.F8B2);
                userType.AddEnumValue("F8B3", global::WinUICommunity.GlyphCode.F8B3);
                xamlType = userType;
                break;

            case 107:   //  WinUICommunity.GlyphName
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_107_GlyphName;
                userType.AddEnumValue("None", global::WinUICommunity.GlyphName.None);
                userType.AddEnumValue("GlobalNavButton", global::WinUICommunity.GlyphName.GlobalNavButton);
                userType.AddEnumValue("Wifi", global::WinUICommunity.GlyphName.Wifi);
                userType.AddEnumValue("Bluetooth", global::WinUICommunity.GlyphName.Bluetooth);
                userType.AddEnumValue("Connect", global::WinUICommunity.GlyphName.Connect);
                userType.AddEnumValue("InternetSharing", global::WinUICommunity.GlyphName.InternetSharing);
                userType.AddEnumValue("VPN", global::WinUICommunity.GlyphName.VPN);
                userType.AddEnumValue("Brightness", global::WinUICommunity.GlyphName.Brightness);
                userType.AddEnumValue("MapPin", global::WinUICommunity.GlyphName.MapPin);
                userType.AddEnumValue("QuietHours", global::WinUICommunity.GlyphName.QuietHours);
                userType.AddEnumValue("Airplane", global::WinUICommunity.GlyphName.Airplane);
                userType.AddEnumValue("Tablet", global::WinUICommunity.GlyphName.Tablet);
                userType.AddEnumValue("QuickNote", global::WinUICommunity.GlyphName.QuickNote);
                userType.AddEnumValue("RememberedDevice", global::WinUICommunity.GlyphName.RememberedDevice);
                userType.AddEnumValue("ChevronDown", global::WinUICommunity.GlyphName.ChevronDown);
                userType.AddEnumValue("ChevronUp", global::WinUICommunity.GlyphName.ChevronUp);
                userType.AddEnumValue("Edit", global::WinUICommunity.GlyphName.Edit);
                userType.AddEnumValue("Add", global::WinUICommunity.GlyphName.Add);
                userType.AddEnumValue("Cancel", global::WinUICommunity.GlyphName.Cancel);
                userType.AddEnumValue("More", global::WinUICommunity.GlyphName.More);
                userType.AddEnumValue("Settings", global::WinUICommunity.GlyphName.Settings);
                userType.AddEnumValue("Video", global::WinUICommunity.GlyphName.Video);
                userType.AddEnumValue("Mail", global::WinUICommunity.GlyphName.Mail);
                userType.AddEnumValue("People", global::WinUICommunity.GlyphName.People);
                userType.AddEnumValue("Phone", global::WinUICommunity.GlyphName.Phone);
                userType.AddEnumValue("Pin", global::WinUICommunity.GlyphName.Pin);
                userType.AddEnumValue("Shop", global::WinUICommunity.GlyphName.Shop);
                userType.AddEnumValue("Stop", global::WinUICommunity.GlyphName.Stop);
                userType.AddEnumValue("Link", global::WinUICommunity.GlyphName.Link);
                userType.AddEnumValue("Filter", global::WinUICommunity.GlyphName.Filter);
                userType.AddEnumValue("AllApps", global::WinUICommunity.GlyphName.AllApps);
                userType.AddEnumValue("Zoom", global::WinUICommunity.GlyphName.Zoom);
                userType.AddEnumValue("ZoomOut", global::WinUICommunity.GlyphName.ZoomOut);
                userType.AddEnumValue("Microphone", global::WinUICommunity.GlyphName.Microphone);
                userType.AddEnumValue("Search", global::WinUICommunity.GlyphName.Search);
                userType.AddEnumValue("Camera", global::WinUICommunity.GlyphName.Camera);
                userType.AddEnumValue("Attach", global::WinUICommunity.GlyphName.Attach);
                userType.AddEnumValue("Send", global::WinUICommunity.GlyphName.Send);
                userType.AddEnumValue("SendFill", global::WinUICommunity.GlyphName.SendFill);
                userType.AddEnumValue("WalkSolid", global::WinUICommunity.GlyphName.WalkSolid);
                userType.AddEnumValue("InPrivate", global::WinUICommunity.GlyphName.InPrivate);
                userType.AddEnumValue("FavoriteList", global::WinUICommunity.GlyphName.FavoriteList);
                userType.AddEnumValue("PageSolid", global::WinUICommunity.GlyphName.PageSolid);
                userType.AddEnumValue("Forward", global::WinUICommunity.GlyphName.Forward);
                userType.AddEnumValue("Back", global::WinUICommunity.GlyphName.Back);
                userType.AddEnumValue("Refresh", global::WinUICommunity.GlyphName.Refresh);
                userType.AddEnumValue("Share", global::WinUICommunity.GlyphName.Share);
                userType.AddEnumValue("Lock", global::WinUICommunity.GlyphName.Lock);
                userType.AddEnumValue("ReportHacked", global::WinUICommunity.GlyphName.ReportHacked);
                userType.AddEnumValue("EMI", global::WinUICommunity.GlyphName.EMI);
                userType.AddEnumValue("FavoriteStar", global::WinUICommunity.GlyphName.FavoriteStar);
                userType.AddEnumValue("FavoriteStarFill", global::WinUICommunity.GlyphName.FavoriteStarFill);
                userType.AddEnumValue("ReadingMode", global::WinUICommunity.GlyphName.ReadingMode);
                userType.AddEnumValue("Favicon", global::WinUICommunity.GlyphName.Favicon);
                userType.AddEnumValue("Remove", global::WinUICommunity.GlyphName.Remove);
                userType.AddEnumValue("Checkbox", global::WinUICommunity.GlyphName.Checkbox);
                userType.AddEnumValue("CheckboxComposite", global::WinUICommunity.GlyphName.CheckboxComposite);
                userType.AddEnumValue("CheckboxFill", global::WinUICommunity.GlyphName.CheckboxFill);
                userType.AddEnumValue("CheckboxIndeterminate", global::WinUICommunity.GlyphName.CheckboxIndeterminate);
                userType.AddEnumValue("CheckboxCompositeReversed", global::WinUICommunity.GlyphName.CheckboxCompositeReversed);
                userType.AddEnumValue("CheckMark", global::WinUICommunity.GlyphName.CheckMark);
                userType.AddEnumValue("BackToWindow", global::WinUICommunity.GlyphName.BackToWindow);
                userType.AddEnumValue("FullScreen", global::WinUICommunity.GlyphName.FullScreen);
                userType.AddEnumValue("ResizeTouchLarger", global::WinUICommunity.GlyphName.ResizeTouchLarger);
                userType.AddEnumValue("ResizeTouchSmaller", global::WinUICommunity.GlyphName.ResizeTouchSmaller);
                userType.AddEnumValue("ResizeMouseSmall", global::WinUICommunity.GlyphName.ResizeMouseSmall);
                userType.AddEnumValue("ResizeMouseMedium", global::WinUICommunity.GlyphName.ResizeMouseMedium);
                userType.AddEnumValue("ResizeMouseWide", global::WinUICommunity.GlyphName.ResizeMouseWide);
                userType.AddEnumValue("ResizeMouseTall", global::WinUICommunity.GlyphName.ResizeMouseTall);
                userType.AddEnumValue("ResizeMouseLarge", global::WinUICommunity.GlyphName.ResizeMouseLarge);
                userType.AddEnumValue("SwitchUser", global::WinUICommunity.GlyphName.SwitchUser);
                userType.AddEnumValue("Print", global::WinUICommunity.GlyphName.Print);
                userType.AddEnumValue("Up", global::WinUICommunity.GlyphName.Up);
                userType.AddEnumValue("Down", global::WinUICommunity.GlyphName.Down);
                userType.AddEnumValue("OEM", global::WinUICommunity.GlyphName.OEM);
                userType.AddEnumValue("Delete", global::WinUICommunity.GlyphName.Delete);
                userType.AddEnumValue("Save", global::WinUICommunity.GlyphName.Save);
                userType.AddEnumValue("Mute", global::WinUICommunity.GlyphName.Mute);
                userType.AddEnumValue("BackSpaceQWERTY", global::WinUICommunity.GlyphName.BackSpaceQWERTY);
                userType.AddEnumValue("ReturnKey", global::WinUICommunity.GlyphName.ReturnKey);
                userType.AddEnumValue("UpArrowShiftKey", global::WinUICommunity.GlyphName.UpArrowShiftKey);
                userType.AddEnumValue("Cloud", global::WinUICommunity.GlyphName.Cloud);
                userType.AddEnumValue("Flashlight", global::WinUICommunity.GlyphName.Flashlight);
                userType.AddEnumValue("RotationLock", global::WinUICommunity.GlyphName.RotationLock);
                userType.AddEnumValue("CommandPrompt", global::WinUICommunity.GlyphName.CommandPrompt);
                userType.AddEnumValue("SIPMove", global::WinUICommunity.GlyphName.SIPMove);
                userType.AddEnumValue("SIPUndock", global::WinUICommunity.GlyphName.SIPUndock);
                userType.AddEnumValue("SIPRedock", global::WinUICommunity.GlyphName.SIPRedock);
                userType.AddEnumValue("EraseTool", global::WinUICommunity.GlyphName.EraseTool);
                userType.AddEnumValue("UnderscoreSpace", global::WinUICommunity.GlyphName.UnderscoreSpace);
                userType.AddEnumValue("GripperTool", global::WinUICommunity.GlyphName.GripperTool);
                userType.AddEnumValue("Dialpad", global::WinUICommunity.GlyphName.Dialpad);
                userType.AddEnumValue("PageLeft", global::WinUICommunity.GlyphName.PageLeft);
                userType.AddEnumValue("PageRight", global::WinUICommunity.GlyphName.PageRight);
                userType.AddEnumValue("MultiSelect", global::WinUICommunity.GlyphName.MultiSelect);
                userType.AddEnumValue("KeyboardLeftHanded", global::WinUICommunity.GlyphName.KeyboardLeftHanded);
                userType.AddEnumValue("KeyboardRightHanded", global::WinUICommunity.GlyphName.KeyboardRightHanded);
                userType.AddEnumValue("KeyboardClassic", global::WinUICommunity.GlyphName.KeyboardClassic);
                userType.AddEnumValue("KeyboardSplit", global::WinUICommunity.GlyphName.KeyboardSplit);
                userType.AddEnumValue("Volume", global::WinUICommunity.GlyphName.Volume);
                userType.AddEnumValue("Play", global::WinUICommunity.GlyphName.Play);
                userType.AddEnumValue("Pause", global::WinUICommunity.GlyphName.Pause);
                userType.AddEnumValue("ChevronLeft", global::WinUICommunity.GlyphName.ChevronLeft);
                userType.AddEnumValue("ChevronRight", global::WinUICommunity.GlyphName.ChevronRight);
                userType.AddEnumValue("InkingTool", global::WinUICommunity.GlyphName.InkingTool);
                userType.AddEnumValue("Emoji2", global::WinUICommunity.GlyphName.Emoji2);
                userType.AddEnumValue("GripperBarHorizontal", global::WinUICommunity.GlyphName.GripperBarHorizontal);
                userType.AddEnumValue("System", global::WinUICommunity.GlyphName.System);
                userType.AddEnumValue("Personalize", global::WinUICommunity.GlyphName.Personalize);
                userType.AddEnumValue("Devices", global::WinUICommunity.GlyphName.Devices);
                userType.AddEnumValue("SearchAndApps", global::WinUICommunity.GlyphName.SearchAndApps);
                userType.AddEnumValue("Globe", global::WinUICommunity.GlyphName.Globe);
                userType.AddEnumValue("TimeLanguage", global::WinUICommunity.GlyphName.TimeLanguage);
                userType.AddEnumValue("EaseOfAccess", global::WinUICommunity.GlyphName.EaseOfAccess);
                userType.AddEnumValue("UpdateRestore", global::WinUICommunity.GlyphName.UpdateRestore);
                userType.AddEnumValue("HangUp", global::WinUICommunity.GlyphName.HangUp);
                userType.AddEnumValue("ContactInfo", global::WinUICommunity.GlyphName.ContactInfo);
                userType.AddEnumValue("Unpin", global::WinUICommunity.GlyphName.Unpin);
                userType.AddEnumValue("Contact", global::WinUICommunity.GlyphName.Contact);
                userType.AddEnumValue("Memo", global::WinUICommunity.GlyphName.Memo);
                userType.AddEnumValue("IncomingCall", global::WinUICommunity.GlyphName.IncomingCall);
                userType.AddEnumValue("Paste", global::WinUICommunity.GlyphName.Paste);
                userType.AddEnumValue("PhoneBook", global::WinUICommunity.GlyphName.PhoneBook);
                userType.AddEnumValue("LEDLight", global::WinUICommunity.GlyphName.LEDLight);
                userType.AddEnumValue("Error", global::WinUICommunity.GlyphName.Error);
                userType.AddEnumValue("GripperBarVertical", global::WinUICommunity.GlyphName.GripperBarVertical);
                userType.AddEnumValue("Unlock", global::WinUICommunity.GlyphName.Unlock);
                userType.AddEnumValue("Slideshow", global::WinUICommunity.GlyphName.Slideshow);
                userType.AddEnumValue("Calendar", global::WinUICommunity.GlyphName.Calendar);
                userType.AddEnumValue("GripperResize", global::WinUICommunity.GlyphName.GripperResize);
                userType.AddEnumValue("Megaphone", global::WinUICommunity.GlyphName.Megaphone);
                userType.AddEnumValue("Trim", global::WinUICommunity.GlyphName.Trim);
                userType.AddEnumValue("NewWindow", global::WinUICommunity.GlyphName.NewWindow);
                userType.AddEnumValue("SaveLocal", global::WinUICommunity.GlyphName.SaveLocal);
                userType.AddEnumValue("Color", global::WinUICommunity.GlyphName.Color);
                userType.AddEnumValue("DataSense", global::WinUICommunity.GlyphName.DataSense);
                userType.AddEnumValue("SaveAs", global::WinUICommunity.GlyphName.SaveAs);
                userType.AddEnumValue("Light", global::WinUICommunity.GlyphName.Light);
                userType.AddEnumValue("AspectRatio", global::WinUICommunity.GlyphName.AspectRatio);
                userType.AddEnumValue("DataSenseBar", global::WinUICommunity.GlyphName.DataSenseBar);
                userType.AddEnumValue("Redo", global::WinUICommunity.GlyphName.Redo);
                userType.AddEnumValue("Undo", global::WinUICommunity.GlyphName.Undo);
                userType.AddEnumValue("Crop", global::WinUICommunity.GlyphName.Crop);
                userType.AddEnumValue("OpenWith", global::WinUICommunity.GlyphName.OpenWith);
                userType.AddEnumValue("Rotate", global::WinUICommunity.GlyphName.Rotate);
                userType.AddEnumValue("RedEye", global::WinUICommunity.GlyphName.RedEye);
                userType.AddEnumValue("SetlockScreen", global::WinUICommunity.GlyphName.SetlockScreen);
                userType.AddEnumValue("MapPin2", global::WinUICommunity.GlyphName.MapPin2);
                userType.AddEnumValue("Package", global::WinUICommunity.GlyphName.Package);
                userType.AddEnumValue("Warning", global::WinUICommunity.GlyphName.Warning);
                userType.AddEnumValue("ReadingList", global::WinUICommunity.GlyphName.ReadingList);
                userType.AddEnumValue("Education", global::WinUICommunity.GlyphName.Education);
                userType.AddEnumValue("ShoppingCart", global::WinUICommunity.GlyphName.ShoppingCart);
                userType.AddEnumValue("Train", global::WinUICommunity.GlyphName.Train);
                userType.AddEnumValue("Flag", global::WinUICommunity.GlyphName.Flag);
                userType.AddEnumValue("Move", global::WinUICommunity.GlyphName.Move);
                userType.AddEnumValue("Page", global::WinUICommunity.GlyphName.Page);
                userType.AddEnumValue("TaskView", global::WinUICommunity.GlyphName.TaskView);
                userType.AddEnumValue("BrowsePhotos", global::WinUICommunity.GlyphName.BrowsePhotos);
                userType.AddEnumValue("HalfStarLeft", global::WinUICommunity.GlyphName.HalfStarLeft);
                userType.AddEnumValue("HalfStarRight", global::WinUICommunity.GlyphName.HalfStarRight);
                userType.AddEnumValue("Record", global::WinUICommunity.GlyphName.Record);
                userType.AddEnumValue("TouchPointer", global::WinUICommunity.GlyphName.TouchPointer);
                userType.AddEnumValue("LangJPN", global::WinUICommunity.GlyphName.LangJPN);
                userType.AddEnumValue("Ferry", global::WinUICommunity.GlyphName.Ferry);
                userType.AddEnumValue("Highlight", global::WinUICommunity.GlyphName.Highlight);
                userType.AddEnumValue("ActionCenterNotification", global::WinUICommunity.GlyphName.ActionCenterNotification);
                userType.AddEnumValue("PowerButton", global::WinUICommunity.GlyphName.PowerButton);
                userType.AddEnumValue("ResizeTouchNarrower", global::WinUICommunity.GlyphName.ResizeTouchNarrower);
                userType.AddEnumValue("ResizeTouchShorter", global::WinUICommunity.GlyphName.ResizeTouchShorter);
                userType.AddEnumValue("DrivingMode", global::WinUICommunity.GlyphName.DrivingMode);
                userType.AddEnumValue("RingerSilent", global::WinUICommunity.GlyphName.RingerSilent);
                userType.AddEnumValue("OtherUser", global::WinUICommunity.GlyphName.OtherUser);
                userType.AddEnumValue("Admin", global::WinUICommunity.GlyphName.Admin);
                userType.AddEnumValue("CC", global::WinUICommunity.GlyphName.CC);
                userType.AddEnumValue("SDCard", global::WinUICommunity.GlyphName.SDCard);
                userType.AddEnumValue("CallForwarding", global::WinUICommunity.GlyphName.CallForwarding);
                userType.AddEnumValue("SettingsDisplaySound", global::WinUICommunity.GlyphName.SettingsDisplaySound);
                userType.AddEnumValue("TVMonitor", global::WinUICommunity.GlyphName.TVMonitor);
                userType.AddEnumValue("Speakers", global::WinUICommunity.GlyphName.Speakers);
                userType.AddEnumValue("Headphone", global::WinUICommunity.GlyphName.Headphone);
                userType.AddEnumValue("DeviceLaptopPic", global::WinUICommunity.GlyphName.DeviceLaptopPic);
                userType.AddEnumValue("DeviceLaptopNoPic", global::WinUICommunity.GlyphName.DeviceLaptopNoPic);
                userType.AddEnumValue("DeviceMonitorRightPic", global::WinUICommunity.GlyphName.DeviceMonitorRightPic);
                userType.AddEnumValue("DeviceMonitorLeftPic", global::WinUICommunity.GlyphName.DeviceMonitorLeftPic);
                userType.AddEnumValue("DeviceMonitorNoPic", global::WinUICommunity.GlyphName.DeviceMonitorNoPic);
                userType.AddEnumValue("Game", global::WinUICommunity.GlyphName.Game);
                userType.AddEnumValue("HorizontalTabKey", global::WinUICommunity.GlyphName.HorizontalTabKey);
                userType.AddEnumValue("StreetsideSplitMinimize", global::WinUICommunity.GlyphName.StreetsideSplitMinimize);
                userType.AddEnumValue("StreetsideSplitExpand", global::WinUICommunity.GlyphName.StreetsideSplitExpand);
                userType.AddEnumValue("Car", global::WinUICommunity.GlyphName.Car);
                userType.AddEnumValue("Walk", global::WinUICommunity.GlyphName.Walk);
                userType.AddEnumValue("Bus", global::WinUICommunity.GlyphName.Bus);
                userType.AddEnumValue("TiltUp", global::WinUICommunity.GlyphName.TiltUp);
                userType.AddEnumValue("TiltDown", global::WinUICommunity.GlyphName.TiltDown);
                userType.AddEnumValue("CallControl", global::WinUICommunity.GlyphName.CallControl);
                userType.AddEnumValue("RotateMapRight", global::WinUICommunity.GlyphName.RotateMapRight);
                userType.AddEnumValue("RotateMapLeft", global::WinUICommunity.GlyphName.RotateMapLeft);
                userType.AddEnumValue("Home", global::WinUICommunity.GlyphName.Home);
                userType.AddEnumValue("ParkingLocation", global::WinUICommunity.GlyphName.ParkingLocation);
                userType.AddEnumValue("MapCompassTop", global::WinUICommunity.GlyphName.MapCompassTop);
                userType.AddEnumValue("MapCompassBottom", global::WinUICommunity.GlyphName.MapCompassBottom);
                userType.AddEnumValue("IncidentTriangle", global::WinUICommunity.GlyphName.IncidentTriangle);
                userType.AddEnumValue("Touch", global::WinUICommunity.GlyphName.Touch);
                userType.AddEnumValue("MapDirections", global::WinUICommunity.GlyphName.MapDirections);
                userType.AddEnumValue("StartPoint", global::WinUICommunity.GlyphName.StartPoint);
                userType.AddEnumValue("StopPoint", global::WinUICommunity.GlyphName.StopPoint);
                userType.AddEnumValue("EndPoint", global::WinUICommunity.GlyphName.EndPoint);
                userType.AddEnumValue("History", global::WinUICommunity.GlyphName.History);
                userType.AddEnumValue("Location", global::WinUICommunity.GlyphName.Location);
                userType.AddEnumValue("MapLayers", global::WinUICommunity.GlyphName.MapLayers);
                userType.AddEnumValue("Accident", global::WinUICommunity.GlyphName.Accident);
                userType.AddEnumValue("Work", global::WinUICommunity.GlyphName.Work);
                userType.AddEnumValue("Construction", global::WinUICommunity.GlyphName.Construction);
                userType.AddEnumValue("Recent", global::WinUICommunity.GlyphName.Recent);
                userType.AddEnumValue("Bank", global::WinUICommunity.GlyphName.Bank);
                userType.AddEnumValue("DownloadMap", global::WinUICommunity.GlyphName.DownloadMap);
                userType.AddEnumValue("InkingToolFill2", global::WinUICommunity.GlyphName.InkingToolFill2);
                userType.AddEnumValue("HighlightFill2", global::WinUICommunity.GlyphName.HighlightFill2);
                userType.AddEnumValue("EraseToolFill", global::WinUICommunity.GlyphName.EraseToolFill);
                userType.AddEnumValue("EraseToolFill2", global::WinUICommunity.GlyphName.EraseToolFill2);
                userType.AddEnumValue("Dictionary", global::WinUICommunity.GlyphName.Dictionary);
                userType.AddEnumValue("DictionaryAdd", global::WinUICommunity.GlyphName.DictionaryAdd);
                userType.AddEnumValue("ToolTip", global::WinUICommunity.GlyphName.ToolTip);
                userType.AddEnumValue("ChromeBack", global::WinUICommunity.GlyphName.ChromeBack);
                userType.AddEnumValue("ProvisioningPackage", global::WinUICommunity.GlyphName.ProvisioningPackage);
                userType.AddEnumValue("AddRemoteDevice", global::WinUICommunity.GlyphName.AddRemoteDevice);
                userType.AddEnumValue("FolderOpen", global::WinUICommunity.GlyphName.FolderOpen);
                userType.AddEnumValue("Ethernet", global::WinUICommunity.GlyphName.Ethernet);
                userType.AddEnumValue("ShareBroadband", global::WinUICommunity.GlyphName.ShareBroadband);
                userType.AddEnumValue("DirectAccess", global::WinUICommunity.GlyphName.DirectAccess);
                userType.AddEnumValue("DialUp", global::WinUICommunity.GlyphName.DialUp);
                userType.AddEnumValue("DefenderApp", global::WinUICommunity.GlyphName.DefenderApp);
                userType.AddEnumValue("BatteryCharging9", global::WinUICommunity.GlyphName.BatteryCharging9);
                userType.AddEnumValue("Battery10", global::WinUICommunity.GlyphName.Battery10);
                userType.AddEnumValue("Pinned", global::WinUICommunity.GlyphName.Pinned);
                userType.AddEnumValue("PinFill", global::WinUICommunity.GlyphName.PinFill);
                userType.AddEnumValue("PinnedFill", global::WinUICommunity.GlyphName.PinnedFill);
                userType.AddEnumValue("PeriodKey", global::WinUICommunity.GlyphName.PeriodKey);
                userType.AddEnumValue("PuncKey", global::WinUICommunity.GlyphName.PuncKey);
                userType.AddEnumValue("RevToggleKey", global::WinUICommunity.GlyphName.RevToggleKey);
                userType.AddEnumValue("RightArrowKeyTime1", global::WinUICommunity.GlyphName.RightArrowKeyTime1);
                userType.AddEnumValue("RightArrowKeyTime2", global::WinUICommunity.GlyphName.RightArrowKeyTime2);
                userType.AddEnumValue("LeftQuote", global::WinUICommunity.GlyphName.LeftQuote);
                userType.AddEnumValue("RightQuote", global::WinUICommunity.GlyphName.RightQuote);
                userType.AddEnumValue("DownShiftKey", global::WinUICommunity.GlyphName.DownShiftKey);
                userType.AddEnumValue("UpShiftKey", global::WinUICommunity.GlyphName.UpShiftKey);
                userType.AddEnumValue("PuncKey0", global::WinUICommunity.GlyphName.PuncKey0);
                userType.AddEnumValue("PuncKeyLeftBottom", global::WinUICommunity.GlyphName.PuncKeyLeftBottom);
                userType.AddEnumValue("RightArrowKeyTime3", global::WinUICommunity.GlyphName.RightArrowKeyTime3);
                userType.AddEnumValue("RightArrowKeyTime4", global::WinUICommunity.GlyphName.RightArrowKeyTime4);
                userType.AddEnumValue("Battery0", global::WinUICommunity.GlyphName.Battery0);
                userType.AddEnumValue("Battery1", global::WinUICommunity.GlyphName.Battery1);
                userType.AddEnumValue("Battery2", global::WinUICommunity.GlyphName.Battery2);
                userType.AddEnumValue("Battery3", global::WinUICommunity.GlyphName.Battery3);
                userType.AddEnumValue("Battery4", global::WinUICommunity.GlyphName.Battery4);
                userType.AddEnumValue("Battery5", global::WinUICommunity.GlyphName.Battery5);
                userType.AddEnumValue("Battery6", global::WinUICommunity.GlyphName.Battery6);
                userType.AddEnumValue("Battery7", global::WinUICommunity.GlyphName.Battery7);
                userType.AddEnumValue("Battery8", global::WinUICommunity.GlyphName.Battery8);
                userType.AddEnumValue("Battery9", global::WinUICommunity.GlyphName.Battery9);
                userType.AddEnumValue("BatteryCharging0", global::WinUICommunity.GlyphName.BatteryCharging0);
                userType.AddEnumValue("BatteryCharging1", global::WinUICommunity.GlyphName.BatteryCharging1);
                userType.AddEnumValue("BatteryCharging2", global::WinUICommunity.GlyphName.BatteryCharging2);
                userType.AddEnumValue("BatteryCharging3", global::WinUICommunity.GlyphName.BatteryCharging3);
                userType.AddEnumValue("BatteryCharging4", global::WinUICommunity.GlyphName.BatteryCharging4);
                userType.AddEnumValue("BatteryCharging5", global::WinUICommunity.GlyphName.BatteryCharging5);
                userType.AddEnumValue("BatteryCharging6", global::WinUICommunity.GlyphName.BatteryCharging6);
                userType.AddEnumValue("BatteryCharging7", global::WinUICommunity.GlyphName.BatteryCharging7);
                userType.AddEnumValue("BatteryCharging8", global::WinUICommunity.GlyphName.BatteryCharging8);
                userType.AddEnumValue("BatterySaver0", global::WinUICommunity.GlyphName.BatterySaver0);
                userType.AddEnumValue("BatterySaver1", global::WinUICommunity.GlyphName.BatterySaver1);
                userType.AddEnumValue("BatterySaver2", global::WinUICommunity.GlyphName.BatterySaver2);
                userType.AddEnumValue("BatterySaver3", global::WinUICommunity.GlyphName.BatterySaver3);
                userType.AddEnumValue("BatterySaver4", global::WinUICommunity.GlyphName.BatterySaver4);
                userType.AddEnumValue("BatterySaver5", global::WinUICommunity.GlyphName.BatterySaver5);
                userType.AddEnumValue("BatterySaver6", global::WinUICommunity.GlyphName.BatterySaver6);
                userType.AddEnumValue("BatterySaver7", global::WinUICommunity.GlyphName.BatterySaver7);
                userType.AddEnumValue("BatterySaver8", global::WinUICommunity.GlyphName.BatterySaver8);
                userType.AddEnumValue("SignalBars1", global::WinUICommunity.GlyphName.SignalBars1);
                userType.AddEnumValue("SignalBars2", global::WinUICommunity.GlyphName.SignalBars2);
                userType.AddEnumValue("SignalBars3", global::WinUICommunity.GlyphName.SignalBars3);
                userType.AddEnumValue("SignalBars4", global::WinUICommunity.GlyphName.SignalBars4);
                userType.AddEnumValue("SignalBars5", global::WinUICommunity.GlyphName.SignalBars5);
                userType.AddEnumValue("SignalNotConnected", global::WinUICommunity.GlyphName.SignalNotConnected);
                userType.AddEnumValue("Wifi1", global::WinUICommunity.GlyphName.Wifi1);
                userType.AddEnumValue("Wifi2", global::WinUICommunity.GlyphName.Wifi2);
                userType.AddEnumValue("Wifi3", global::WinUICommunity.GlyphName.Wifi3);
                userType.AddEnumValue("MobSIMLock", global::WinUICommunity.GlyphName.MobSIMLock);
                userType.AddEnumValue("MobSIMMissing", global::WinUICommunity.GlyphName.MobSIMMissing);
                userType.AddEnumValue("Vibrate", global::WinUICommunity.GlyphName.Vibrate);
                userType.AddEnumValue("RoamingInternational", global::WinUICommunity.GlyphName.RoamingInternational);
                userType.AddEnumValue("RoamingDomestic", global::WinUICommunity.GlyphName.RoamingDomestic);
                userType.AddEnumValue("CallForwardInternational", global::WinUICommunity.GlyphName.CallForwardInternational);
                userType.AddEnumValue("CallForwardRoaming", global::WinUICommunity.GlyphName.CallForwardRoaming);
                userType.AddEnumValue("JpnRomanji", global::WinUICommunity.GlyphName.JpnRomanji);
                userType.AddEnumValue("JpnRomanjiLock", global::WinUICommunity.GlyphName.JpnRomanjiLock);
                userType.AddEnumValue("JpnRomanjiShift", global::WinUICommunity.GlyphName.JpnRomanjiShift);
                userType.AddEnumValue("JpnRomanjiShiftLock", global::WinUICommunity.GlyphName.JpnRomanjiShiftLock);
                userType.AddEnumValue("StatusDataTransfer", global::WinUICommunity.GlyphName.StatusDataTransfer);
                userType.AddEnumValue("StatusDataTransferVPN", global::WinUICommunity.GlyphName.StatusDataTransferVPN);
                userType.AddEnumValue("StatusDualSIM2", global::WinUICommunity.GlyphName.StatusDualSIM2);
                userType.AddEnumValue("StatusDualSIM2VPN", global::WinUICommunity.GlyphName.StatusDualSIM2VPN);
                userType.AddEnumValue("StatusDualSIM1", global::WinUICommunity.GlyphName.StatusDualSIM1);
                userType.AddEnumValue("StatusDualSIM1VPN", global::WinUICommunity.GlyphName.StatusDualSIM1VPN);
                userType.AddEnumValue("StatusSGLTE", global::WinUICommunity.GlyphName.StatusSGLTE);
                userType.AddEnumValue("StatusSGLTECell", global::WinUICommunity.GlyphName.StatusSGLTECell);
                userType.AddEnumValue("StatusSGLTEDataVPN", global::WinUICommunity.GlyphName.StatusSGLTEDataVPN);
                userType.AddEnumValue("StatusVPN", global::WinUICommunity.GlyphName.StatusVPN);
                userType.AddEnumValue("WifiHotspot", global::WinUICommunity.GlyphName.WifiHotspot);
                userType.AddEnumValue("LanguageKor", global::WinUICommunity.GlyphName.LanguageKor);
                userType.AddEnumValue("LanguageCht", global::WinUICommunity.GlyphName.LanguageCht);
                userType.AddEnumValue("LanguageChs", global::WinUICommunity.GlyphName.LanguageChs);
                userType.AddEnumValue("USB", global::WinUICommunity.GlyphName.USB);
                userType.AddEnumValue("InkingToolFill", global::WinUICommunity.GlyphName.InkingToolFill);
                userType.AddEnumValue("View", global::WinUICommunity.GlyphName.View);
                userType.AddEnumValue("HighlightFill", global::WinUICommunity.GlyphName.HighlightFill);
                userType.AddEnumValue("Previous", global::WinUICommunity.GlyphName.Previous);
                userType.AddEnumValue("Next", global::WinUICommunity.GlyphName.Next);
                userType.AddEnumValue("Clear", global::WinUICommunity.GlyphName.Clear);
                userType.AddEnumValue("Sync", global::WinUICommunity.GlyphName.Sync);
                userType.AddEnumValue("Download", global::WinUICommunity.GlyphName.Download);
                userType.AddEnumValue("Help", global::WinUICommunity.GlyphName.Help);
                userType.AddEnumValue("Upload", global::WinUICommunity.GlyphName.Upload);
                userType.AddEnumValue("Emoji", global::WinUICommunity.GlyphName.Emoji);
                userType.AddEnumValue("TwoPage", global::WinUICommunity.GlyphName.TwoPage);
                userType.AddEnumValue("LeaveChat", global::WinUICommunity.GlyphName.LeaveChat);
                userType.AddEnumValue("MailForward", global::WinUICommunity.GlyphName.MailForward);
                userType.AddEnumValue("RotateCamera", global::WinUICommunity.GlyphName.RotateCamera);
                userType.AddEnumValue("ClosePane", global::WinUICommunity.GlyphName.ClosePane);
                userType.AddEnumValue("OpenPane", global::WinUICommunity.GlyphName.OpenPane);
                userType.AddEnumValue("PreviewLink", global::WinUICommunity.GlyphName.PreviewLink);
                userType.AddEnumValue("AttachCamera", global::WinUICommunity.GlyphName.AttachCamera);
                userType.AddEnumValue("ZoomIn", global::WinUICommunity.GlyphName.ZoomIn);
                userType.AddEnumValue("Bookmarks", global::WinUICommunity.GlyphName.Bookmarks);
                userType.AddEnumValue("Document", global::WinUICommunity.GlyphName.Document);
                userType.AddEnumValue("ProtectedDocument", global::WinUICommunity.GlyphName.ProtectedDocument);
                userType.AddEnumValue("OpenInNewWindow", global::WinUICommunity.GlyphName.OpenInNewWindow);
                userType.AddEnumValue("MailFill", global::WinUICommunity.GlyphName.MailFill);
                userType.AddEnumValue("ViewAll", global::WinUICommunity.GlyphName.ViewAll);
                userType.AddEnumValue("VideoChat", global::WinUICommunity.GlyphName.VideoChat);
                userType.AddEnumValue("Switch", global::WinUICommunity.GlyphName.Switch);
                userType.AddEnumValue("Rename", global::WinUICommunity.GlyphName.Rename);
                userType.AddEnumValue("Go", global::WinUICommunity.GlyphName.Go);
                userType.AddEnumValue("SurfaceHub", global::WinUICommunity.GlyphName.SurfaceHub);
                userType.AddEnumValue("Remote", global::WinUICommunity.GlyphName.Remote);
                userType.AddEnumValue("Click", global::WinUICommunity.GlyphName.Click);
                userType.AddEnumValue("Shuffle", global::WinUICommunity.GlyphName.Shuffle);
                userType.AddEnumValue("Movies", global::WinUICommunity.GlyphName.Movies);
                userType.AddEnumValue("SelectAll", global::WinUICommunity.GlyphName.SelectAll);
                userType.AddEnumValue("Orientation", global::WinUICommunity.GlyphName.Orientation);
                userType.AddEnumValue("Import", global::WinUICommunity.GlyphName.Import);
                userType.AddEnumValue("ImportAll", global::WinUICommunity.GlyphName.ImportAll);
                userType.AddEnumValue("Folder", global::WinUICommunity.GlyphName.Folder);
                userType.AddEnumValue("Webcam", global::WinUICommunity.GlyphName.Webcam);
                userType.AddEnumValue("Picture", global::WinUICommunity.GlyphName.Picture);
                userType.AddEnumValue("Caption", global::WinUICommunity.GlyphName.Caption);
                userType.AddEnumValue("ChromeClose", global::WinUICommunity.GlyphName.ChromeClose);
                userType.AddEnumValue("ShowResults", global::WinUICommunity.GlyphName.ShowResults);
                userType.AddEnumValue("Message", global::WinUICommunity.GlyphName.Message);
                userType.AddEnumValue("Leaf", global::WinUICommunity.GlyphName.Leaf);
                userType.AddEnumValue("CalendarDay", global::WinUICommunity.GlyphName.CalendarDay);
                userType.AddEnumValue("CalendarWeek", global::WinUICommunity.GlyphName.CalendarWeek);
                userType.AddEnumValue("Characters", global::WinUICommunity.GlyphName.Characters);
                userType.AddEnumValue("MailReplyAll", global::WinUICommunity.GlyphName.MailReplyAll);
                userType.AddEnumValue("Read", global::WinUICommunity.GlyphName.Read);
                userType.AddEnumValue("ShowBcc", global::WinUICommunity.GlyphName.ShowBcc);
                userType.AddEnumValue("HideBcc", global::WinUICommunity.GlyphName.HideBcc);
                userType.AddEnumValue("Cut", global::WinUICommunity.GlyphName.Cut);
                userType.AddEnumValue("PaymentCard", global::WinUICommunity.GlyphName.PaymentCard);
                userType.AddEnumValue("Copy", global::WinUICommunity.GlyphName.Copy);
                userType.AddEnumValue("Important", global::WinUICommunity.GlyphName.Important);
                userType.AddEnumValue("MailReply", global::WinUICommunity.GlyphName.MailReply);
                userType.AddEnumValue("Sort", global::WinUICommunity.GlyphName.Sort);
                userType.AddEnumValue("MobileTablet", global::WinUICommunity.GlyphName.MobileTablet);
                userType.AddEnumValue("DisconnectDrive", global::WinUICommunity.GlyphName.DisconnectDrive);
                userType.AddEnumValue("MapDrive", global::WinUICommunity.GlyphName.MapDrive);
                userType.AddEnumValue("ContactPresence", global::WinUICommunity.GlyphName.ContactPresence);
                userType.AddEnumValue("Priority", global::WinUICommunity.GlyphName.Priority);
                userType.AddEnumValue("GotoToday", global::WinUICommunity.GlyphName.GotoToday);
                userType.AddEnumValue("Font", global::WinUICommunity.GlyphName.Font);
                userType.AddEnumValue("FontColor", global::WinUICommunity.GlyphName.FontColor);
                userType.AddEnumValue("Contact2", global::WinUICommunity.GlyphName.Contact2);
                userType.AddEnumValue("FolderFill", global::WinUICommunity.GlyphName.FolderFill);
                userType.AddEnumValue("Audio", global::WinUICommunity.GlyphName.Audio);
                userType.AddEnumValue("Permissions", global::WinUICommunity.GlyphName.Permissions);
                userType.AddEnumValue("DisableUpdates", global::WinUICommunity.GlyphName.DisableUpdates);
                userType.AddEnumValue("Unfavorite", global::WinUICommunity.GlyphName.Unfavorite);
                userType.AddEnumValue("OpenLocal", global::WinUICommunity.GlyphName.OpenLocal);
                userType.AddEnumValue("Italic", global::WinUICommunity.GlyphName.Italic);
                userType.AddEnumValue("Underline", global::WinUICommunity.GlyphName.Underline);
                userType.AddEnumValue("Bold", global::WinUICommunity.GlyphName.Bold);
                userType.AddEnumValue("MoveToFolder", global::WinUICommunity.GlyphName.MoveToFolder);
                userType.AddEnumValue("LikeDislike", global::WinUICommunity.GlyphName.LikeDislike);
                userType.AddEnumValue("Dislike", global::WinUICommunity.GlyphName.Dislike);
                userType.AddEnumValue("Like", global::WinUICommunity.GlyphName.Like);
                userType.AddEnumValue("AlignRight", global::WinUICommunity.GlyphName.AlignRight);
                userType.AddEnumValue("AlignCenter", global::WinUICommunity.GlyphName.AlignCenter);
                userType.AddEnumValue("AlignLeft", global::WinUICommunity.GlyphName.AlignLeft);
                userType.AddEnumValue("OpenFile", global::WinUICommunity.GlyphName.OpenFile);
                userType.AddEnumValue("ClearSelection", global::WinUICommunity.GlyphName.ClearSelection);
                userType.AddEnumValue("FontDecrease", global::WinUICommunity.GlyphName.FontDecrease);
                userType.AddEnumValue("FontIncrease", global::WinUICommunity.GlyphName.FontIncrease);
                userType.AddEnumValue("FontSize", global::WinUICommunity.GlyphName.FontSize);
                userType.AddEnumValue("CellPhone", global::WinUICommunity.GlyphName.CellPhone);
                userType.AddEnumValue("Reshare", global::WinUICommunity.GlyphName.Reshare);
                userType.AddEnumValue("Tag", global::WinUICommunity.GlyphName.Tag);
                userType.AddEnumValue("RepeatOne", global::WinUICommunity.GlyphName.RepeatOne);
                userType.AddEnumValue("RepeatAll", global::WinUICommunity.GlyphName.RepeatAll);
                userType.AddEnumValue("Calculator", global::WinUICommunity.GlyphName.Calculator);
                userType.AddEnumValue("Directions", global::WinUICommunity.GlyphName.Directions);
                userType.AddEnumValue("Library", global::WinUICommunity.GlyphName.Library);
                userType.AddEnumValue("ChatBubbles", global::WinUICommunity.GlyphName.ChatBubbles);
                userType.AddEnumValue("PostUpdate", global::WinUICommunity.GlyphName.PostUpdate);
                userType.AddEnumValue("NewFolder", global::WinUICommunity.GlyphName.NewFolder);
                userType.AddEnumValue("CalendarReply", global::WinUICommunity.GlyphName.CalendarReply);
                userType.AddEnumValue("UnsyncFolder", global::WinUICommunity.GlyphName.UnsyncFolder);
                userType.AddEnumValue("SyncFolder", global::WinUICommunity.GlyphName.SyncFolder);
                userType.AddEnumValue("BlockContact", global::WinUICommunity.GlyphName.BlockContact);
                userType.AddEnumValue("SwitchApps", global::WinUICommunity.GlyphName.SwitchApps);
                userType.AddEnumValue("AddFriend", global::WinUICommunity.GlyphName.AddFriend);
                userType.AddEnumValue("Accept", global::WinUICommunity.GlyphName.Accept);
                userType.AddEnumValue("GoToStart", global::WinUICommunity.GlyphName.GoToStart);
                userType.AddEnumValue("BulletedList", global::WinUICommunity.GlyphName.BulletedList);
                userType.AddEnumValue("Scan", global::WinUICommunity.GlyphName.Scan);
                userType.AddEnumValue("Preview", global::WinUICommunity.GlyphName.Preview);
                userType.AddEnumValue("Group", global::WinUICommunity.GlyphName.Group);
                userType.AddEnumValue("ZeroBars", global::WinUICommunity.GlyphName.ZeroBars);
                userType.AddEnumValue("OneBar", global::WinUICommunity.GlyphName.OneBar);
                userType.AddEnumValue("TwoBars", global::WinUICommunity.GlyphName.TwoBars);
                userType.AddEnumValue("ThreeBars", global::WinUICommunity.GlyphName.ThreeBars);
                userType.AddEnumValue("FourBars", global::WinUICommunity.GlyphName.FourBars);
                userType.AddEnumValue("World", global::WinUICommunity.GlyphName.World);
                userType.AddEnumValue("Comment", global::WinUICommunity.GlyphName.Comment);
                userType.AddEnumValue("MusicInfo", global::WinUICommunity.GlyphName.MusicInfo);
                userType.AddEnumValue("DockLeft", global::WinUICommunity.GlyphName.DockLeft);
                userType.AddEnumValue("DockRight", global::WinUICommunity.GlyphName.DockRight);
                userType.AddEnumValue("DockBottom", global::WinUICommunity.GlyphName.DockBottom);
                userType.AddEnumValue("Repair", global::WinUICommunity.GlyphName.Repair);
                userType.AddEnumValue("Accounts", global::WinUICommunity.GlyphName.Accounts);
                userType.AddEnumValue("DullSound", global::WinUICommunity.GlyphName.DullSound);
                userType.AddEnumValue("Manage", global::WinUICommunity.GlyphName.Manage);
                userType.AddEnumValue("Street", global::WinUICommunity.GlyphName.Street);
                userType.AddEnumValue("Printer3D", global::WinUICommunity.GlyphName.Printer3D);
                userType.AddEnumValue("RadioBullet", global::WinUICommunity.GlyphName.RadioBullet);
                userType.AddEnumValue("Stopwatch", global::WinUICommunity.GlyphName.Stopwatch);
                userType.AddEnumValue("Photo", global::WinUICommunity.GlyphName.Photo);
                userType.AddEnumValue("ActionCenter", global::WinUICommunity.GlyphName.ActionCenter);
                userType.AddEnumValue("FullCircleMask", global::WinUICommunity.GlyphName.FullCircleMask);
                userType.AddEnumValue("ChromeMinimize", global::WinUICommunity.GlyphName.ChromeMinimize);
                userType.AddEnumValue("ChromeMaximize", global::WinUICommunity.GlyphName.ChromeMaximize);
                userType.AddEnumValue("ChromeRestore", global::WinUICommunity.GlyphName.ChromeRestore);
                userType.AddEnumValue("Annotation", global::WinUICommunity.GlyphName.Annotation);
                userType.AddEnumValue("BackSpaceQWERTYSm", global::WinUICommunity.GlyphName.BackSpaceQWERTYSm);
                userType.AddEnumValue("BackSpaceQWERTYMd", global::WinUICommunity.GlyphName.BackSpaceQWERTYMd);
                userType.AddEnumValue("Swipe", global::WinUICommunity.GlyphName.Swipe);
                userType.AddEnumValue("Fingerprint", global::WinUICommunity.GlyphName.Fingerprint);
                userType.AddEnumValue("Handwriting", global::WinUICommunity.GlyphName.Handwriting);
                userType.AddEnumValue("ChromeBackToWindow", global::WinUICommunity.GlyphName.ChromeBackToWindow);
                userType.AddEnumValue("ChromeFullScreen", global::WinUICommunity.GlyphName.ChromeFullScreen);
                userType.AddEnumValue("KeyboardStandard", global::WinUICommunity.GlyphName.KeyboardStandard);
                userType.AddEnumValue("KeyboardDismiss", global::WinUICommunity.GlyphName.KeyboardDismiss);
                userType.AddEnumValue("Completed", global::WinUICommunity.GlyphName.Completed);
                userType.AddEnumValue("ChromeAnnotate", global::WinUICommunity.GlyphName.ChromeAnnotate);
                userType.AddEnumValue("Label", global::WinUICommunity.GlyphName.Label);
                userType.AddEnumValue("IBeam", global::WinUICommunity.GlyphName.IBeam);
                userType.AddEnumValue("IBeamOutline", global::WinUICommunity.GlyphName.IBeamOutline);
                userType.AddEnumValue("FlickDown", global::WinUICommunity.GlyphName.FlickDown);
                userType.AddEnumValue("FlickUp", global::WinUICommunity.GlyphName.FlickUp);
                userType.AddEnumValue("FlickLeft", global::WinUICommunity.GlyphName.FlickLeft);
                userType.AddEnumValue("FlickRight", global::WinUICommunity.GlyphName.FlickRight);
                userType.AddEnumValue("FeedbackApp", global::WinUICommunity.GlyphName.FeedbackApp);
                userType.AddEnumValue("MusicAlbum", global::WinUICommunity.GlyphName.MusicAlbum);
                userType.AddEnumValue("Streaming", global::WinUICommunity.GlyphName.Streaming);
                userType.AddEnumValue("Code", global::WinUICommunity.GlyphName.Code);
                userType.AddEnumValue("ReturnToWindow", global::WinUICommunity.GlyphName.ReturnToWindow);
                userType.AddEnumValue("LightningBolt", global::WinUICommunity.GlyphName.LightningBolt);
                userType.AddEnumValue("Info", global::WinUICommunity.GlyphName.Info);
                userType.AddEnumValue("CalculatorMultiply", global::WinUICommunity.GlyphName.CalculatorMultiply);
                userType.AddEnumValue("CalculatorAddition", global::WinUICommunity.GlyphName.CalculatorAddition);
                userType.AddEnumValue("CalculatorSubtract", global::WinUICommunity.GlyphName.CalculatorSubtract);
                userType.AddEnumValue("CalculatorDivide", global::WinUICommunity.GlyphName.CalculatorDivide);
                userType.AddEnumValue("CalculatorSquareroot", global::WinUICommunity.GlyphName.CalculatorSquareroot);
                userType.AddEnumValue("CalculatorPercentage", global::WinUICommunity.GlyphName.CalculatorPercentage);
                userType.AddEnumValue("CalculatorNegate", global::WinUICommunity.GlyphName.CalculatorNegate);
                userType.AddEnumValue("CalculatorEqualTo", global::WinUICommunity.GlyphName.CalculatorEqualTo);
                userType.AddEnumValue("CalculatorBackspace", global::WinUICommunity.GlyphName.CalculatorBackspace);
                userType.AddEnumValue("Component", global::WinUICommunity.GlyphName.Component);
                userType.AddEnumValue("DMC", global::WinUICommunity.GlyphName.DMC);
                userType.AddEnumValue("Dock", global::WinUICommunity.GlyphName.Dock);
                userType.AddEnumValue("MultimediaDMS", global::WinUICommunity.GlyphName.MultimediaDMS);
                userType.AddEnumValue("MultimediaDVR", global::WinUICommunity.GlyphName.MultimediaDVR);
                userType.AddEnumValue("MultimediaPMP", global::WinUICommunity.GlyphName.MultimediaPMP);
                userType.AddEnumValue("PrintfaxPrinterFile", global::WinUICommunity.GlyphName.PrintfaxPrinterFile);
                userType.AddEnumValue("Sensor", global::WinUICommunity.GlyphName.Sensor);
                userType.AddEnumValue("StorageOptical", global::WinUICommunity.GlyphName.StorageOptical);
                userType.AddEnumValue("Communications", global::WinUICommunity.GlyphName.Communications);
                userType.AddEnumValue("Headset", global::WinUICommunity.GlyphName.Headset);
                userType.AddEnumValue("Projector", global::WinUICommunity.GlyphName.Projector);
                userType.AddEnumValue("Health", global::WinUICommunity.GlyphName.Health);
                userType.AddEnumValue("Wire", global::WinUICommunity.GlyphName.Wire);
                userType.AddEnumValue("Webcam2", global::WinUICommunity.GlyphName.Webcam2);
                userType.AddEnumValue("Input", global::WinUICommunity.GlyphName.Input);
                userType.AddEnumValue("Mouse", global::WinUICommunity.GlyphName.Mouse);
                userType.AddEnumValue("Smartcard", global::WinUICommunity.GlyphName.Smartcard);
                userType.AddEnumValue("SmartcardVirtual", global::WinUICommunity.GlyphName.SmartcardVirtual);
                userType.AddEnumValue("MediaStorageTower", global::WinUICommunity.GlyphName.MediaStorageTower);
                userType.AddEnumValue("ReturnKeySm", global::WinUICommunity.GlyphName.ReturnKeySm);
                userType.AddEnumValue("GameConsole", global::WinUICommunity.GlyphName.GameConsole);
                userType.AddEnumValue("Network", global::WinUICommunity.GlyphName.Network);
                userType.AddEnumValue("StorageNetworkWireless", global::WinUICommunity.GlyphName.StorageNetworkWireless);
                userType.AddEnumValue("StorageTape", global::WinUICommunity.GlyphName.StorageTape);
                userType.AddEnumValue("ChevronUpSmall", global::WinUICommunity.GlyphName.ChevronUpSmall);
                userType.AddEnumValue("ChevronDownSmall", global::WinUICommunity.GlyphName.ChevronDownSmall);
                userType.AddEnumValue("ChevronLeftSmall", global::WinUICommunity.GlyphName.ChevronLeftSmall);
                userType.AddEnumValue("ChevronRightSmall", global::WinUICommunity.GlyphName.ChevronRightSmall);
                userType.AddEnumValue("ChevronUpMed", global::WinUICommunity.GlyphName.ChevronUpMed);
                userType.AddEnumValue("ChevronDownMed", global::WinUICommunity.GlyphName.ChevronDownMed);
                userType.AddEnumValue("ChevronLeftMed", global::WinUICommunity.GlyphName.ChevronLeftMed);
                userType.AddEnumValue("ChevronRightMed", global::WinUICommunity.GlyphName.ChevronRightMed);
                userType.AddEnumValue("Devices2", global::WinUICommunity.GlyphName.Devices2);
                userType.AddEnumValue("ExpandTile", global::WinUICommunity.GlyphName.ExpandTile);
                userType.AddEnumValue("PC1", global::WinUICommunity.GlyphName.PC1);
                userType.AddEnumValue("PresenceChicklet", global::WinUICommunity.GlyphName.PresenceChicklet);
                userType.AddEnumValue("PresenceChickletVideo", global::WinUICommunity.GlyphName.PresenceChickletVideo);
                userType.AddEnumValue("Reply", global::WinUICommunity.GlyphName.Reply);
                userType.AddEnumValue("SetTile", global::WinUICommunity.GlyphName.SetTile);
                userType.AddEnumValue("Type", global::WinUICommunity.GlyphName.Type);
                userType.AddEnumValue("Korean", global::WinUICommunity.GlyphName.Korean);
                userType.AddEnumValue("HalfAlpha", global::WinUICommunity.GlyphName.HalfAlpha);
                userType.AddEnumValue("FullAlpha", global::WinUICommunity.GlyphName.FullAlpha);
                userType.AddEnumValue("Key12On", global::WinUICommunity.GlyphName.Key12On);
                userType.AddEnumValue("ChineseChangjie", global::WinUICommunity.GlyphName.ChineseChangjie);
                userType.AddEnumValue("QWERTYOn", global::WinUICommunity.GlyphName.QWERTYOn);
                userType.AddEnumValue("QWERTYOff", global::WinUICommunity.GlyphName.QWERTYOff);
                userType.AddEnumValue("ChineseQuick", global::WinUICommunity.GlyphName.ChineseQuick);
                userType.AddEnumValue("Japanese", global::WinUICommunity.GlyphName.Japanese);
                userType.AddEnumValue("FullHiragana", global::WinUICommunity.GlyphName.FullHiragana);
                userType.AddEnumValue("FullKatakana", global::WinUICommunity.GlyphName.FullKatakana);
                userType.AddEnumValue("HalfKatakana", global::WinUICommunity.GlyphName.HalfKatakana);
                userType.AddEnumValue("ChineseBoPoMoFo", global::WinUICommunity.GlyphName.ChineseBoPoMoFo);
                userType.AddEnumValue("ChinesePinyin", global::WinUICommunity.GlyphName.ChinesePinyin);
                userType.AddEnumValue("ConstructionCone", global::WinUICommunity.GlyphName.ConstructionCone);
                userType.AddEnumValue("XboxOneConsole", global::WinUICommunity.GlyphName.XboxOneConsole);
                userType.AddEnumValue("Volume0", global::WinUICommunity.GlyphName.Volume0);
                userType.AddEnumValue("Volume1", global::WinUICommunity.GlyphName.Volume1);
                userType.AddEnumValue("Volume2", global::WinUICommunity.GlyphName.Volume2);
                userType.AddEnumValue("Volume3", global::WinUICommunity.GlyphName.Volume3);
                userType.AddEnumValue("BatteryUnknown", global::WinUICommunity.GlyphName.BatteryUnknown);
                userType.AddEnumValue("WifiAttentionOverlay", global::WinUICommunity.GlyphName.WifiAttentionOverlay);
                userType.AddEnumValue("Robot", global::WinUICommunity.GlyphName.Robot);
                userType.AddEnumValue("TapAndSend", global::WinUICommunity.GlyphName.TapAndSend);
                userType.AddEnumValue("FitPage", global::WinUICommunity.GlyphName.FitPage);
                userType.AddEnumValue("PasswordKeyShow", global::WinUICommunity.GlyphName.PasswordKeyShow);
                userType.AddEnumValue("PasswordKeyHide", global::WinUICommunity.GlyphName.PasswordKeyHide);
                userType.AddEnumValue("BidiLtr", global::WinUICommunity.GlyphName.BidiLtr);
                userType.AddEnumValue("BidiRtl", global::WinUICommunity.GlyphName.BidiRtl);
                userType.AddEnumValue("ForwardSm", global::WinUICommunity.GlyphName.ForwardSm);
                userType.AddEnumValue("CommaKey", global::WinUICommunity.GlyphName.CommaKey);
                userType.AddEnumValue("DashKey", global::WinUICommunity.GlyphName.DashKey);
                userType.AddEnumValue("DullSoundKey", global::WinUICommunity.GlyphName.DullSoundKey);
                userType.AddEnumValue("HalfDullSound", global::WinUICommunity.GlyphName.HalfDullSound);
                userType.AddEnumValue("RightDoubleQuote", global::WinUICommunity.GlyphName.RightDoubleQuote);
                userType.AddEnumValue("LeftDoubleQuote", global::WinUICommunity.GlyphName.LeftDoubleQuote);
                userType.AddEnumValue("PuncKeyRightBottom", global::WinUICommunity.GlyphName.PuncKeyRightBottom);
                userType.AddEnumValue("PuncKey1", global::WinUICommunity.GlyphName.PuncKey1);
                userType.AddEnumValue("PuncKey2", global::WinUICommunity.GlyphName.PuncKey2);
                userType.AddEnumValue("PuncKey3", global::WinUICommunity.GlyphName.PuncKey3);
                userType.AddEnumValue("PuncKey4", global::WinUICommunity.GlyphName.PuncKey4);
                userType.AddEnumValue("PuncKey5", global::WinUICommunity.GlyphName.PuncKey5);
                userType.AddEnumValue("PuncKey6", global::WinUICommunity.GlyphName.PuncKey6);
                userType.AddEnumValue("PuncKey9", global::WinUICommunity.GlyphName.PuncKey9);
                userType.AddEnumValue("PuncKey7", global::WinUICommunity.GlyphName.PuncKey7);
                userType.AddEnumValue("PuncKey8", global::WinUICommunity.GlyphName.PuncKey8);
                userType.AddEnumValue("Frigid", global::WinUICommunity.GlyphName.Frigid);
                userType.AddEnumValue("Unknown", global::WinUICommunity.GlyphName.Unknown);
                userType.AddEnumValue("AreaChart", global::WinUICommunity.GlyphName.AreaChart);
                userType.AddEnumValue("CheckList", global::WinUICommunity.GlyphName.CheckList);
                userType.AddEnumValue("Diagnostic", global::WinUICommunity.GlyphName.Diagnostic);
                userType.AddEnumValue("Equalizer", global::WinUICommunity.GlyphName.Equalizer);
                userType.AddEnumValue("Process", global::WinUICommunity.GlyphName.Process);
                userType.AddEnumValue("Processing", global::WinUICommunity.GlyphName.Processing);
                userType.AddEnumValue("ReportDocument", global::WinUICommunity.GlyphName.ReportDocument);
                userType.AddEnumValue("VideoSolid", global::WinUICommunity.GlyphName.VideoSolid);
                userType.AddEnumValue("MixedMediaBadge", global::WinUICommunity.GlyphName.MixedMediaBadge);
                userType.AddEnumValue("DisconnectDisplay", global::WinUICommunity.GlyphName.DisconnectDisplay);
                userType.AddEnumValue("Shield", global::WinUICommunity.GlyphName.Shield);
                userType.AddEnumValue("Info2", global::WinUICommunity.GlyphName.Info2);
                userType.AddEnumValue("ActionCenterAsterisk", global::WinUICommunity.GlyphName.ActionCenterAsterisk);
                userType.AddEnumValue("Beta", global::WinUICommunity.GlyphName.Beta);
                userType.AddEnumValue("SaveCopy", global::WinUICommunity.GlyphName.SaveCopy);
                userType.AddEnumValue("List", global::WinUICommunity.GlyphName.List);
                userType.AddEnumValue("Asterisk", global::WinUICommunity.GlyphName.Asterisk);
                userType.AddEnumValue("ErrorBadge", global::WinUICommunity.GlyphName.ErrorBadge);
                userType.AddEnumValue("CircleRing", global::WinUICommunity.GlyphName.CircleRing);
                userType.AddEnumValue("CircleFill", global::WinUICommunity.GlyphName.CircleFill);
                userType.AddEnumValue("MergeCall", global::WinUICommunity.GlyphName.MergeCall);
                userType.AddEnumValue("PrivateCall", global::WinUICommunity.GlyphName.PrivateCall);
                userType.AddEnumValue("Record2", global::WinUICommunity.GlyphName.Record2);
                userType.AddEnumValue("AllAppsMirrored", global::WinUICommunity.GlyphName.AllAppsMirrored);
                userType.AddEnumValue("BookmarksMirrored", global::WinUICommunity.GlyphName.BookmarksMirrored);
                userType.AddEnumValue("BulletedListMirrored", global::WinUICommunity.GlyphName.BulletedListMirrored);
                userType.AddEnumValue("CallForwardInternationalMirrored", global::WinUICommunity.GlyphName.CallForwardInternationalMirrored);
                userType.AddEnumValue("CallForwardRoamingMirrored", global::WinUICommunity.GlyphName.CallForwardRoamingMirrored);
                userType.AddEnumValue("ChromeBackMirrored", global::WinUICommunity.GlyphName.ChromeBackMirrored);
                userType.AddEnumValue("ClearSelectionMirrored", global::WinUICommunity.GlyphName.ClearSelectionMirrored);
                userType.AddEnumValue("ClosePaneMirrored", global::WinUICommunity.GlyphName.ClosePaneMirrored);
                userType.AddEnumValue("ContactInfoMirrored", global::WinUICommunity.GlyphName.ContactInfoMirrored);
                userType.AddEnumValue("DockRightMirrored", global::WinUICommunity.GlyphName.DockRightMirrored);
                userType.AddEnumValue("DockLeftMirrored", global::WinUICommunity.GlyphName.DockLeftMirrored);
                userType.AddEnumValue("ExpandTileMirrored", global::WinUICommunity.GlyphName.ExpandTileMirrored);
                userType.AddEnumValue("GoMirrored", global::WinUICommunity.GlyphName.GoMirrored);
                userType.AddEnumValue("GripperResizeMirrored", global::WinUICommunity.GlyphName.GripperResizeMirrored);
                userType.AddEnumValue("HelpMirrored", global::WinUICommunity.GlyphName.HelpMirrored);
                userType.AddEnumValue("ImportMirrored", global::WinUICommunity.GlyphName.ImportMirrored);
                userType.AddEnumValue("ImportAllMirrored", global::WinUICommunity.GlyphName.ImportAllMirrored);
                userType.AddEnumValue("LeaveChatMirrored", global::WinUICommunity.GlyphName.LeaveChatMirrored);
                userType.AddEnumValue("ListMirrored", global::WinUICommunity.GlyphName.ListMirrored);
                userType.AddEnumValue("MailForwardMirrored", global::WinUICommunity.GlyphName.MailForwardMirrored);
                userType.AddEnumValue("MailReplyMirrored", global::WinUICommunity.GlyphName.MailReplyMirrored);
                userType.AddEnumValue("MailReplyAllMirrored", global::WinUICommunity.GlyphName.MailReplyAllMirrored);
                userType.AddEnumValue("OpenPaneMirrored", global::WinUICommunity.GlyphName.OpenPaneMirrored);
                userType.AddEnumValue("OpenWithMirrored", global::WinUICommunity.GlyphName.OpenWithMirrored);
                userType.AddEnumValue("ParkingLocationMirrored", global::WinUICommunity.GlyphName.ParkingLocationMirrored);
                userType.AddEnumValue("ResizeMouseMediumMirrored", global::WinUICommunity.GlyphName.ResizeMouseMediumMirrored);
                userType.AddEnumValue("ResizeMouseSmallMirrored", global::WinUICommunity.GlyphName.ResizeMouseSmallMirrored);
                userType.AddEnumValue("ResizeMouseTallMirrored", global::WinUICommunity.GlyphName.ResizeMouseTallMirrored);
                userType.AddEnumValue("ResizeTouchNarrowerMirrored", global::WinUICommunity.GlyphName.ResizeTouchNarrowerMirrored);
                userType.AddEnumValue("SendMirrored", global::WinUICommunity.GlyphName.SendMirrored);
                userType.AddEnumValue("SendFillMirrored", global::WinUICommunity.GlyphName.SendFillMirrored);
                userType.AddEnumValue("ShowResultsMirrored", global::WinUICommunity.GlyphName.ShowResultsMirrored);
                userType.AddEnumValue("Media", global::WinUICommunity.GlyphName.Media);
                userType.AddEnumValue("SyncError", global::WinUICommunity.GlyphName.SyncError);
                userType.AddEnumValue("Devices3", global::WinUICommunity.GlyphName.Devices3);
                userType.AddEnumValue("SlowMotionOn", global::WinUICommunity.GlyphName.SlowMotionOn);
                userType.AddEnumValue("Lightbulb", global::WinUICommunity.GlyphName.Lightbulb);
                userType.AddEnumValue("StatusCircle", global::WinUICommunity.GlyphName.StatusCircle);
                userType.AddEnumValue("StatusTriangle", global::WinUICommunity.GlyphName.StatusTriangle);
                userType.AddEnumValue("StatusError", global::WinUICommunity.GlyphName.StatusError);
                userType.AddEnumValue("StatusWarning", global::WinUICommunity.GlyphName.StatusWarning);
                userType.AddEnumValue("Puzzle", global::WinUICommunity.GlyphName.Puzzle);
                userType.AddEnumValue("CalendarSolid", global::WinUICommunity.GlyphName.CalendarSolid);
                userType.AddEnumValue("HomeSolid", global::WinUICommunity.GlyphName.HomeSolid);
                userType.AddEnumValue("ParkingLocationSolid", global::WinUICommunity.GlyphName.ParkingLocationSolid);
                userType.AddEnumValue("ContactSolid", global::WinUICommunity.GlyphName.ContactSolid);
                userType.AddEnumValue("ConstructionSolid", global::WinUICommunity.GlyphName.ConstructionSolid);
                userType.AddEnumValue("AccidentSolid", global::WinUICommunity.GlyphName.AccidentSolid);
                userType.AddEnumValue("Ringer", global::WinUICommunity.GlyphName.Ringer);
                userType.AddEnumValue("PDF", global::WinUICommunity.GlyphName.PDF);
                userType.AddEnumValue("ThoughtBubble", global::WinUICommunity.GlyphName.ThoughtBubble);
                userType.AddEnumValue("HeartBroken", global::WinUICommunity.GlyphName.HeartBroken);
                userType.AddEnumValue("BatteryCharging10", global::WinUICommunity.GlyphName.BatteryCharging10);
                userType.AddEnumValue("BatterySaver9", global::WinUICommunity.GlyphName.BatterySaver9);
                userType.AddEnumValue("BatterySaver10", global::WinUICommunity.GlyphName.BatterySaver10);
                userType.AddEnumValue("CallForwardingMirrored", global::WinUICommunity.GlyphName.CallForwardingMirrored);
                userType.AddEnumValue("MultiSelectMirrored", global::WinUICommunity.GlyphName.MultiSelectMirrored);
                userType.AddEnumValue("Broom", global::WinUICommunity.GlyphName.Broom);
                userType.AddEnumValue("ForwardCall", global::WinUICommunity.GlyphName.ForwardCall);
                userType.AddEnumValue("Trackers", global::WinUICommunity.GlyphName.Trackers);
                userType.AddEnumValue("Market", global::WinUICommunity.GlyphName.Market);
                userType.AddEnumValue("PieSingle", global::WinUICommunity.GlyphName.PieSingle);
                userType.AddEnumValue("StockUp", global::WinUICommunity.GlyphName.StockUp);
                userType.AddEnumValue("StockDown", global::WinUICommunity.GlyphName.StockDown);
                userType.AddEnumValue("Design", global::WinUICommunity.GlyphName.Design);
                userType.AddEnumValue("Website", global::WinUICommunity.GlyphName.Website);
                userType.AddEnumValue("Drop", global::WinUICommunity.GlyphName.Drop);
                userType.AddEnumValue("Radar", global::WinUICommunity.GlyphName.Radar);
                userType.AddEnumValue("BusSolid", global::WinUICommunity.GlyphName.BusSolid);
                userType.AddEnumValue("FerrySolid", global::WinUICommunity.GlyphName.FerrySolid);
                userType.AddEnumValue("StartPointSolid", global::WinUICommunity.GlyphName.StartPointSolid);
                userType.AddEnumValue("StopPointSolid", global::WinUICommunity.GlyphName.StopPointSolid);
                userType.AddEnumValue("EndPointSolid", global::WinUICommunity.GlyphName.EndPointSolid);
                userType.AddEnumValue("AirplaneSolid", global::WinUICommunity.GlyphName.AirplaneSolid);
                userType.AddEnumValue("TrainSolid", global::WinUICommunity.GlyphName.TrainSolid);
                userType.AddEnumValue("WorkSolid", global::WinUICommunity.GlyphName.WorkSolid);
                userType.AddEnumValue("ReminderFill", global::WinUICommunity.GlyphName.ReminderFill);
                userType.AddEnumValue("Reminder", global::WinUICommunity.GlyphName.Reminder);
                userType.AddEnumValue("Heart", global::WinUICommunity.GlyphName.Heart);
                userType.AddEnumValue("HeartFill", global::WinUICommunity.GlyphName.HeartFill);
                userType.AddEnumValue("EthernetError", global::WinUICommunity.GlyphName.EthernetError);
                userType.AddEnumValue("EthernetWarning", global::WinUICommunity.GlyphName.EthernetWarning);
                userType.AddEnumValue("StatusConnecting1", global::WinUICommunity.GlyphName.StatusConnecting1);
                userType.AddEnumValue("StatusConnecting2", global::WinUICommunity.GlyphName.StatusConnecting2);
                userType.AddEnumValue("StatusUnsecure", global::WinUICommunity.GlyphName.StatusUnsecure);
                userType.AddEnumValue("WifiError0", global::WinUICommunity.GlyphName.WifiError0);
                userType.AddEnumValue("WifiError1", global::WinUICommunity.GlyphName.WifiError1);
                userType.AddEnumValue("WifiError2", global::WinUICommunity.GlyphName.WifiError2);
                userType.AddEnumValue("WifiError3", global::WinUICommunity.GlyphName.WifiError3);
                userType.AddEnumValue("WifiError4", global::WinUICommunity.GlyphName.WifiError4);
                userType.AddEnumValue("WifiWarning0", global::WinUICommunity.GlyphName.WifiWarning0);
                userType.AddEnumValue("WifiWarning1", global::WinUICommunity.GlyphName.WifiWarning1);
                userType.AddEnumValue("WifiWarning2", global::WinUICommunity.GlyphName.WifiWarning2);
                userType.AddEnumValue("WifiWarning3", global::WinUICommunity.GlyphName.WifiWarning3);
                userType.AddEnumValue("WifiWarning4", global::WinUICommunity.GlyphName.WifiWarning4);
                userType.AddEnumValue("Devices4", global::WinUICommunity.GlyphName.Devices4);
                userType.AddEnumValue("NUIIris", global::WinUICommunity.GlyphName.NUIIris);
                userType.AddEnumValue("NUIFace", global::WinUICommunity.GlyphName.NUIFace);
                userType.AddEnumValue("GatewayRouter", global::WinUICommunity.GlyphName.GatewayRouter);
                userType.AddEnumValue("EditMirrored", global::WinUICommunity.GlyphName.EditMirrored);
                userType.AddEnumValue("NUIFPStartSlideHand", global::WinUICommunity.GlyphName.NUIFPStartSlideHand);
                userType.AddEnumValue("NUIFPStartSlideAction", global::WinUICommunity.GlyphName.NUIFPStartSlideAction);
                userType.AddEnumValue("NUIFPContinueSlideHand", global::WinUICommunity.GlyphName.NUIFPContinueSlideHand);
                userType.AddEnumValue("NUIFPContinueSlideAction", global::WinUICommunity.GlyphName.NUIFPContinueSlideAction);
                userType.AddEnumValue("NUIFPRollRightHand", global::WinUICommunity.GlyphName.NUIFPRollRightHand);
                userType.AddEnumValue("NUIFPRollRightHandAction", global::WinUICommunity.GlyphName.NUIFPRollRightHandAction);
                userType.AddEnumValue("NUIFPRollLeftHand", global::WinUICommunity.GlyphName.NUIFPRollLeftHand);
                userType.AddEnumValue("NUIFPRollLeftAction", global::WinUICommunity.GlyphName.NUIFPRollLeftAction);
                userType.AddEnumValue("NUIFPPressHand", global::WinUICommunity.GlyphName.NUIFPPressHand);
                userType.AddEnumValue("NUIFPPressAction", global::WinUICommunity.GlyphName.NUIFPPressAction);
                userType.AddEnumValue("NUIFPPressRepeatHand", global::WinUICommunity.GlyphName.NUIFPPressRepeatHand);
                userType.AddEnumValue("NUIFPPressRepeatAction", global::WinUICommunity.GlyphName.NUIFPPressRepeatAction);
                userType.AddEnumValue("StatusErrorFull", global::WinUICommunity.GlyphName.StatusErrorFull);
                userType.AddEnumValue("TaskViewExpanded", global::WinUICommunity.GlyphName.TaskViewExpanded);
                userType.AddEnumValue("Certificate", global::WinUICommunity.GlyphName.Certificate);
                userType.AddEnumValue("BackSpaceQWERTYLg", global::WinUICommunity.GlyphName.BackSpaceQWERTYLg);
                userType.AddEnumValue("ReturnKeyLg", global::WinUICommunity.GlyphName.ReturnKeyLg);
                userType.AddEnumValue("FastForward", global::WinUICommunity.GlyphName.FastForward);
                userType.AddEnumValue("Rewind", global::WinUICommunity.GlyphName.Rewind);
                userType.AddEnumValue("Photo2", global::WinUICommunity.GlyphName.Photo2);
                userType.AddEnumValue("MobBattery0", global::WinUICommunity.GlyphName.MobBattery0);
                userType.AddEnumValue("MobBattery1", global::WinUICommunity.GlyphName.MobBattery1);
                userType.AddEnumValue("MobBattery2", global::WinUICommunity.GlyphName.MobBattery2);
                userType.AddEnumValue("MobBattery3", global::WinUICommunity.GlyphName.MobBattery3);
                userType.AddEnumValue("MobBattery4", global::WinUICommunity.GlyphName.MobBattery4);
                userType.AddEnumValue("MobBattery5", global::WinUICommunity.GlyphName.MobBattery5);
                userType.AddEnumValue("MobBattery6", global::WinUICommunity.GlyphName.MobBattery6);
                userType.AddEnumValue("MobBattery7", global::WinUICommunity.GlyphName.MobBattery7);
                userType.AddEnumValue("MobBattery8", global::WinUICommunity.GlyphName.MobBattery8);
                userType.AddEnumValue("MobBattery9", global::WinUICommunity.GlyphName.MobBattery9);
                userType.AddEnumValue("MobBattery10", global::WinUICommunity.GlyphName.MobBattery10);
                userType.AddEnumValue("MobBatteryCharging0", global::WinUICommunity.GlyphName.MobBatteryCharging0);
                userType.AddEnumValue("MobBatteryCharging1", global::WinUICommunity.GlyphName.MobBatteryCharging1);
                userType.AddEnumValue("MobBatteryCharging2", global::WinUICommunity.GlyphName.MobBatteryCharging2);
                userType.AddEnumValue("MobBatteryCharging3", global::WinUICommunity.GlyphName.MobBatteryCharging3);
                userType.AddEnumValue("MobBatteryCharging4", global::WinUICommunity.GlyphName.MobBatteryCharging4);
                userType.AddEnumValue("MobBatteryCharging5", global::WinUICommunity.GlyphName.MobBatteryCharging5);
                userType.AddEnumValue("MobBatteryCharging6", global::WinUICommunity.GlyphName.MobBatteryCharging6);
                userType.AddEnumValue("MobBatteryCharging7", global::WinUICommunity.GlyphName.MobBatteryCharging7);
                userType.AddEnumValue("MobBatteryCharging8", global::WinUICommunity.GlyphName.MobBatteryCharging8);
                userType.AddEnumValue("MobBatteryCharging9", global::WinUICommunity.GlyphName.MobBatteryCharging9);
                userType.AddEnumValue("MobBatteryCharging10", global::WinUICommunity.GlyphName.MobBatteryCharging10);
                userType.AddEnumValue("MobBatterySaver0", global::WinUICommunity.GlyphName.MobBatterySaver0);
                userType.AddEnumValue("MobBatterySaver1", global::WinUICommunity.GlyphName.MobBatterySaver1);
                userType.AddEnumValue("MobBatterySaver2", global::WinUICommunity.GlyphName.MobBatterySaver2);
                userType.AddEnumValue("MobBatterySaver3", global::WinUICommunity.GlyphName.MobBatterySaver3);
                userType.AddEnumValue("MobBatterySaver4", global::WinUICommunity.GlyphName.MobBatterySaver4);
                userType.AddEnumValue("MobBatterySaver5", global::WinUICommunity.GlyphName.MobBatterySaver5);
                userType.AddEnumValue("MobBatterySaver6", global::WinUICommunity.GlyphName.MobBatterySaver6);
                userType.AddEnumValue("MobBatterySaver7", global::WinUICommunity.GlyphName.MobBatterySaver7);
                userType.AddEnumValue("MobBatterySaver8", global::WinUICommunity.GlyphName.MobBatterySaver8);
                userType.AddEnumValue("MobBatterySaver9", global::WinUICommunity.GlyphName.MobBatterySaver9);
                userType.AddEnumValue("MobBatterySaver10", global::WinUICommunity.GlyphName.MobBatterySaver10);
                userType.AddEnumValue("DictionaryCloud", global::WinUICommunity.GlyphName.DictionaryCloud);
                userType.AddEnumValue("ResetDrive", global::WinUICommunity.GlyphName.ResetDrive);
                userType.AddEnumValue("VolumeBars", global::WinUICommunity.GlyphName.VolumeBars);
                userType.AddEnumValue("Project", global::WinUICommunity.GlyphName.Project);
                userType.AddEnumValue("AdjustHologram", global::WinUICommunity.GlyphName.AdjustHologram);
                userType.AddEnumValue("CloudDownload", global::WinUICommunity.GlyphName.CloudDownload);
                userType.AddEnumValue("MobWifiCallBars", global::WinUICommunity.GlyphName.MobWifiCallBars);
                userType.AddEnumValue("MobWifiCall0", global::WinUICommunity.GlyphName.MobWifiCall0);
                userType.AddEnumValue("MobWifiCall1", global::WinUICommunity.GlyphName.MobWifiCall1);
                userType.AddEnumValue("MobWifiCall2", global::WinUICommunity.GlyphName.MobWifiCall2);
                userType.AddEnumValue("MobWifiCall3", global::WinUICommunity.GlyphName.MobWifiCall3);
                userType.AddEnumValue("MobWifiCall4", global::WinUICommunity.GlyphName.MobWifiCall4);
                userType.AddEnumValue("Family", global::WinUICommunity.GlyphName.Family);
                userType.AddEnumValue("LockFeedback", global::WinUICommunity.GlyphName.LockFeedback);
                userType.AddEnumValue("DeviceDiscovery", global::WinUICommunity.GlyphName.DeviceDiscovery);
                userType.AddEnumValue("WindDirection", global::WinUICommunity.GlyphName.WindDirection);
                userType.AddEnumValue("RightArrowKeyTime0", global::WinUICommunity.GlyphName.RightArrowKeyTime0);
                userType.AddEnumValue("Bug", global::WinUICommunity.GlyphName.Bug);
                userType.AddEnumValue("TabletMode", global::WinUICommunity.GlyphName.TabletMode);
                userType.AddEnumValue("StatusCircleLeft", global::WinUICommunity.GlyphName.StatusCircleLeft);
                userType.AddEnumValue("StatusTriangleLeft", global::WinUICommunity.GlyphName.StatusTriangleLeft);
                userType.AddEnumValue("StatusErrorLeft", global::WinUICommunity.GlyphName.StatusErrorLeft);
                userType.AddEnumValue("StatusWarningLeft", global::WinUICommunity.GlyphName.StatusWarningLeft);
                userType.AddEnumValue("MobBatteryUnknown", global::WinUICommunity.GlyphName.MobBatteryUnknown);
                userType.AddEnumValue("NetworkTower", global::WinUICommunity.GlyphName.NetworkTower);
                userType.AddEnumValue("CityNext", global::WinUICommunity.GlyphName.CityNext);
                userType.AddEnumValue("CityNext2", global::WinUICommunity.GlyphName.CityNext2);
                userType.AddEnumValue("Courthouse", global::WinUICommunity.GlyphName.Courthouse);
                userType.AddEnumValue("Groceries", global::WinUICommunity.GlyphName.Groceries);
                userType.AddEnumValue("Sustainable", global::WinUICommunity.GlyphName.Sustainable);
                userType.AddEnumValue("BuildingEnergy", global::WinUICommunity.GlyphName.BuildingEnergy);
                userType.AddEnumValue("ToggleFilled", global::WinUICommunity.GlyphName.ToggleFilled);
                userType.AddEnumValue("ToggleBorder", global::WinUICommunity.GlyphName.ToggleBorder);
                userType.AddEnumValue("SliderThumb", global::WinUICommunity.GlyphName.SliderThumb);
                userType.AddEnumValue("ToggleThumb", global::WinUICommunity.GlyphName.ToggleThumb);
                userType.AddEnumValue("MiracastLogoSmall", global::WinUICommunity.GlyphName.MiracastLogoSmall);
                userType.AddEnumValue("MiracastLogoLarge", global::WinUICommunity.GlyphName.MiracastLogoLarge);
                userType.AddEnumValue("PLAP", global::WinUICommunity.GlyphName.PLAP);
                userType.AddEnumValue("Badge", global::WinUICommunity.GlyphName.Badge);
                userType.AddEnumValue("SignalRoaming", global::WinUICommunity.GlyphName.SignalRoaming);
                userType.AddEnumValue("MobileLocked", global::WinUICommunity.GlyphName.MobileLocked);
                userType.AddEnumValue("InsiderHubApp", global::WinUICommunity.GlyphName.InsiderHubApp);
                userType.AddEnumValue("PersonalFolder", global::WinUICommunity.GlyphName.PersonalFolder);
                userType.AddEnumValue("HomeGroup", global::WinUICommunity.GlyphName.HomeGroup);
                userType.AddEnumValue("MyNetwork", global::WinUICommunity.GlyphName.MyNetwork);
                userType.AddEnumValue("KeyboardFull", global::WinUICommunity.GlyphName.KeyboardFull);
                userType.AddEnumValue("Cafe", global::WinUICommunity.GlyphName.Cafe);
                userType.AddEnumValue("MobSignal1", global::WinUICommunity.GlyphName.MobSignal1);
                userType.AddEnumValue("MobSignal2", global::WinUICommunity.GlyphName.MobSignal2);
                userType.AddEnumValue("MobSignal3", global::WinUICommunity.GlyphName.MobSignal3);
                userType.AddEnumValue("MobSignal4", global::WinUICommunity.GlyphName.MobSignal4);
                userType.AddEnumValue("MobSignal5", global::WinUICommunity.GlyphName.MobSignal5);
                userType.AddEnumValue("MobWifi1", global::WinUICommunity.GlyphName.MobWifi1);
                userType.AddEnumValue("MobWifi2", global::WinUICommunity.GlyphName.MobWifi2);
                userType.AddEnumValue("MobWifi3", global::WinUICommunity.GlyphName.MobWifi3);
                userType.AddEnumValue("MobWifi4", global::WinUICommunity.GlyphName.MobWifi4);
                userType.AddEnumValue("MobAirplane", global::WinUICommunity.GlyphName.MobAirplane);
                userType.AddEnumValue("MobBluetooth", global::WinUICommunity.GlyphName.MobBluetooth);
                userType.AddEnumValue("MobActionCenter", global::WinUICommunity.GlyphName.MobActionCenter);
                userType.AddEnumValue("MobLocation", global::WinUICommunity.GlyphName.MobLocation);
                userType.AddEnumValue("MobWifiHotspot", global::WinUICommunity.GlyphName.MobWifiHotspot);
                userType.AddEnumValue("LanguageJpn", global::WinUICommunity.GlyphName.LanguageJpn);
                userType.AddEnumValue("MobQuietHours", global::WinUICommunity.GlyphName.MobQuietHours);
                userType.AddEnumValue("MobDrivingMode", global::WinUICommunity.GlyphName.MobDrivingMode);
                userType.AddEnumValue("SpeedOff", global::WinUICommunity.GlyphName.SpeedOff);
                userType.AddEnumValue("SpeedMedium", global::WinUICommunity.GlyphName.SpeedMedium);
                userType.AddEnumValue("SpeedHigh", global::WinUICommunity.GlyphName.SpeedHigh);
                userType.AddEnumValue("ThisPC", global::WinUICommunity.GlyphName.ThisPC);
                userType.AddEnumValue("MusicNote", global::WinUICommunity.GlyphName.MusicNote);
                userType.AddEnumValue("FileExplorer", global::WinUICommunity.GlyphName.FileExplorer);
                userType.AddEnumValue("FileExplorerApp", global::WinUICommunity.GlyphName.FileExplorerApp);
                userType.AddEnumValue("LeftArrowKeyTime0", global::WinUICommunity.GlyphName.LeftArrowKeyTime0);
                userType.AddEnumValue("MicOff", global::WinUICommunity.GlyphName.MicOff);
                userType.AddEnumValue("MicSleep", global::WinUICommunity.GlyphName.MicSleep);
                userType.AddEnumValue("MicError", global::WinUICommunity.GlyphName.MicError);
                userType.AddEnumValue("PlaybackRate1x", global::WinUICommunity.GlyphName.PlaybackRate1x);
                userType.AddEnumValue("PlaybackRateOther", global::WinUICommunity.GlyphName.PlaybackRateOther);
                userType.AddEnumValue("CashDrawer", global::WinUICommunity.GlyphName.CashDrawer);
                userType.AddEnumValue("BarcodeScanner", global::WinUICommunity.GlyphName.BarcodeScanner);
                userType.AddEnumValue("ReceiptPrinter", global::WinUICommunity.GlyphName.ReceiptPrinter);
                userType.AddEnumValue("MagStripeReader", global::WinUICommunity.GlyphName.MagStripeReader);
                userType.AddEnumValue("CompletedSolid", global::WinUICommunity.GlyphName.CompletedSolid);
                userType.AddEnumValue("CompanionApp", global::WinUICommunity.GlyphName.CompanionApp);
                userType.AddEnumValue("Favicon2", global::WinUICommunity.GlyphName.Favicon2);
                userType.AddEnumValue("SwipeRevealArt", global::WinUICommunity.GlyphName.SwipeRevealArt);
                userType.AddEnumValue("MicOn", global::WinUICommunity.GlyphName.MicOn);
                userType.AddEnumValue("MicClipping", global::WinUICommunity.GlyphName.MicClipping);
                userType.AddEnumValue("TabletSelected", global::WinUICommunity.GlyphName.TabletSelected);
                userType.AddEnumValue("MobileSelected", global::WinUICommunity.GlyphName.MobileSelected);
                userType.AddEnumValue("LaptopSelected", global::WinUICommunity.GlyphName.LaptopSelected);
                userType.AddEnumValue("TVMonitorSelected", global::WinUICommunity.GlyphName.TVMonitorSelected);
                userType.AddEnumValue("DeveloperTools", global::WinUICommunity.GlyphName.DeveloperTools);
                userType.AddEnumValue("MobCallForwarding", global::WinUICommunity.GlyphName.MobCallForwarding);
                userType.AddEnumValue("MobCallForwardingMirrored", global::WinUICommunity.GlyphName.MobCallForwardingMirrored);
                userType.AddEnumValue("BodyCam", global::WinUICommunity.GlyphName.BodyCam);
                userType.AddEnumValue("PoliceCar", global::WinUICommunity.GlyphName.PoliceCar);
                userType.AddEnumValue("Draw", global::WinUICommunity.GlyphName.Draw);
                userType.AddEnumValue("DrawSolid", global::WinUICommunity.GlyphName.DrawSolid);
                userType.AddEnumValue("LowerBrightness", global::WinUICommunity.GlyphName.LowerBrightness);
                userType.AddEnumValue("ScrollUpDown", global::WinUICommunity.GlyphName.ScrollUpDown);
                userType.AddEnumValue("DateTime", global::WinUICommunity.GlyphName.DateTime);
                userType.AddEnumValue("HoloLens", global::WinUICommunity.GlyphName.HoloLens);
                userType.AddEnumValue("Tiles", global::WinUICommunity.GlyphName.Tiles);
                userType.AddEnumValue("PartyLeader", global::WinUICommunity.GlyphName.PartyLeader);
                userType.AddEnumValue("AppIconDefault", global::WinUICommunity.GlyphName.AppIconDefault);
                userType.AddEnumValue("Calories", global::WinUICommunity.GlyphName.Calories);
                userType.AddEnumValue("POI", global::WinUICommunity.GlyphName.POI);
                userType.AddEnumValue("BandBattery0", global::WinUICommunity.GlyphName.BandBattery0);
                userType.AddEnumValue("BandBattery1", global::WinUICommunity.GlyphName.BandBattery1);
                userType.AddEnumValue("BandBattery2", global::WinUICommunity.GlyphName.BandBattery2);
                userType.AddEnumValue("BandBattery3", global::WinUICommunity.GlyphName.BandBattery3);
                userType.AddEnumValue("BandBattery4", global::WinUICommunity.GlyphName.BandBattery4);
                userType.AddEnumValue("BandBattery5", global::WinUICommunity.GlyphName.BandBattery5);
                userType.AddEnumValue("BandBattery6", global::WinUICommunity.GlyphName.BandBattery6);
                userType.AddEnumValue("AddSurfaceHub", global::WinUICommunity.GlyphName.AddSurfaceHub);
                userType.AddEnumValue("DevUpdate", global::WinUICommunity.GlyphName.DevUpdate);
                userType.AddEnumValue("Unit", global::WinUICommunity.GlyphName.Unit);
                userType.AddEnumValue("AddTo", global::WinUICommunity.GlyphName.AddTo);
                userType.AddEnumValue("RemoveFrom", global::WinUICommunity.GlyphName.RemoveFrom);
                userType.AddEnumValue("RadioBtnOff", global::WinUICommunity.GlyphName.RadioBtnOff);
                userType.AddEnumValue("RadioBtnOn", global::WinUICommunity.GlyphName.RadioBtnOn);
                userType.AddEnumValue("RadioBullet2", global::WinUICommunity.GlyphName.RadioBullet2);
                userType.AddEnumValue("ExploreContent", global::WinUICommunity.GlyphName.ExploreContent);
                userType.AddEnumValue("Blocked2", global::WinUICommunity.GlyphName.Blocked2);
                userType.AddEnumValue("ScrollMode", global::WinUICommunity.GlyphName.ScrollMode);
                userType.AddEnumValue("ZoomMode", global::WinUICommunity.GlyphName.ZoomMode);
                userType.AddEnumValue("PanMode", global::WinUICommunity.GlyphName.PanMode);
                userType.AddEnumValue("WiredUSB", global::WinUICommunity.GlyphName.WiredUSB);
                userType.AddEnumValue("WirelessUSB", global::WinUICommunity.GlyphName.WirelessUSB);
                userType.AddEnumValue("USBSafeConnect", global::WinUICommunity.GlyphName.USBSafeConnect);
                userType.AddEnumValue("ActionCenterNotificationMirrored", global::WinUICommunity.GlyphName.ActionCenterNotificationMirrored);
                userType.AddEnumValue("ActionCenterMirrored", global::WinUICommunity.GlyphName.ActionCenterMirrored);
                userType.AddEnumValue("SubscriptionAdd", global::WinUICommunity.GlyphName.SubscriptionAdd);
                userType.AddEnumValue("ResetDevice", global::WinUICommunity.GlyphName.ResetDevice);
                userType.AddEnumValue("SubscriptionAddMirrored", global::WinUICommunity.GlyphName.SubscriptionAddMirrored);
                userType.AddEnumValue("QRCode", global::WinUICommunity.GlyphName.QRCode);
                userType.AddEnumValue("Feedback", global::WinUICommunity.GlyphName.Feedback);
                userType.AddEnumValue("Hide", global::WinUICommunity.GlyphName.Hide);
                userType.AddEnumValue("Subtitles", global::WinUICommunity.GlyphName.Subtitles);
                userType.AddEnumValue("SubtitlesAudio", global::WinUICommunity.GlyphName.SubtitlesAudio);
                userType.AddEnumValue("OpenFolderHorizontal", global::WinUICommunity.GlyphName.OpenFolderHorizontal);
                userType.AddEnumValue("CalendarMirrored", global::WinUICommunity.GlyphName.CalendarMirrored);
                userType.AddEnumValue("MobeSIM", global::WinUICommunity.GlyphName.MobeSIM);
                userType.AddEnumValue("MobeSIMNoProfile", global::WinUICommunity.GlyphName.MobeSIMNoProfile);
                userType.AddEnumValue("MobeSIMLocked", global::WinUICommunity.GlyphName.MobeSIMLocked);
                userType.AddEnumValue("MobeSIMBusy", global::WinUICommunity.GlyphName.MobeSIMBusy);
                userType.AddEnumValue("SignalError", global::WinUICommunity.GlyphName.SignalError);
                userType.AddEnumValue("StreamingEnterprise", global::WinUICommunity.GlyphName.StreamingEnterprise);
                userType.AddEnumValue("Headphone0", global::WinUICommunity.GlyphName.Headphone0);
                userType.AddEnumValue("Headphone1", global::WinUICommunity.GlyphName.Headphone1);
                userType.AddEnumValue("Headphone2", global::WinUICommunity.GlyphName.Headphone2);
                userType.AddEnumValue("Headphone3", global::WinUICommunity.GlyphName.Headphone3);
                userType.AddEnumValue("Apps", global::WinUICommunity.GlyphName.Apps);
                userType.AddEnumValue("KeyboardBrightness", global::WinUICommunity.GlyphName.KeyboardBrightness);
                userType.AddEnumValue("KeyboardLowerBrightness", global::WinUICommunity.GlyphName.KeyboardLowerBrightness);
                userType.AddEnumValue("SkipBack10", global::WinUICommunity.GlyphName.SkipBack10);
                userType.AddEnumValue("SkipForward30", global::WinUICommunity.GlyphName.SkipForward30);
                userType.AddEnumValue("TreeFolderFolder", global::WinUICommunity.GlyphName.TreeFolderFolder);
                userType.AddEnumValue("TreeFolderFolderFill", global::WinUICommunity.GlyphName.TreeFolderFolderFill);
                userType.AddEnumValue("TreeFolderFolderOpen", global::WinUICommunity.GlyphName.TreeFolderFolderOpen);
                userType.AddEnumValue("TreeFolderFolderOpenFill", global::WinUICommunity.GlyphName.TreeFolderFolderOpenFill);
                userType.AddEnumValue("MultimediaDMP", global::WinUICommunity.GlyphName.MultimediaDMP);
                userType.AddEnumValue("KeyboardOneHanded", global::WinUICommunity.GlyphName.KeyboardOneHanded);
                userType.AddEnumValue("Narrator", global::WinUICommunity.GlyphName.Narrator);
                userType.AddEnumValue("EmojiTabPeople", global::WinUICommunity.GlyphName.EmojiTabPeople);
                userType.AddEnumValue("EmojiTabSmilesAnimals", global::WinUICommunity.GlyphName.EmojiTabSmilesAnimals);
                userType.AddEnumValue("EmojiTabCelebrationObjects", global::WinUICommunity.GlyphName.EmojiTabCelebrationObjects);
                userType.AddEnumValue("EmojiTabFoodPlants", global::WinUICommunity.GlyphName.EmojiTabFoodPlants);
                userType.AddEnumValue("EmojiTabTransitPlaces", global::WinUICommunity.GlyphName.EmojiTabTransitPlaces);
                userType.AddEnumValue("EmojiTabSymbols", global::WinUICommunity.GlyphName.EmojiTabSymbols);
                userType.AddEnumValue("EmojiTabTextSmiles", global::WinUICommunity.GlyphName.EmojiTabTextSmiles);
                userType.AddEnumValue("EmojiTabFavorites", global::WinUICommunity.GlyphName.EmojiTabFavorites);
                userType.AddEnumValue("EmojiSwatch", global::WinUICommunity.GlyphName.EmojiSwatch);
                userType.AddEnumValue("ConnectApp", global::WinUICommunity.GlyphName.ConnectApp);
                userType.AddEnumValue("CompanionDeviceFramework", global::WinUICommunity.GlyphName.CompanionDeviceFramework);
                userType.AddEnumValue("Ruler", global::WinUICommunity.GlyphName.Ruler);
                userType.AddEnumValue("FingerInking", global::WinUICommunity.GlyphName.FingerInking);
                userType.AddEnumValue("StrokeErase", global::WinUICommunity.GlyphName.StrokeErase);
                userType.AddEnumValue("PointErase", global::WinUICommunity.GlyphName.PointErase);
                userType.AddEnumValue("ClearAllInk", global::WinUICommunity.GlyphName.ClearAllInk);
                userType.AddEnumValue("Pencil", global::WinUICommunity.GlyphName.Pencil);
                userType.AddEnumValue("Marker", global::WinUICommunity.GlyphName.Marker);
                userType.AddEnumValue("InkingCaret", global::WinUICommunity.GlyphName.InkingCaret);
                userType.AddEnumValue("InkingColorOutline", global::WinUICommunity.GlyphName.InkingColorOutline);
                userType.AddEnumValue("InkingColorFill", global::WinUICommunity.GlyphName.InkingColorFill);
                userType.AddEnumValue("HardDrive", global::WinUICommunity.GlyphName.HardDrive);
                userType.AddEnumValue("NetworkAdapter", global::WinUICommunity.GlyphName.NetworkAdapter);
                userType.AddEnumValue("Touchscreen", global::WinUICommunity.GlyphName.Touchscreen);
                userType.AddEnumValue("NetworkPrinter", global::WinUICommunity.GlyphName.NetworkPrinter);
                userType.AddEnumValue("CloudPrinter", global::WinUICommunity.GlyphName.CloudPrinter);
                userType.AddEnumValue("KeyboardShortcut", global::WinUICommunity.GlyphName.KeyboardShortcut);
                userType.AddEnumValue("BrushSize", global::WinUICommunity.GlyphName.BrushSize);
                userType.AddEnumValue("NarratorForward", global::WinUICommunity.GlyphName.NarratorForward);
                userType.AddEnumValue("NarratorForwardMirrored", global::WinUICommunity.GlyphName.NarratorForwardMirrored);
                userType.AddEnumValue("SyncBadge12", global::WinUICommunity.GlyphName.SyncBadge12);
                userType.AddEnumValue("RingerBadge12", global::WinUICommunity.GlyphName.RingerBadge12);
                userType.AddEnumValue("AsteriskBadge12", global::WinUICommunity.GlyphName.AsteriskBadge12);
                userType.AddEnumValue("ErrorBadge12", global::WinUICommunity.GlyphName.ErrorBadge12);
                userType.AddEnumValue("CircleRingBadge12", global::WinUICommunity.GlyphName.CircleRingBadge12);
                userType.AddEnumValue("CircleFillBadge12", global::WinUICommunity.GlyphName.CircleFillBadge12);
                userType.AddEnumValue("ImportantBadge12", global::WinUICommunity.GlyphName.ImportantBadge12);
                userType.AddEnumValue("MailBadge12", global::WinUICommunity.GlyphName.MailBadge12);
                userType.AddEnumValue("PauseBadge12", global::WinUICommunity.GlyphName.PauseBadge12);
                userType.AddEnumValue("PlayBadge12", global::WinUICommunity.GlyphName.PlayBadge12);
                userType.AddEnumValue("PenWorkspace", global::WinUICommunity.GlyphName.PenWorkspace);
                userType.AddEnumValue("CaretLeft8", global::WinUICommunity.GlyphName.CaretLeft8);
                userType.AddEnumValue("CaretRight8", global::WinUICommunity.GlyphName.CaretRight8);
                userType.AddEnumValue("CaretUp8", global::WinUICommunity.GlyphName.CaretUp8);
                userType.AddEnumValue("CaretDown8", global::WinUICommunity.GlyphName.CaretDown8);
                userType.AddEnumValue("CaretLeftSolid8", global::WinUICommunity.GlyphName.CaretLeftSolid8);
                userType.AddEnumValue("CaretRightSolid8", global::WinUICommunity.GlyphName.CaretRightSolid8);
                userType.AddEnumValue("CaretUpSolid8", global::WinUICommunity.GlyphName.CaretUpSolid8);
                userType.AddEnumValue("CaretDownSolid8", global::WinUICommunity.GlyphName.CaretDownSolid8);
                userType.AddEnumValue("Strikethrough", global::WinUICommunity.GlyphName.Strikethrough);
                userType.AddEnumValue("Export", global::WinUICommunity.GlyphName.Export);
                userType.AddEnumValue("ExportMirrored", global::WinUICommunity.GlyphName.ExportMirrored);
                userType.AddEnumValue("ButtonMenu", global::WinUICommunity.GlyphName.ButtonMenu);
                userType.AddEnumValue("CloudSearch", global::WinUICommunity.GlyphName.CloudSearch);
                userType.AddEnumValue("PinyinIMELogo", global::WinUICommunity.GlyphName.PinyinIMELogo);
                userType.AddEnumValue("CalligraphyPen", global::WinUICommunity.GlyphName.CalligraphyPen);
                userType.AddEnumValue("ReplyMirrored", global::WinUICommunity.GlyphName.ReplyMirrored);
                userType.AddEnumValue("LockscreenDesktop", global::WinUICommunity.GlyphName.LockscreenDesktop);
                userType.AddEnumValue("TaskViewSettings", global::WinUICommunity.GlyphName.TaskViewSettings);
                userType.AddEnumValue("MiniExpand2Mirrored", global::WinUICommunity.GlyphName.MiniExpand2Mirrored);
                userType.AddEnumValue("MiniContract2Mirrored", global::WinUICommunity.GlyphName.MiniContract2Mirrored);
                userType.AddEnumValue("Play36", global::WinUICommunity.GlyphName.Play36);
                userType.AddEnumValue("PenPalette", global::WinUICommunity.GlyphName.PenPalette);
                userType.AddEnumValue("GuestUser", global::WinUICommunity.GlyphName.GuestUser);
                userType.AddEnumValue("SettingsBattery", global::WinUICommunity.GlyphName.SettingsBattery);
                userType.AddEnumValue("TaskbarPhone", global::WinUICommunity.GlyphName.TaskbarPhone);
                userType.AddEnumValue("LockScreenGlance", global::WinUICommunity.GlyphName.LockScreenGlance);
                userType.AddEnumValue("GenericScan", global::WinUICommunity.GlyphName.GenericScan);
                userType.AddEnumValue("ImageExport", global::WinUICommunity.GlyphName.ImageExport);
                userType.AddEnumValue("WifiEthernet", global::WinUICommunity.GlyphName.WifiEthernet);
                userType.AddEnumValue("ActionCenterQuiet", global::WinUICommunity.GlyphName.ActionCenterQuiet);
                userType.AddEnumValue("ActionCenterQuietNotification", global::WinUICommunity.GlyphName.ActionCenterQuietNotification);
                userType.AddEnumValue("TrackersMirrored", global::WinUICommunity.GlyphName.TrackersMirrored);
                userType.AddEnumValue("DateTimeMirrored", global::WinUICommunity.GlyphName.DateTimeMirrored);
                userType.AddEnumValue("Wheel", global::WinUICommunity.GlyphName.Wheel);
                userType.AddEnumValue("VirtualMachineGroup", global::WinUICommunity.GlyphName.VirtualMachineGroup);
                userType.AddEnumValue("ButtonView2", global::WinUICommunity.GlyphName.ButtonView2);
                userType.AddEnumValue("PenWorkspaceMirrored", global::WinUICommunity.GlyphName.PenWorkspaceMirrored);
                userType.AddEnumValue("PenPaletteMirrored", global::WinUICommunity.GlyphName.PenPaletteMirrored);
                userType.AddEnumValue("StrokeEraseMirrored", global::WinUICommunity.GlyphName.StrokeEraseMirrored);
                userType.AddEnumValue("PointEraseMirrored", global::WinUICommunity.GlyphName.PointEraseMirrored);
                userType.AddEnumValue("ClearAllInkMirrored", global::WinUICommunity.GlyphName.ClearAllInkMirrored);
                userType.AddEnumValue("BackgroundToggle", global::WinUICommunity.GlyphName.BackgroundToggle);
                userType.AddEnumValue("Marquee", global::WinUICommunity.GlyphName.Marquee);
                userType.AddEnumValue("ChromeCloseContrast", global::WinUICommunity.GlyphName.ChromeCloseContrast);
                userType.AddEnumValue("ChromeMinimizeContrast", global::WinUICommunity.GlyphName.ChromeMinimizeContrast);
                userType.AddEnumValue("ChromeMaximizeContrast", global::WinUICommunity.GlyphName.ChromeMaximizeContrast);
                userType.AddEnumValue("ChromeRestoreContrast", global::WinUICommunity.GlyphName.ChromeRestoreContrast);
                userType.AddEnumValue("TrafficLight", global::WinUICommunity.GlyphName.TrafficLight);
                userType.AddEnumValue("Replay", global::WinUICommunity.GlyphName.Replay);
                userType.AddEnumValue("Eyedropper", global::WinUICommunity.GlyphName.Eyedropper);
                userType.AddEnumValue("LineDisplay", global::WinUICommunity.GlyphName.LineDisplay);
                userType.AddEnumValue("PINPad", global::WinUICommunity.GlyphName.PINPad);
                userType.AddEnumValue("SignatureCapture", global::WinUICommunity.GlyphName.SignatureCapture);
                userType.AddEnumValue("ChipCardCreditCardReader", global::WinUICommunity.GlyphName.ChipCardCreditCardReader);
                userType.AddEnumValue("MarketDown", global::WinUICommunity.GlyphName.MarketDown);
                userType.AddEnumValue("PlayerSettings", global::WinUICommunity.GlyphName.PlayerSettings);
                userType.AddEnumValue("LandscapeOrientation", global::WinUICommunity.GlyphName.LandscapeOrientation);
                userType.AddEnumValue("Flow", global::WinUICommunity.GlyphName.Flow);
                userType.AddEnumValue("Touchpad", global::WinUICommunity.GlyphName.Touchpad);
                userType.AddEnumValue("Speech", global::WinUICommunity.GlyphName.Speech);
                userType.AddEnumValue("KnowledgeArticle", global::WinUICommunity.GlyphName.KnowledgeArticle);
                userType.AddEnumValue("Relationship", global::WinUICommunity.GlyphName.Relationship);
                userType.AddEnumValue("ZipFolder", global::WinUICommunity.GlyphName.ZipFolder);
                userType.AddEnumValue("DefaultAPN", global::WinUICommunity.GlyphName.DefaultAPN);
                userType.AddEnumValue("UserAPN", global::WinUICommunity.GlyphName.UserAPN);
                userType.AddEnumValue("DoublePinyin", global::WinUICommunity.GlyphName.DoublePinyin);
                userType.AddEnumValue("BlueLight", global::WinUICommunity.GlyphName.BlueLight);
                userType.AddEnumValue("CaretSolidLeft", global::WinUICommunity.GlyphName.CaretSolidLeft);
                userType.AddEnumValue("CaretSolidDown", global::WinUICommunity.GlyphName.CaretSolidDown);
                userType.AddEnumValue("CaretSolidRight", global::WinUICommunity.GlyphName.CaretSolidRight);
                userType.AddEnumValue("CaretSolidUp", global::WinUICommunity.GlyphName.CaretSolidUp);
                userType.AddEnumValue("ButtonA", global::WinUICommunity.GlyphName.ButtonA);
                userType.AddEnumValue("ButtonB", global::WinUICommunity.GlyphName.ButtonB);
                userType.AddEnumValue("ButtonY", global::WinUICommunity.GlyphName.ButtonY);
                userType.AddEnumValue("ButtonX", global::WinUICommunity.GlyphName.ButtonX);
                userType.AddEnumValue("ArrowUp8", global::WinUICommunity.GlyphName.ArrowUp8);
                userType.AddEnumValue("ArrowDown8", global::WinUICommunity.GlyphName.ArrowDown8);
                userType.AddEnumValue("ArrowRight8", global::WinUICommunity.GlyphName.ArrowRight8);
                userType.AddEnumValue("ArrowLeft8", global::WinUICommunity.GlyphName.ArrowLeft8);
                userType.AddEnumValue("QuarentinedItems", global::WinUICommunity.GlyphName.QuarentinedItems);
                userType.AddEnumValue("QuarentinedItemsMirrored", global::WinUICommunity.GlyphName.QuarentinedItemsMirrored);
                userType.AddEnumValue("Protractor", global::WinUICommunity.GlyphName.Protractor);
                userType.AddEnumValue("ChecklistMirrored", global::WinUICommunity.GlyphName.ChecklistMirrored);
                userType.AddEnumValue("StatusCircle7", global::WinUICommunity.GlyphName.StatusCircle7);
                userType.AddEnumValue("StatusCheckmark7", global::WinUICommunity.GlyphName.StatusCheckmark7);
                userType.AddEnumValue("StatusErrorCircle7", global::WinUICommunity.GlyphName.StatusErrorCircle7);
                userType.AddEnumValue("Connected", global::WinUICommunity.GlyphName.Connected);
                userType.AddEnumValue("PencilFill", global::WinUICommunity.GlyphName.PencilFill);
                userType.AddEnumValue("CalligraphyFill", global::WinUICommunity.GlyphName.CalligraphyFill);
                userType.AddEnumValue("QuarterStarLeft", global::WinUICommunity.GlyphName.QuarterStarLeft);
                userType.AddEnumValue("QuarterStarRight", global::WinUICommunity.GlyphName.QuarterStarRight);
                userType.AddEnumValue("ThreeQuarterStarLeft", global::WinUICommunity.GlyphName.ThreeQuarterStarLeft);
                userType.AddEnumValue("ThreeQuarterStarRight", global::WinUICommunity.GlyphName.ThreeQuarterStarRight);
                userType.AddEnumValue("QuietHoursBadge12", global::WinUICommunity.GlyphName.QuietHoursBadge12);
                userType.AddEnumValue("BackMirrored", global::WinUICommunity.GlyphName.BackMirrored);
                userType.AddEnumValue("ForwardMirrored", global::WinUICommunity.GlyphName.ForwardMirrored);
                userType.AddEnumValue("ChromeBackContrast", global::WinUICommunity.GlyphName.ChromeBackContrast);
                userType.AddEnumValue("ChromeBackContrastMirrored", global::WinUICommunity.GlyphName.ChromeBackContrastMirrored);
                userType.AddEnumValue("ChromeBackToWindowContrast", global::WinUICommunity.GlyphName.ChromeBackToWindowContrast);
                userType.AddEnumValue("ChromeFullScreenContrast", global::WinUICommunity.GlyphName.ChromeFullScreenContrast);
                userType.AddEnumValue("GridView", global::WinUICommunity.GlyphName.GridView);
                userType.AddEnumValue("ClipboardList", global::WinUICommunity.GlyphName.ClipboardList);
                userType.AddEnumValue("ClipboardListMirrored", global::WinUICommunity.GlyphName.ClipboardListMirrored);
                userType.AddEnumValue("OutlineQuarterStarLeft", global::WinUICommunity.GlyphName.OutlineQuarterStarLeft);
                userType.AddEnumValue("OutlineQuarterStarRight", global::WinUICommunity.GlyphName.OutlineQuarterStarRight);
                userType.AddEnumValue("OutlineHalfStarLeft", global::WinUICommunity.GlyphName.OutlineHalfStarLeft);
                userType.AddEnumValue("OutlineHalfStarRight", global::WinUICommunity.GlyphName.OutlineHalfStarRight);
                userType.AddEnumValue("OutlineThreeQuarterStarLeft", global::WinUICommunity.GlyphName.OutlineThreeQuarterStarLeft);
                userType.AddEnumValue("OutlineThreeQuarterStarRight", global::WinUICommunity.GlyphName.OutlineThreeQuarterStarRight);
                userType.AddEnumValue("SpatialVolume0", global::WinUICommunity.GlyphName.SpatialVolume0);
                userType.AddEnumValue("SpatialVolume1", global::WinUICommunity.GlyphName.SpatialVolume1);
                userType.AddEnumValue("SpatialVolume2", global::WinUICommunity.GlyphName.SpatialVolume2);
                userType.AddEnumValue("SpatialVolume3", global::WinUICommunity.GlyphName.SpatialVolume3);
                userType.AddEnumValue("ApplicationGuard", global::WinUICommunity.GlyphName.ApplicationGuard);
                userType.AddEnumValue("OutlineStarLeftHalf", global::WinUICommunity.GlyphName.OutlineStarLeftHalf);
                userType.AddEnumValue("OutlineStarRightHalf", global::WinUICommunity.GlyphName.OutlineStarRightHalf);
                userType.AddEnumValue("ChromeAnnotateContrast", global::WinUICommunity.GlyphName.ChromeAnnotateContrast);
                userType.AddEnumValue("DefenderBadge12", global::WinUICommunity.GlyphName.DefenderBadge12);
                userType.AddEnumValue("DetachablePC", global::WinUICommunity.GlyphName.DetachablePC);
                userType.AddEnumValue("LeftStick", global::WinUICommunity.GlyphName.LeftStick);
                userType.AddEnumValue("RightStick", global::WinUICommunity.GlyphName.RightStick);
                userType.AddEnumValue("TriggerLeft", global::WinUICommunity.GlyphName.TriggerLeft);
                userType.AddEnumValue("TriggerRight", global::WinUICommunity.GlyphName.TriggerRight);
                userType.AddEnumValue("BumperLeft", global::WinUICommunity.GlyphName.BumperLeft);
                userType.AddEnumValue("BumperRight", global::WinUICommunity.GlyphName.BumperRight);
                userType.AddEnumValue("Dpad", global::WinUICommunity.GlyphName.Dpad);
                userType.AddEnumValue("EnglishPunctuation", global::WinUICommunity.GlyphName.EnglishPunctuation);
                userType.AddEnumValue("ChinesePunctuation", global::WinUICommunity.GlyphName.ChinesePunctuation);
                userType.AddEnumValue("HMD", global::WinUICommunity.GlyphName.HMD);
                userType.AddEnumValue("CtrlSpatialRight", global::WinUICommunity.GlyphName.CtrlSpatialRight);
                userType.AddEnumValue("PaginationDotOutline10", global::WinUICommunity.GlyphName.PaginationDotOutline10);
                userType.AddEnumValue("PaginationDotSolid10", global::WinUICommunity.GlyphName.PaginationDotSolid10);
                userType.AddEnumValue("StrokeErase2", global::WinUICommunity.GlyphName.StrokeErase2);
                userType.AddEnumValue("SmallErase", global::WinUICommunity.GlyphName.SmallErase);
                userType.AddEnumValue("LargeErase", global::WinUICommunity.GlyphName.LargeErase);
                userType.AddEnumValue("FolderHorizontal", global::WinUICommunity.GlyphName.FolderHorizontal);
                userType.AddEnumValue("MicrophoneListening", global::WinUICommunity.GlyphName.MicrophoneListening);
                userType.AddEnumValue("StatusExclamationCircle7", global::WinUICommunity.GlyphName.StatusExclamationCircle7);
                userType.AddEnumValue("Video360", global::WinUICommunity.GlyphName.Video360);
                userType.AddEnumValue("GiftboxOpen", global::WinUICommunity.GlyphName.GiftboxOpen);
                userType.AddEnumValue("StatusCircleOuter", global::WinUICommunity.GlyphName.StatusCircleOuter);
                userType.AddEnumValue("StatusCircleInner", global::WinUICommunity.GlyphName.StatusCircleInner);
                userType.AddEnumValue("StatusCircleRing", global::WinUICommunity.GlyphName.StatusCircleRing);
                userType.AddEnumValue("StatusTriangleOuter", global::WinUICommunity.GlyphName.StatusTriangleOuter);
                userType.AddEnumValue("StatusTriangleInner", global::WinUICommunity.GlyphName.StatusTriangleInner);
                userType.AddEnumValue("StatusTriangleExclamation", global::WinUICommunity.GlyphName.StatusTriangleExclamation);
                userType.AddEnumValue("StatusCircleExclamation", global::WinUICommunity.GlyphName.StatusCircleExclamation);
                userType.AddEnumValue("StatusCircleErrorX", global::WinUICommunity.GlyphName.StatusCircleErrorX);
                userType.AddEnumValue("StatusCircleCheckmark", global::WinUICommunity.GlyphName.StatusCircleCheckmark);
                userType.AddEnumValue("StatusCircleInfo", global::WinUICommunity.GlyphName.StatusCircleInfo);
                userType.AddEnumValue("StatusCircleBlock", global::WinUICommunity.GlyphName.StatusCircleBlock);
                userType.AddEnumValue("StatusCircleBlock2", global::WinUICommunity.GlyphName.StatusCircleBlock2);
                userType.AddEnumValue("StatusCircleQuestionMark", global::WinUICommunity.GlyphName.StatusCircleQuestionMark);
                userType.AddEnumValue("StatusCircleSync", global::WinUICommunity.GlyphName.StatusCircleSync);
                userType.AddEnumValue("Dial1", global::WinUICommunity.GlyphName.Dial1);
                userType.AddEnumValue("Dial2", global::WinUICommunity.GlyphName.Dial2);
                userType.AddEnumValue("Dial3", global::WinUICommunity.GlyphName.Dial3);
                userType.AddEnumValue("Dial4", global::WinUICommunity.GlyphName.Dial4);
                userType.AddEnumValue("Dial5", global::WinUICommunity.GlyphName.Dial5);
                userType.AddEnumValue("Dial6", global::WinUICommunity.GlyphName.Dial6);
                userType.AddEnumValue("Dial7", global::WinUICommunity.GlyphName.Dial7);
                userType.AddEnumValue("Dial8", global::WinUICommunity.GlyphName.Dial8);
                userType.AddEnumValue("Dial9", global::WinUICommunity.GlyphName.Dial9);
                userType.AddEnumValue("Dial10", global::WinUICommunity.GlyphName.Dial10);
                userType.AddEnumValue("Dial11", global::WinUICommunity.GlyphName.Dial11);
                userType.AddEnumValue("Dial12", global::WinUICommunity.GlyphName.Dial12);
                userType.AddEnumValue("Dial13", global::WinUICommunity.GlyphName.Dial13);
                userType.AddEnumValue("Dial14", global::WinUICommunity.GlyphName.Dial14);
                userType.AddEnumValue("Dial15", global::WinUICommunity.GlyphName.Dial15);
                userType.AddEnumValue("Dial16", global::WinUICommunity.GlyphName.Dial16);
                userType.AddEnumValue("DialShape1", global::WinUICommunity.GlyphName.DialShape1);
                userType.AddEnumValue("DialShape2", global::WinUICommunity.GlyphName.DialShape2);
                userType.AddEnumValue("DialShape3", global::WinUICommunity.GlyphName.DialShape3);
                userType.AddEnumValue("DialShape4", global::WinUICommunity.GlyphName.DialShape4);
                userType.AddEnumValue("ClosedCaptionsInternational", global::WinUICommunity.GlyphName.ClosedCaptionsInternational);
                userType.AddEnumValue("TollSolid", global::WinUICommunity.GlyphName.TollSolid);
                userType.AddEnumValue("TrafficCongestionSolid", global::WinUICommunity.GlyphName.TrafficCongestionSolid);
                userType.AddEnumValue("ExploreContentSingle", global::WinUICommunity.GlyphName.ExploreContentSingle);
                userType.AddEnumValue("CollapseContent", global::WinUICommunity.GlyphName.CollapseContent);
                userType.AddEnumValue("CollapseContentSingle", global::WinUICommunity.GlyphName.CollapseContentSingle);
                userType.AddEnumValue("InfoSolid", global::WinUICommunity.GlyphName.InfoSolid);
                userType.AddEnumValue("GroupList", global::WinUICommunity.GlyphName.GroupList);
                userType.AddEnumValue("CaretBottomRightSolidCenter8", global::WinUICommunity.GlyphName.CaretBottomRightSolidCenter8);
                userType.AddEnumValue("ProgressRingDots", global::WinUICommunity.GlyphName.ProgressRingDots);
                userType.AddEnumValue("Checkbox14", global::WinUICommunity.GlyphName.Checkbox14);
                userType.AddEnumValue("CheckboxComposite14", global::WinUICommunity.GlyphName.CheckboxComposite14);
                userType.AddEnumValue("CheckboxIndeterminateCombo14", global::WinUICommunity.GlyphName.CheckboxIndeterminateCombo14);
                userType.AddEnumValue("CheckboxIndeterminateCombo", global::WinUICommunity.GlyphName.CheckboxIndeterminateCombo);
                userType.AddEnumValue("StatusPause7", global::WinUICommunity.GlyphName.StatusPause7);
                userType.AddEnumValue("CharacterAppearance", global::WinUICommunity.GlyphName.CharacterAppearance);
                userType.AddEnumValue("Lexicon", global::WinUICommunity.GlyphName.Lexicon);
                userType.AddEnumValue("ScreenTime", global::WinUICommunity.GlyphName.ScreenTime);
                userType.AddEnumValue("HeadlessDevice", global::WinUICommunity.GlyphName.HeadlessDevice);
                userType.AddEnumValue("NetworkSharing", global::WinUICommunity.GlyphName.NetworkSharing);
                userType.AddEnumValue("EyeGaze", global::WinUICommunity.GlyphName.EyeGaze);
                userType.AddEnumValue("ToggleLeft", global::WinUICommunity.GlyphName.ToggleLeft);
                userType.AddEnumValue("ToggleRight", global::WinUICommunity.GlyphName.ToggleRight);
                userType.AddEnumValue("WindowsInsider", global::WinUICommunity.GlyphName.WindowsInsider);
                userType.AddEnumValue("ChromeSwitch", global::WinUICommunity.GlyphName.ChromeSwitch);
                userType.AddEnumValue("ChromeSwitchContast", global::WinUICommunity.GlyphName.ChromeSwitchContast);
                userType.AddEnumValue("StatusCheckmark", global::WinUICommunity.GlyphName.StatusCheckmark);
                userType.AddEnumValue("StatusCheckmarkLeft", global::WinUICommunity.GlyphName.StatusCheckmarkLeft);
                userType.AddEnumValue("KeyboardLeftAligned", global::WinUICommunity.GlyphName.KeyboardLeftAligned);
                userType.AddEnumValue("KeyboardRightAligned", global::WinUICommunity.GlyphName.KeyboardRightAligned);
                userType.AddEnumValue("KeyboardSettings", global::WinUICommunity.GlyphName.KeyboardSettings);
                userType.AddEnumValue("NetworkPhysical", global::WinUICommunity.GlyphName.NetworkPhysical);
                userType.AddEnumValue("IOT", global::WinUICommunity.GlyphName.IOT);
                userType.AddEnumValue("UnknownMirrored", global::WinUICommunity.GlyphName.UnknownMirrored);
                userType.AddEnumValue("ViewDashboard", global::WinUICommunity.GlyphName.ViewDashboard);
                userType.AddEnumValue("ExploitProtectionSettings", global::WinUICommunity.GlyphName.ExploitProtectionSettings);
                userType.AddEnumValue("KeyboardNarrow", global::WinUICommunity.GlyphName.KeyboardNarrow);
                userType.AddEnumValue("Keyboard12Key", global::WinUICommunity.GlyphName.Keyboard12Key);
                userType.AddEnumValue("KeyboardDock", global::WinUICommunity.GlyphName.KeyboardDock);
                userType.AddEnumValue("KeyboardUndock", global::WinUICommunity.GlyphName.KeyboardUndock);
                userType.AddEnumValue("KeyboardLeftDock", global::WinUICommunity.GlyphName.KeyboardLeftDock);
                userType.AddEnumValue("KeyboardRightDock", global::WinUICommunity.GlyphName.KeyboardRightDock);
                userType.AddEnumValue("Ear", global::WinUICommunity.GlyphName.Ear);
                userType.AddEnumValue("PointerHand", global::WinUICommunity.GlyphName.PointerHand);
                userType.AddEnumValue("Bullseye", global::WinUICommunity.GlyphName.Bullseye);
                userType.AddEnumValue("DocumentApproval", global::WinUICommunity.GlyphName.DocumentApproval);
                userType.AddEnumValue("LocaleLanguage", global::WinUICommunity.GlyphName.LocaleLanguage);
                userType.AddEnumValue("PassiveAuthentication", global::WinUICommunity.GlyphName.PassiveAuthentication);
                userType.AddEnumValue("ColorSolid", global::WinUICommunity.GlyphName.ColorSolid);
                userType.AddEnumValue("NetworkOffline", global::WinUICommunity.GlyphName.NetworkOffline);
                userType.AddEnumValue("NetworkConnected", global::WinUICommunity.GlyphName.NetworkConnected);
                userType.AddEnumValue("NetworkConnectedCheckmark", global::WinUICommunity.GlyphName.NetworkConnectedCheckmark);
                userType.AddEnumValue("SignOut", global::WinUICommunity.GlyphName.SignOut);
                userType.AddEnumValue("StatusInfo", global::WinUICommunity.GlyphName.StatusInfo);
                userType.AddEnumValue("StatusInfoLeft", global::WinUICommunity.GlyphName.StatusInfoLeft);
                userType.AddEnumValue("NearbySharing", global::WinUICommunity.GlyphName.NearbySharing);
                userType.AddEnumValue("CtrlSpatialLeft", global::WinUICommunity.GlyphName.CtrlSpatialLeft);
                userType.AddEnumValue("InteractiveDashboard", global::WinUICommunity.GlyphName.InteractiveDashboard);
                userType.AddEnumValue("DeclineCall", global::WinUICommunity.GlyphName.DeclineCall);
                userType.AddEnumValue("ClippingTool", global::WinUICommunity.GlyphName.ClippingTool);
                userType.AddEnumValue("RectangularClipping", global::WinUICommunity.GlyphName.RectangularClipping);
                userType.AddEnumValue("FreeFormClipping", global::WinUICommunity.GlyphName.FreeFormClipping);
                userType.AddEnumValue("CopyTo", global::WinUICommunity.GlyphName.CopyTo);
                userType.AddEnumValue("IDBadge", global::WinUICommunity.GlyphName.IDBadge);
                userType.AddEnumValue("DynamicLock", global::WinUICommunity.GlyphName.DynamicLock);
                userType.AddEnumValue("PenTips", global::WinUICommunity.GlyphName.PenTips);
                userType.AddEnumValue("PenTipsMirrored", global::WinUICommunity.GlyphName.PenTipsMirrored);
                userType.AddEnumValue("HWPJoin", global::WinUICommunity.GlyphName.HWPJoin);
                userType.AddEnumValue("HWPInsert", global::WinUICommunity.GlyphName.HWPInsert);
                userType.AddEnumValue("HWPStrikeThrough", global::WinUICommunity.GlyphName.HWPStrikeThrough);
                userType.AddEnumValue("HWPScratchOut", global::WinUICommunity.GlyphName.HWPScratchOut);
                userType.AddEnumValue("HWPSplit", global::WinUICommunity.GlyphName.HWPSplit);
                userType.AddEnumValue("HWPNewLine", global::WinUICommunity.GlyphName.HWPNewLine);
                userType.AddEnumValue("HWPOverwrite", global::WinUICommunity.GlyphName.HWPOverwrite);
                userType.AddEnumValue("MobWifiWarning1", global::WinUICommunity.GlyphName.MobWifiWarning1);
                userType.AddEnumValue("MobWifiWarning2", global::WinUICommunity.GlyphName.MobWifiWarning2);
                userType.AddEnumValue("MobWifiWarning3", global::WinUICommunity.GlyphName.MobWifiWarning3);
                userType.AddEnumValue("MobWifiWarning4", global::WinUICommunity.GlyphName.MobWifiWarning4);
                userType.AddEnumValue("MicLocationCombo", global::WinUICommunity.GlyphName.MicLocationCombo);
                userType.AddEnumValue("Globe2", global::WinUICommunity.GlyphName.Globe2);
                userType.AddEnumValue("SpecialEffectSize", global::WinUICommunity.GlyphName.SpecialEffectSize);
                userType.AddEnumValue("GIF", global::WinUICommunity.GlyphName.GIF);
                userType.AddEnumValue("Sticker2", global::WinUICommunity.GlyphName.Sticker2);
                userType.AddEnumValue("SurfaceHubSelected", global::WinUICommunity.GlyphName.SurfaceHubSelected);
                userType.AddEnumValue("HoloLensSelected", global::WinUICommunity.GlyphName.HoloLensSelected);
                userType.AddEnumValue("Earbud", global::WinUICommunity.GlyphName.Earbud);
                userType.AddEnumValue("MixVolumes", global::WinUICommunity.GlyphName.MixVolumes);
                userType.AddEnumValue("Safe", global::WinUICommunity.GlyphName.Safe);
                userType.AddEnumValue("LaptopSecure", global::WinUICommunity.GlyphName.LaptopSecure);
                userType.AddEnumValue("PrintDefault", global::WinUICommunity.GlyphName.PrintDefault);
                userType.AddEnumValue("PageMirrored", global::WinUICommunity.GlyphName.PageMirrored);
                userType.AddEnumValue("LandscapeOrientationMirrored", global::WinUICommunity.GlyphName.LandscapeOrientationMirrored);
                userType.AddEnumValue("ColorOff", global::WinUICommunity.GlyphName.ColorOff);
                userType.AddEnumValue("PrintAllPages", global::WinUICommunity.GlyphName.PrintAllPages);
                userType.AddEnumValue("PrintCustomRange", global::WinUICommunity.GlyphName.PrintCustomRange);
                userType.AddEnumValue("PageMarginPortraitNarrow", global::WinUICommunity.GlyphName.PageMarginPortraitNarrow);
                userType.AddEnumValue("PageMarginPortraitNormal", global::WinUICommunity.GlyphName.PageMarginPortraitNormal);
                userType.AddEnumValue("PageMarginPortraitModerate", global::WinUICommunity.GlyphName.PageMarginPortraitModerate);
                userType.AddEnumValue("PageMarginPortraitWide", global::WinUICommunity.GlyphName.PageMarginPortraitWide);
                userType.AddEnumValue("PageMarginLandscapeNarrow", global::WinUICommunity.GlyphName.PageMarginLandscapeNarrow);
                userType.AddEnumValue("PageMarginLandscapeNormal", global::WinUICommunity.GlyphName.PageMarginLandscapeNormal);
                userType.AddEnumValue("PageMarginLandscapeModerate", global::WinUICommunity.GlyphName.PageMarginLandscapeModerate);
                userType.AddEnumValue("PageMarginLandscapeWide", global::WinUICommunity.GlyphName.PageMarginLandscapeWide);
                userType.AddEnumValue("CollateLandscape", global::WinUICommunity.GlyphName.CollateLandscape);
                userType.AddEnumValue("CollatePortrait", global::WinUICommunity.GlyphName.CollatePortrait);
                userType.AddEnumValue("CollatePortraitSeparated", global::WinUICommunity.GlyphName.CollatePortraitSeparated);
                userType.AddEnumValue("DuplexLandscapeOneSided", global::WinUICommunity.GlyphName.DuplexLandscapeOneSided);
                userType.AddEnumValue("DuplexLandscapeOneSidedMirrored", global::WinUICommunity.GlyphName.DuplexLandscapeOneSidedMirrored);
                userType.AddEnumValue("DuplexLandscapeTwoSidedLongEdge", global::WinUICommunity.GlyphName.DuplexLandscapeTwoSidedLongEdge);
                userType.AddEnumValue("DuplexLandscapeTwoSidedLongEdgeMirrored", global::WinUICommunity.GlyphName.DuplexLandscapeTwoSidedLongEdgeMirrored);
                userType.AddEnumValue("DuplexLandscapeTwoSidedShortEdge", global::WinUICommunity.GlyphName.DuplexLandscapeTwoSidedShortEdge);
                userType.AddEnumValue("DuplexLandscapeTwoSidedShortEdgeMirrored", global::WinUICommunity.GlyphName.DuplexLandscapeTwoSidedShortEdgeMirrored);
                userType.AddEnumValue("DuplexPortraitOneSided", global::WinUICommunity.GlyphName.DuplexPortraitOneSided);
                userType.AddEnumValue("DuplexPortraitOneSidedMirrored", global::WinUICommunity.GlyphName.DuplexPortraitOneSidedMirrored);
                userType.AddEnumValue("DuplexPortraitTwoSidedLongEdge", global::WinUICommunity.GlyphName.DuplexPortraitTwoSidedLongEdge);
                userType.AddEnumValue("DuplexPortraitTwoSidedLongEdgeMirrored", global::WinUICommunity.GlyphName.DuplexPortraitTwoSidedLongEdgeMirrored);
                userType.AddEnumValue("DuplexPortraitTwoSidedShortEdge", global::WinUICommunity.GlyphName.DuplexPortraitTwoSidedShortEdge);
                userType.AddEnumValue("DuplexPortraitTwoSidedShortEdgeMirrored", global::WinUICommunity.GlyphName.DuplexPortraitTwoSidedShortEdgeMirrored);
                userType.AddEnumValue("PPSOneLandscape", global::WinUICommunity.GlyphName.PPSOneLandscape);
                userType.AddEnumValue("PPSTwoLandscape", global::WinUICommunity.GlyphName.PPSTwoLandscape);
                userType.AddEnumValue("PPSTwoPortrait", global::WinUICommunity.GlyphName.PPSTwoPortrait);
                userType.AddEnumValue("PPSFourLandscape", global::WinUICommunity.GlyphName.PPSFourLandscape);
                userType.AddEnumValue("PPSFourPortrait", global::WinUICommunity.GlyphName.PPSFourPortrait);
                userType.AddEnumValue("HolePunchOff", global::WinUICommunity.GlyphName.HolePunchOff);
                userType.AddEnumValue("HolePunchPortraitLeft", global::WinUICommunity.GlyphName.HolePunchPortraitLeft);
                userType.AddEnumValue("HolePunchPortraitRight", global::WinUICommunity.GlyphName.HolePunchPortraitRight);
                userType.AddEnumValue("HolePunchPortraitTop", global::WinUICommunity.GlyphName.HolePunchPortraitTop);
                userType.AddEnumValue("HolePunchPortraitBottom", global::WinUICommunity.GlyphName.HolePunchPortraitBottom);
                userType.AddEnumValue("HolePunchLandscapeLeft", global::WinUICommunity.GlyphName.HolePunchLandscapeLeft);
                userType.AddEnumValue("HolePunchLandscapeRight", global::WinUICommunity.GlyphName.HolePunchLandscapeRight);
                userType.AddEnumValue("HolePunchLandscapeTop", global::WinUICommunity.GlyphName.HolePunchLandscapeTop);
                userType.AddEnumValue("HolePunchLandscapeBottom", global::WinUICommunity.GlyphName.HolePunchLandscapeBottom);
                userType.AddEnumValue("StaplingOff", global::WinUICommunity.GlyphName.StaplingOff);
                userType.AddEnumValue("StaplingPortraitTopLeft", global::WinUICommunity.GlyphName.StaplingPortraitTopLeft);
                userType.AddEnumValue("StaplingPortraitTopRight", global::WinUICommunity.GlyphName.StaplingPortraitTopRight);
                userType.AddEnumValue("StaplingPortraitBottomRight", global::WinUICommunity.GlyphName.StaplingPortraitBottomRight);
                userType.AddEnumValue("StaplingPortraitTwoLeft", global::WinUICommunity.GlyphName.StaplingPortraitTwoLeft);
                userType.AddEnumValue("StaplingPortraitTwoRight", global::WinUICommunity.GlyphName.StaplingPortraitTwoRight);
                userType.AddEnumValue("StaplingPortraitTwoTop", global::WinUICommunity.GlyphName.StaplingPortraitTwoTop);
                userType.AddEnumValue("StaplingPortraitTwoBottom", global::WinUICommunity.GlyphName.StaplingPortraitTwoBottom);
                userType.AddEnumValue("StaplingPortraitBookBinding", global::WinUICommunity.GlyphName.StaplingPortraitBookBinding);
                userType.AddEnumValue("StaplingLandscapeTopLeft", global::WinUICommunity.GlyphName.StaplingLandscapeTopLeft);
                userType.AddEnumValue("StaplingLandscapeTopRight", global::WinUICommunity.GlyphName.StaplingLandscapeTopRight);
                userType.AddEnumValue("StaplingLandscapeBottomLeft", global::WinUICommunity.GlyphName.StaplingLandscapeBottomLeft);
                userType.AddEnumValue("StaplingLandscapeBottomRight", global::WinUICommunity.GlyphName.StaplingLandscapeBottomRight);
                userType.AddEnumValue("StaplingLandscapeTwoLeft", global::WinUICommunity.GlyphName.StaplingLandscapeTwoLeft);
                userType.AddEnumValue("StaplingLandscapeTwoRight", global::WinUICommunity.GlyphName.StaplingLandscapeTwoRight);
                userType.AddEnumValue("StaplingLandscapeTwoTop", global::WinUICommunity.GlyphName.StaplingLandscapeTwoTop);
                userType.AddEnumValue("StaplingLandscapeTwoBottom", global::WinUICommunity.GlyphName.StaplingLandscapeTwoBottom);
                userType.AddEnumValue("StaplingLandscapeBookBinding", global::WinUICommunity.GlyphName.StaplingLandscapeBookBinding);
                userType.AddEnumValue("StatusDataTransferRoaming", global::WinUICommunity.GlyphName.StatusDataTransferRoaming);
                userType.AddEnumValue("MobSIMError", global::WinUICommunity.GlyphName.MobSIMError);
                userType.AddEnumValue("CollateLandscapeSeparated", global::WinUICommunity.GlyphName.CollateLandscapeSeparated);
                userType.AddEnumValue("PPSOnePortrait", global::WinUICommunity.GlyphName.PPSOnePortrait);
                userType.AddEnumValue("StaplingPortraitBottomLeft", global::WinUICommunity.GlyphName.StaplingPortraitBottomLeft);
                userType.AddEnumValue("PlaySolid", global::WinUICommunity.GlyphName.PlaySolid);
                userType.AddEnumValue("RepeatOff", global::WinUICommunity.GlyphName.RepeatOff);
                userType.AddEnumValue("Set", global::WinUICommunity.GlyphName.Set);
                userType.AddEnumValue("SetSolid", global::WinUICommunity.GlyphName.SetSolid);
                userType.AddEnumValue("FuzzyReading", global::WinUICommunity.GlyphName.FuzzyReading);
                userType.AddEnumValue("VerticalBattery0", global::WinUICommunity.GlyphName.VerticalBattery0);
                userType.AddEnumValue("VerticalBattery1", global::WinUICommunity.GlyphName.VerticalBattery1);
                userType.AddEnumValue("VerticalBattery2", global::WinUICommunity.GlyphName.VerticalBattery2);
                userType.AddEnumValue("VerticalBattery3", global::WinUICommunity.GlyphName.VerticalBattery3);
                userType.AddEnumValue("VerticalBattery4", global::WinUICommunity.GlyphName.VerticalBattery4);
                userType.AddEnumValue("VerticalBattery5", global::WinUICommunity.GlyphName.VerticalBattery5);
                userType.AddEnumValue("VerticalBattery6", global::WinUICommunity.GlyphName.VerticalBattery6);
                userType.AddEnumValue("VerticalBattery7", global::WinUICommunity.GlyphName.VerticalBattery7);
                userType.AddEnumValue("VerticalBattery8", global::WinUICommunity.GlyphName.VerticalBattery8);
                userType.AddEnumValue("VerticalBattery9", global::WinUICommunity.GlyphName.VerticalBattery9);
                userType.AddEnumValue("VerticalBattery10", global::WinUICommunity.GlyphName.VerticalBattery10);
                userType.AddEnumValue("VerticalBatteryCharging0", global::WinUICommunity.GlyphName.VerticalBatteryCharging0);
                userType.AddEnumValue("VerticalBatteryCharging1", global::WinUICommunity.GlyphName.VerticalBatteryCharging1);
                userType.AddEnumValue("VerticalBatteryCharging2", global::WinUICommunity.GlyphName.VerticalBatteryCharging2);
                userType.AddEnumValue("VerticalBatteryCharging3", global::WinUICommunity.GlyphName.VerticalBatteryCharging3);
                userType.AddEnumValue("VerticalBatteryCharging4", global::WinUICommunity.GlyphName.VerticalBatteryCharging4);
                userType.AddEnumValue("VerticalBatteryCharging5", global::WinUICommunity.GlyphName.VerticalBatteryCharging5);
                userType.AddEnumValue("VerticalBatteryCharging6", global::WinUICommunity.GlyphName.VerticalBatteryCharging6);
                userType.AddEnumValue("VerticalBatteryCharging7", global::WinUICommunity.GlyphName.VerticalBatteryCharging7);
                userType.AddEnumValue("VerticalBatteryCharging8", global::WinUICommunity.GlyphName.VerticalBatteryCharging8);
                userType.AddEnumValue("VerticalBatteryCharging9", global::WinUICommunity.GlyphName.VerticalBatteryCharging9);
                userType.AddEnumValue("VerticalBatteryCharging10", global::WinUICommunity.GlyphName.VerticalBatteryCharging10);
                userType.AddEnumValue("VerticalBatteryUnknown", global::WinUICommunity.GlyphName.VerticalBatteryUnknown);
                userType.AddEnumValue("SIMError", global::WinUICommunity.GlyphName.SIMError);
                userType.AddEnumValue("SIMMissing", global::WinUICommunity.GlyphName.SIMMissing);
                userType.AddEnumValue("SIMLock", global::WinUICommunity.GlyphName.SIMLock);
                userType.AddEnumValue("eSIM", global::WinUICommunity.GlyphName.eSIM);
                userType.AddEnumValue("eSIMNoProfile", global::WinUICommunity.GlyphName.eSIMNoProfile);
                userType.AddEnumValue("eSIMLocked", global::WinUICommunity.GlyphName.eSIMLocked);
                userType.AddEnumValue("eSIMBusy", global::WinUICommunity.GlyphName.eSIMBusy);
                userType.AddEnumValue("NoiseCancelation", global::WinUICommunity.GlyphName.NoiseCancelation);
                userType.AddEnumValue("NoiseCancelationOff", global::WinUICommunity.GlyphName.NoiseCancelationOff);
                userType.AddEnumValue("MusicSharing", global::WinUICommunity.GlyphName.MusicSharing);
                userType.AddEnumValue("MusicSharingOff", global::WinUICommunity.GlyphName.MusicSharingOff);
                userType.AddEnumValue("CircleShapeSolid", global::WinUICommunity.GlyphName.CircleShapeSolid);
                userType.AddEnumValue("WifiCallBars", global::WinUICommunity.GlyphName.WifiCallBars);
                userType.AddEnumValue("WifiCall0", global::WinUICommunity.GlyphName.WifiCall0);
                userType.AddEnumValue("WifiCall1", global::WinUICommunity.GlyphName.WifiCall1);
                userType.AddEnumValue("WifiCall2", global::WinUICommunity.GlyphName.WifiCall2);
                userType.AddEnumValue("WifiCall3", global::WinUICommunity.GlyphName.WifiCall3);
                userType.AddEnumValue("WifiCall4", global::WinUICommunity.GlyphName.WifiCall4);
                userType.AddEnumValue("CHTLanguageBar", global::WinUICommunity.GlyphName.CHTLanguageBar);
                userType.AddEnumValue("ComposeMode", global::WinUICommunity.GlyphName.ComposeMode);
                userType.AddEnumValue("ExpressiveInputEntry", global::WinUICommunity.GlyphName.ExpressiveInputEntry);
                userType.AddEnumValue("EmojiTabMoreSymbols", global::WinUICommunity.GlyphName.EmojiTabMoreSymbols);
                userType.AddEnumValue("WebSearch", global::WinUICommunity.GlyphName.WebSearch);
                userType.AddEnumValue("Kiosk", global::WinUICommunity.GlyphName.Kiosk);
                userType.AddEnumValue("RTTLogo", global::WinUICommunity.GlyphName.RTTLogo);
                userType.AddEnumValue("VoiceCall", global::WinUICommunity.GlyphName.VoiceCall);
                userType.AddEnumValue("GoToMessage", global::WinUICommunity.GlyphName.GoToMessage);
                userType.AddEnumValue("ReturnToCall", global::WinUICommunity.GlyphName.ReturnToCall);
                userType.AddEnumValue("StartPresenting", global::WinUICommunity.GlyphName.StartPresenting);
                userType.AddEnumValue("StopPresenting", global::WinUICommunity.GlyphName.StopPresenting);
                userType.AddEnumValue("ProductivityMode", global::WinUICommunity.GlyphName.ProductivityMode);
                userType.AddEnumValue("SetHistoryStatus", global::WinUICommunity.GlyphName.SetHistoryStatus);
                userType.AddEnumValue("SetHistoryStatus2", global::WinUICommunity.GlyphName.SetHistoryStatus2);
                userType.AddEnumValue("Keyboardsettings20", global::WinUICommunity.GlyphName.Keyboardsettings20);
                userType.AddEnumValue("OneHandedRight20", global::WinUICommunity.GlyphName.OneHandedRight20);
                userType.AddEnumValue("OneHandedLeft20", global::WinUICommunity.GlyphName.OneHandedLeft20);
                userType.AddEnumValue("Split20", global::WinUICommunity.GlyphName.Split20);
                userType.AddEnumValue("Full20", global::WinUICommunity.GlyphName.Full20);
                userType.AddEnumValue("Handwriting20", global::WinUICommunity.GlyphName.Handwriting20);
                userType.AddEnumValue("ChevronLeft20", global::WinUICommunity.GlyphName.ChevronLeft20);
                userType.AddEnumValue("ChevronLeft32", global::WinUICommunity.GlyphName.ChevronLeft32);
                userType.AddEnumValue("ChevronRight20", global::WinUICommunity.GlyphName.ChevronRight20);
                userType.AddEnumValue("ChevronRight32", global::WinUICommunity.GlyphName.ChevronRight32);
                userType.AddEnumValue("Event12", global::WinUICommunity.GlyphName.Event12);
                userType.AddEnumValue("MicOff2", global::WinUICommunity.GlyphName.MicOff2);
                userType.AddEnumValue("DeliveryOptimization", global::WinUICommunity.GlyphName.DeliveryOptimization);
                userType.AddEnumValue("CancelMedium", global::WinUICommunity.GlyphName.CancelMedium);
                userType.AddEnumValue("SearchMedium", global::WinUICommunity.GlyphName.SearchMedium);
                userType.AddEnumValue("AcceptMedium", global::WinUICommunity.GlyphName.AcceptMedium);
                userType.AddEnumValue("RevealPasswordMedium", global::WinUICommunity.GlyphName.RevealPasswordMedium);
                userType.AddEnumValue("DeleteWord", global::WinUICommunity.GlyphName.DeleteWord);
                userType.AddEnumValue("DeleteWordFill", global::WinUICommunity.GlyphName.DeleteWordFill);
                userType.AddEnumValue("DeleteLines", global::WinUICommunity.GlyphName.DeleteLines);
                userType.AddEnumValue("DeleteLinesFill", global::WinUICommunity.GlyphName.DeleteLinesFill);
                userType.AddEnumValue("InstertWords", global::WinUICommunity.GlyphName.InstertWords);
                userType.AddEnumValue("InstertWordsFill", global::WinUICommunity.GlyphName.InstertWordsFill);
                userType.AddEnumValue("JoinWords", global::WinUICommunity.GlyphName.JoinWords);
                userType.AddEnumValue("JoinWordsFill", global::WinUICommunity.GlyphName.JoinWordsFill);
                userType.AddEnumValue("OverwriteWords", global::WinUICommunity.GlyphName.OverwriteWords);
                userType.AddEnumValue("OverwriteWordsFill", global::WinUICommunity.GlyphName.OverwriteWordsFill);
                userType.AddEnumValue("AddNewLine", global::WinUICommunity.GlyphName.AddNewLine);
                userType.AddEnumValue("AddNewLineFill", global::WinUICommunity.GlyphName.AddNewLineFill);
                userType.AddEnumValue("OverwriteWordsKorean", global::WinUICommunity.GlyphName.OverwriteWordsKorean);
                userType.AddEnumValue("OverwriteWordsFillKorean", global::WinUICommunity.GlyphName.OverwriteWordsFillKorean);
                userType.AddEnumValue("EducationIcon", global::WinUICommunity.GlyphName.EducationIcon);
                userType.AddEnumValue("WindowSnipping", global::WinUICommunity.GlyphName.WindowSnipping);
                userType.AddEnumValue("VideoCapture", global::WinUICommunity.GlyphName.VideoCapture);
                userType.AddEnumValue("StatusSecured", global::WinUICommunity.GlyphName.StatusSecured);
                userType.AddEnumValue("NarratorApp", global::WinUICommunity.GlyphName.NarratorApp);
                userType.AddEnumValue("PowerButtonUpdate", global::WinUICommunity.GlyphName.PowerButtonUpdate);
                userType.AddEnumValue("RestartUpdate", global::WinUICommunity.GlyphName.RestartUpdate);
                userType.AddEnumValue("UpdateStatusDot", global::WinUICommunity.GlyphName.UpdateStatusDot);
                userType.AddEnumValue("Eject", global::WinUICommunity.GlyphName.Eject);
                userType.AddEnumValue("Spelling", global::WinUICommunity.GlyphName.Spelling);
                userType.AddEnumValue("SpellingKorean", global::WinUICommunity.GlyphName.SpellingKorean);
                userType.AddEnumValue("SpellingSerbian", global::WinUICommunity.GlyphName.SpellingSerbian);
                userType.AddEnumValue("SpellingChinese", global::WinUICommunity.GlyphName.SpellingChinese);
                userType.AddEnumValue("FolderSelect", global::WinUICommunity.GlyphName.FolderSelect);
                userType.AddEnumValue("SmartScreen", global::WinUICommunity.GlyphName.SmartScreen);
                userType.AddEnumValue("ExploitProtection", global::WinUICommunity.GlyphName.ExploitProtection);
                userType.AddEnumValue("AddBold", global::WinUICommunity.GlyphName.AddBold);
                userType.AddEnumValue("SubtractBold", global::WinUICommunity.GlyphName.SubtractBold);
                userType.AddEnumValue("BackSolidBold", global::WinUICommunity.GlyphName.BackSolidBold);
                userType.AddEnumValue("ForwardSolidBold", global::WinUICommunity.GlyphName.ForwardSolidBold);
                userType.AddEnumValue("PauseBold", global::WinUICommunity.GlyphName.PauseBold);
                userType.AddEnumValue("ClickSolid", global::WinUICommunity.GlyphName.ClickSolid);
                userType.AddEnumValue("SettingsSolid", global::WinUICommunity.GlyphName.SettingsSolid);
                userType.AddEnumValue("MicrophoneSolidBold", global::WinUICommunity.GlyphName.MicrophoneSolidBold);
                userType.AddEnumValue("SpeechSolidBold", global::WinUICommunity.GlyphName.SpeechSolidBold);
                userType.AddEnumValue("ClickedOutLoudSolidBold", global::WinUICommunity.GlyphName.ClickedOutLoudSolidBold);
                xamlType = userType;
                break;

            case 108:   //  Microsoft.UI.Xaml.Media.FontFamily
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 109:   //  Windows.UI.Text.FontWeight
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_109_FontWeight;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 110:   //  Windows.UI.Text.FontStyle
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_110_FontStyle;
                userType.AddEnumValue("Normal", global::Windows.UI.Text.FontStyle.Normal);
                userType.AddEnumValue("Oblique", global::Windows.UI.Text.FontStyle.Oblique);
                userType.AddEnumValue("Italic", global::Windows.UI.Text.FontStyle.Italic);
                xamlType = userType;
                break;

            case 111:   //  Microsoft.UI.Xaml.Media.Brush
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 112:   //  AppFirst.Views.MainPage
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_112_MainPage;
                userType.StaticInitializer = StaticInitializer_112_MainPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 113:   //  AppFirst.ViewModels.MainViewModel
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableObject"));
                userType.StaticInitializer = StaticInitializer_113_MainViewModel;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 114:   //  CommunityToolkit.WinUI.UI.Controls.DataGrid
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_114_DataGrid;
                userType.StaticInitializer = StaticInitializer_114_DataGrid;
                userType.AddMemberName("AutoGenerateColumns");
                userType.AddMemberName("GridLinesVisibility");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("Columns");
                userType.AddMemberName("AlternatingRowBackground");
                userType.AddMemberName("AlternatingRowForeground");
                userType.AddMemberName("AreRowDetailsFrozen");
                userType.AddMemberName("AreRowGroupHeadersFrozen");
                userType.AddMemberName("CanUserReorderColumns");
                userType.AddMemberName("CanUserResizeColumns");
                userType.AddMemberName("CanUserSortColumns");
                userType.AddMemberName("CellStyle");
                userType.AddMemberName("ClipboardCopyMode");
                userType.AddMemberName("ColumnHeaderHeight");
                userType.AddMemberName("ColumnHeaderStyle");
                userType.AddMemberName("ColumnWidth");
                userType.AddMemberName("DataFetchSize");
                userType.AddMemberName("DragIndicatorStyle");
                userType.AddMemberName("DropLocationIndicatorStyle");
                userType.AddMemberName("FrozenColumnCount");
                userType.AddMemberName("HeadersVisibility");
                userType.AddMemberName("HorizontalGridLinesBrush");
                userType.AddMemberName("HorizontalScrollBarVisibility");
                userType.AddMemberName("IsReadOnly");
                userType.AddMemberName("IsValid");
                userType.AddMemberName("IncrementalLoadingThreshold");
                userType.AddMemberName("IncrementalLoadingTrigger");
                userType.AddMemberName("MaxColumnWidth");
                userType.AddMemberName("MinColumnWidth");
                userType.AddMemberName("RowBackground");
                userType.AddMemberName("RowDetailsTemplate");
                userType.AddMemberName("RowDetailsVisibilityMode");
                userType.AddMemberName("RowForeground");
                userType.AddMemberName("RowHeight");
                userType.AddMemberName("RowHeaderWidth");
                userType.AddMemberName("RowHeaderStyle");
                userType.AddMemberName("RowStyle");
                userType.AddMemberName("SelectionMode");
                userType.AddMemberName("SelectedIndex");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("VerticalGridLinesBrush");
                userType.AddMemberName("VerticalScrollBarVisibility");
                userType.AddMemberName("CurrentColumn");
                userType.AddMemberName("RowGroupHeaderPropertyNameAlternative");
                userType.AddMemberName("RowGroupHeaderStyles");
                userType.AddMemberName("SelectedItems");
                xamlType = userType;
                break;

            case 115:   //  CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_115_DataGridGridLinesVisibility;
                userType.AddEnumValue("None", global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility.None);
                userType.AddEnumValue("Horizontal", global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility.Horizontal);
                userType.AddEnumValue("Vertical", global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility.Vertical);
                userType.AddEnumValue("All", global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility.All);
                xamlType = userType;
                break;

            case 116:   //  System.Collections.IEnumerable
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_116_IEnumerable;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 117:   //  System.Collections.ObjectModel.ObservableCollection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>"));
                userType.StaticInitializer = StaticInitializer_117_ObservableCollection;
                userType.CollectionAdd = VectorAdd_117_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 118:   //  System.Collections.ObjectModel.Collection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_118_Collection;
                userType.StaticInitializer = StaticInitializer_118_Collection;
                userType.CollectionAdd = VectorAdd_118_Collection;
                xamlType = userType;
                break;

            case 119:   //  CommunityToolkit.WinUI.UI.Controls.DataGridColumn
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_119_DataGridColumn;
                userType.AddMemberName("ActualWidth");
                userType.AddMemberName("CanUserReorder");
                userType.AddMemberName("CanUserResize");
                userType.AddMemberName("CanUserSort");
                userType.AddMemberName("CellStyle");
                userType.AddMemberName("ClipboardContentBinding");
                userType.AddMemberName("DisplayIndex");
                userType.AddMemberName("DragIndicatorStyle");
                userType.AddMemberName("HeaderStyle");
                userType.AddMemberName("Header");
                userType.AddMemberName("IsAutoGenerated");
                userType.AddMemberName("IsFrozen");
                userType.AddMemberName("IsReadOnly");
                userType.AddMemberName("MaxWidth");
                userType.AddMemberName("MinWidth");
                userType.AddMemberName("SortDirection");
                userType.AddMemberName("Tag");
                userType.AddMemberName("Visibility");
                userType.AddMemberName("Width");
                xamlType = userType;
                break;

            case 120:   //  Microsoft.UI.Xaml.Data.Binding
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 121:   //  System.Nullable`1<CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetBoxedType(GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection"));
                userType.BoxInstance = userType.BoxType<global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>;
                userType.StaticInitializer = StaticInitializer_121_Nullable;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 122:   //  CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_122_DataGridSortDirection;
                userType.AddEnumValue("Ascending", global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection.Ascending);
                userType.AddEnumValue("Descending", global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection.Descending);
                xamlType = userType;
                break;

            case 123:   //  Microsoft.UI.Xaml.Visibility
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 124:   //  CommunityToolkit.WinUI.UI.Controls.DataGridLength
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_124_DataGridLength;
                userType.CreateFromStringMethod = x => (global::System.Object)global::CommunityToolkit.WinUI.UI.Controls.DataGridLength.ConvertFromString(x);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 125:   //  CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_125_DataGridClipboardCopyMode;
                userType.AddEnumValue("None", global::CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode.None);
                userType.AddEnumValue("ExcludeHeader", global::CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode.ExcludeHeader);
                userType.AddEnumValue("IncludeHeader", global::CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode.IncludeHeader);
                xamlType = userType;
                break;

            case 126:   //  CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_126_DataGridHeadersVisibility;
                userType.AddEnumValue("None", global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility.None);
                userType.AddEnumValue("Column", global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility.Column);
                userType.AddEnumValue("Row", global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility.Row);
                userType.AddEnumValue("All", global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility.All);
                xamlType = userType;
                break;

            case 127:   //  Microsoft.UI.Xaml.Controls.ScrollBarVisibility
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 128:   //  Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 129:   //  CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_129_DataGridRowDetailsVisibilityMode;
                userType.AddEnumValue("VisibleWhenSelected", global::CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode.VisibleWhenSelected);
                userType.AddEnumValue("Visible", global::CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode.Visible);
                userType.AddEnumValue("Collapsed", global::CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode.Collapsed);
                xamlType = userType;
                break;

            case 130:   //  CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_130_DataGridSelectionMode;
                userType.AddEnumValue("Extended", global::CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode.Extended);
                userType.AddEnumValue("Single", global::CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode.Single);
                xamlType = userType;
                break;

            case 131:   //  System.Collections.ObjectModel.ObservableCollection`1<Microsoft.UI.Xaml.Style>
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Microsoft.UI.Xaml.Style>"));
                userType.StaticInitializer = StaticInitializer_131_ObservableCollection;
                userType.CollectionAdd = VectorAdd_131_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 132:   //  System.Collections.ObjectModel.Collection`1<Microsoft.UI.Xaml.Style>
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_132_Collection;
                userType.StaticInitializer = StaticInitializer_132_Collection;
                userType.CollectionAdd = VectorAdd_132_Collection;
                xamlType = userType;
                break;

            case 133:   //  System.Collections.IList
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_133_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 134:   //  Microsoft.UI.Xaml.Controls.ProgressRing
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_134_ProgressRing;
                userType.StaticInitializer = StaticInitializer_134_ProgressRing;
                userType.AddMemberName("IsActive");
                userType.AddMemberName("IsIndeterminate");
                userType.AddMemberName("Maximum");
                userType.AddMemberName("Minimum");
                userType.AddMemberName("TemplateSettings");
                userType.AddMemberName("Value");
                xamlType = userType;
                break;

            case 135:   //  Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_135_ProgressRingTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 136:   //  CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn"));
                userType.Activator = Activate_136_DataGridTextColumn;
                userType.StaticInitializer = StaticInitializer_136_DataGridTextColumn;
                userType.AddMemberName("FontFamily");
                userType.AddMemberName("FontSize");
                userType.AddMemberName("FontStyle");
                userType.AddMemberName("FontWeight");
                userType.AddMemberName("Foreground");
                xamlType = userType;
                break;

            case 137:   //  CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn"));
                userType.StaticInitializer = StaticInitializer_137_DataGridBoundColumn;
                userType.AddMemberName("Binding");
                userType.AddMemberName("ClipboardContentBinding");
                userType.AddMemberName("EditingElementStyle");
                userType.AddMemberName("ElementStyle");
                xamlType = userType;
                break;

            case 138:   //  AppFirst.Views.Pages.LoadSqlDataGridPage
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_138_LoadSqlDataGridPage;
                userType.StaticInitializer = StaticInitializer_138_LoadSqlDataGridPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 139:   //  AppFirst.ViewModels.Pages.LoadSqlDataGridViewModel
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient"));
                userType.StaticInitializer = StaticInitializer_139_LoadSqlDataGridViewModel;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 140:   //  CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableObject"));
                userType.StaticInitializer = StaticInitializer_140_ObservableRecipient;
                xamlType = userType;
                break;

            case 141:   //  AppFirst.Views.Pages.LoadSqlDataPage
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_141_LoadSqlDataPage;
                userType.StaticInitializer = StaticInitializer_141_LoadSqlDataPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 142:   //  AppFirst.ViewModels.Pages.LoadSqlDataPageViewModel
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableObject"));
                userType.StaticInitializer = StaticInitializer_142_LoadSqlDataPageViewModel;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 143:   //  Microsoft.UI.Xaml.Controls.MenuBar
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_143_MenuBar;
                userType.StaticInitializer = StaticInitializer_143_MenuBar;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.MenuBar.Items");
                userType.AddMemberName("Items");
                xamlType = userType;
                break;

            case 144:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.MenuBarItem>
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_144_IList;
                userType.CollectionAdd = VectorAdd_144_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 145:   //  Microsoft.UI.Xaml.Controls.MenuBarItem
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_145_MenuBarItem;
                userType.StaticInitializer = StaticInitializer_145_MenuBarItem;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.MenuBarItem.Items");
                userType.AddMemberName("Items");
                userType.AddMemberName("Title");
                xamlType = userType;
                break;

            case 146:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase>
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_146_IList;
                userType.CollectionAdd = VectorAdd_146_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 147:   //  Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 148:   //  AppFirst.Views.Pages.LoadSqlDataSqlitePage
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_148_LoadSqlDataSqlitePage;
                userType.StaticInitializer = StaticInitializer_148_LoadSqlDataSqlitePage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 149:   //  AppFirst.ViewModels.Pages.LoadSqlDataSqliteViewModel
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableObject"));
                userType.StaticInitializer = StaticInitializer_149_LoadSqlDataSqliteViewModel;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 150:   //  AppFirst.Views.Pages.SamplePage
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_150_SamplePage;
                userType.StaticInitializer = StaticInitializer_150_SamplePage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 151:   //  AppFirst.ViewModels.Pages.SamplePageViewModel
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableObject"));
                userType.StaticInitializer = StaticInitializer_151_SamplePageViewModel;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 152:   //  AppFirst.Views.Sample1Page
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_152_Sample1Page;
                userType.StaticInitializer = StaticInitializer_152_Sample1Page;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 153:   //  AppFirst.ViewModels.Sample1PageViewModel
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableObject"));
                userType.StaticInitializer = StaticInitializer_153_Sample1PageViewModel;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 154:   //  Microsoft.UI.Xaml.Controls.ScrollView
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_154_ScrollView;
                userType.StaticInitializer = StaticInitializer_154_ScrollView;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.ScrollView.Content");
                userType.AddMemberName("Content");
                userType.AddMemberName("VerticalScrollBarVisibility");
                userType.AddMemberName("ComputedHorizontalScrollBarVisibility");
                userType.AddMemberName("ComputedHorizontalScrollMode");
                userType.AddMemberName("ComputedVerticalScrollBarVisibility");
                userType.AddMemberName("ComputedVerticalScrollMode");
                userType.AddMemberName("ContentOrientation");
                userType.AddMemberName("CurrentAnchor");
                userType.AddMemberName("ExpressionAnimationSources");
                userType.AddMemberName("ExtentHeight");
                userType.AddMemberName("ExtentWidth");
                userType.AddMemberName("HorizontalAnchorRatio");
                userType.AddMemberName("HorizontalOffset");
                userType.AddMemberName("HorizontalScrollBarVisibility");
                userType.AddMemberName("HorizontalScrollChainMode");
                userType.AddMemberName("HorizontalScrollMode");
                userType.AddMemberName("HorizontalScrollRailMode");
                userType.AddMemberName("IgnoredInputKinds");
                userType.AddMemberName("MaxZoomFactor");
                userType.AddMemberName("MinZoomFactor");
                userType.AddMemberName("ScrollPresenter");
                userType.AddMemberName("ScrollableHeight");
                userType.AddMemberName("ScrollableWidth");
                userType.AddMemberName("State");
                userType.AddMemberName("VerticalAnchorRatio");
                userType.AddMemberName("VerticalOffset");
                userType.AddMemberName("VerticalScrollChainMode");
                userType.AddMemberName("VerticalScrollMode");
                userType.AddMemberName("VerticalScrollRailMode");
                userType.AddMemberName("ViewportHeight");
                userType.AddMemberName("ViewportWidth");
                userType.AddMemberName("ZoomChainMode");
                userType.AddMemberName("ZoomFactor");
                userType.AddMemberName("ZoomMode");
                xamlType = userType;
                break;

            case 155:   //  Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_155_ScrollingScrollBarVisibility;
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility.Auto);
                userType.AddEnumValue("Visible", global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility.Visible);
                userType.AddEnumValue("Hidden", global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility.Hidden);
                xamlType = userType;
                break;

            case 156:   //  Microsoft.UI.Xaml.Controls.ScrollingScrollMode
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_156_ScrollingScrollMode;
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode.Enabled);
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode.Disabled);
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode.Auto);
                xamlType = userType;
                break;

            case 157:   //  Microsoft.UI.Xaml.Controls.ScrollingContentOrientation
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_157_ScrollingContentOrientation;
                userType.AddEnumValue("Vertical", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.Vertical);
                userType.AddEnumValue("Horizontal", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.Horizontal);
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.None);
                userType.AddEnumValue("Both", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.Both);
                xamlType = userType;
                break;

            case 158:   //  Microsoft.UI.Composition.CompositionPropertySet
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Composition.CompositionObject"));
                userType.StaticInitializer = StaticInitializer_158_CompositionPropertySet;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 159:   //  Microsoft.UI.Composition.CompositionObject
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_159_CompositionObject;
                xamlType = userType;
                break;

            case 160:   //  Microsoft.UI.Xaml.Controls.ScrollingChainMode
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_160_ScrollingChainMode;
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.ScrollingChainMode.Auto);
                userType.AddEnumValue("Always", global::Microsoft.UI.Xaml.Controls.ScrollingChainMode.Always);
                userType.AddEnumValue("Never", global::Microsoft.UI.Xaml.Controls.ScrollingChainMode.Never);
                xamlType = userType;
                break;

            case 161:   //  Microsoft.UI.Xaml.Controls.ScrollingRailMode
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_161_ScrollingRailMode;
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.ScrollingRailMode.Enabled);
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.ScrollingRailMode.Disabled);
                xamlType = userType;
                break;

            case 162:   //  Microsoft.UI.Xaml.Controls.ScrollingInputKinds
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_162_ScrollingInputKinds;
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.None);
                userType.AddEnumValue("Touch", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Touch);
                userType.AddEnumValue("Pen", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Pen);
                userType.AddEnumValue("MouseWheel", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.MouseWheel);
                userType.AddEnumValue("Keyboard", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Keyboard);
                userType.AddEnumValue("Gamepad", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Gamepad);
                userType.AddEnumValue("All", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.All);
                xamlType = userType;
                break;

            case 163:   //  Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement"));
                userType.StaticInitializer = StaticInitializer_163_ScrollPresenter;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter.Content");
                userType.AddMemberName("Content");
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 164:   //  Microsoft.UI.Xaml.FrameworkElement
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 165:   //  Microsoft.UI.Xaml.Controls.ScrollingInteractionState
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_165_ScrollingInteractionState;
                userType.AddEnumValue("Idle", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Idle);
                userType.AddEnumValue("Interaction", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Interaction);
                userType.AddEnumValue("Inertia", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Inertia);
                userType.AddEnumValue("Animation", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Animation);
                xamlType = userType;
                break;

            case 166:   //  Single
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 167:   //  Microsoft.UI.Xaml.Controls.ScrollingZoomMode
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_167_ScrollingZoomMode;
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode.Enabled);
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode.Disabled);
                xamlType = userType;
                break;

            case 168:   //  WinUICommunity.PanelAttach
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_168_PanelAttach;
                userType.StaticInitializer = StaticInitializer_168_PanelAttach;
                userType.AddMemberName("ChildrenTransitions");
                xamlType = userType;
                break;

            case 169:   //  WinUICommunity.PanelTransitionCollection
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_169_PanelTransitionCollection;
                userType.AddEnumValue("None", global::WinUICommunity.PanelTransitionCollection.None);
                userType.AddEnumValue("Default", global::WinUICommunity.PanelTransitionCollection.Default);
                userType.AddEnumValue("AddDeleteThemeTransition", global::WinUICommunity.PanelTransitionCollection.AddDeleteThemeTransition);
                userType.AddEnumValue("ContentThemeTransition", global::WinUICommunity.PanelTransitionCollection.ContentThemeTransition);
                userType.AddEnumValue("EdgeUIThemeTransition", global::WinUICommunity.PanelTransitionCollection.EdgeUIThemeTransition);
                userType.AddEnumValue("EntranceThemeTransition", global::WinUICommunity.PanelTransitionCollection.EntranceThemeTransition);
                userType.AddEnumValue("NavigationThemeTransition", global::WinUICommunity.PanelTransitionCollection.NavigationThemeTransition);
                userType.AddEnumValue("PaneThemeTransition", global::WinUICommunity.PanelTransitionCollection.PaneThemeTransition);
                userType.AddEnumValue("PopupThemeTransition", global::WinUICommunity.PanelTransitionCollection.PopupThemeTransition);
                userType.AddEnumValue("ReorderThemeTransition", global::WinUICommunity.PanelTransitionCollection.ReorderThemeTransition);
                userType.AddEnumValue("RepositionThemeTransition", global::WinUICommunity.PanelTransitionCollection.RepositionThemeTransition);
                userType.AddEnumValue("SettingsCardTransition", global::WinUICommunity.PanelTransitionCollection.SettingsCardTransition);
                xamlType = userType;
                break;

            case 170:   //  WinUICommunity.SettingsNavigationAttach
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_170_SettingsNavigationAttach;
                userType.StaticInitializer = StaticInitializer_170_SettingsNavigationAttach;
                userType.AddMemberName("JsonNavigationViewService");
                userType.AddMemberName("SlideNavigationTransitionInfo");
                xamlType = userType;
                break;

            case 171:   //  Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 172:   //  WinUICommunity.SettingsCard
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Primitives.ButtonBase"));
                userType.Activator = Activate_172_SettingsCard;
                userType.StaticInitializer = StaticInitializer_172_SettingsCard;
                userType.AddMemberName("Description");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderIcon");
                userType.AddMemberName("IsClickEnabled");
                userType.AddMemberName("LaunchUri");
                userType.AddMemberName("ActionIcon");
                userType.AddMemberName("ActionIconToolTip");
                userType.AddMemberName("ContentAlignment");
                userType.AddMemberName("IsActionIconVisible");
                xamlType = userType;
                break;

            case 173:   //  Microsoft.UI.Xaml.Controls.IconElement
                xamlType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 174:   //  WinUICommunity.ContentAlignment
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_174_ContentAlignment;
                userType.AddEnumValue("Right", global::WinUICommunity.ContentAlignment.Right);
                userType.AddEnumValue("Left", global::WinUICommunity.ContentAlignment.Left);
                userType.AddEnumValue("Vertical", global::WinUICommunity.ContentAlignment.Vertical);
                xamlType = userType;
                break;

            case 175:   //  WinUICommunity.NavigationHelperEx
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_175_NavigationHelperEx;
                userType.StaticInitializer = StaticInitializer_175_NavigationHelperEx;
                userType.AddMemberName("NavigateToSetting");
                userType.AddMemberName("NavigateTo");
                userType.AddMemberName("Parent");
                xamlType = userType;
                break;

            case 176:   //  Microsoft.UI.Xaml.Controls.NavigationViewItem
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItemBase"));
                userType.Activator = Activate_176_NavigationViewItem;
                userType.StaticInitializer = StaticInitializer_176_NavigationViewItem;
                userType.AddMemberName("CompactPaneLength");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("Icon");
                userType.AddMemberName("InfoBadge");
                userType.AddMemberName("IsChildSelected");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("MenuItems");
                userType.AddMemberName("MenuItemsSource");
                userType.AddMemberName("SelectsOnInvoked");
                xamlType = userType;
                break;

            case 177:   //  Microsoft.UI.Xaml.Controls.NavigationViewItemBase
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.StaticInitializer = StaticInitializer_177_NavigationViewItemBase;
                userType.AddMemberName("IsSelected");
                xamlType = userType;
                break;

            case 178:   //  Microsoft.UI.Xaml.Controls.InfoBadge
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.StaticInitializer = StaticInitializer_178_InfoBadge;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 179:   //  AppFirst.Views.GeneralSettingPage
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_179_GeneralSettingPage;
                userType.StaticInitializer = StaticInitializer_179_GeneralSettingPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 180:   //  AppFirst.ViewModels.GeneralSettingViewModel
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableObject"));
                userType.StaticInitializer = StaticInitializer_180_GeneralSettingViewModel;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 181:   //  AppFirst.Views.ThemeSettingPage
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_181_ThemeSettingPage;
                userType.StaticInitializer = StaticInitializer_181_ThemeSettingPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 182:   //  AppFirst.Views.AppUpdateSettingPage
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_182_AppUpdateSettingPage;
                userType.StaticInitializer = StaticInitializer_182_AppUpdateSettingPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 183:   //  AppFirst.ViewModels.AppUpdateSettingViewModel
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableObject"));
                userType.StaticInitializer = StaticInitializer_183_AppUpdateSettingViewModel;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 184:   //  AppFirst.Views.AboutUsSettingPage
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_184_AboutUsSettingPage;
                userType.StaticInitializer = StaticInitializer_184_AboutUsSettingPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 185:   //  AppFirst.ViewModels.AboutUsSettingViewModel
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableObject"));
                userType.StaticInitializer = StaticInitializer_185_AboutUsSettingViewModel;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 186:   //  WinUICommunity.BitmapIconExtension
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Markup.MarkupExtension"));
                userType.Activator = Activate_186_BitmapIconExtension;
                userType.StaticInitializer = StaticInitializer_186_BitmapIconExtension;
                userType.AddMemberName("Source");
                userType.AddMemberName("ShowAsMonochrome");
                userType.SetIsMarkupExtension();
                xamlType = userType;
                break;

            case 187:   //  AppFirst.Views.SettingsPage
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_187_SettingsPage;
                userType.StaticInitializer = StaticInitializer_187_SettingsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 188:   //  WinUICommunity.SettingsExpander
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_188_SettingsExpander;
                userType.StaticInitializer = StaticInitializer_188_SettingsExpander;
                userType.SetContentPropertyName("WinUICommunity.SettingsExpander.Content");
                userType.AddMemberName("Content");
                userType.AddMemberName("Description");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderIcon");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("Items");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("ItemTemplate");
                userType.AddMemberName("ItemContainerStyleSelector");
                userType.AddMemberName("ItemsHeader");
                userType.AddMemberName("ItemsFooter");
                xamlType = userType;
                break;

            case 189:   //  WinUICommunity.ThemeServiceAttach
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_189_ThemeServiceAttach;
                userType.AddMemberName("ThemeService");
                xamlType = userType;
                break;

            case 190:   //  WinUICommunity.IThemeService
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_190_IThemeService;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 191:   //  WinUIEx.SplashScreen
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Window"));
                userType.StaticInitializer = StaticInitializer_191_SplashScreen;
                userType.AddMemberName("Backdrop");
                userType.AddMemberName("Width");
                userType.AddMemberName("Height");
                userType.AddMemberName("IsAlwaysOnTop");
                xamlType = userType;
                break;

            case 192:   //  AppFirst.Views.SplashScreen
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("WinUIEx.SplashScreen"));
                userType.StaticInitializer = StaticInitializer_192_SplashScreen;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 193:   //  Microsoft.UI.Xaml.Controls.TreeViewNode
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_193_TreeViewNode;
                userType.StaticInitializer = StaticInitializer_193_TreeViewNode;
                userType.AddMemberName("Children");
                userType.AddMemberName("Content");
                userType.AddMemberName("Depth");
                userType.AddMemberName("HasChildren");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("Parent");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 194:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>
                userType = new global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_194_IList;
                userType.CollectionAdd = VectorAdd_194_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.UI.Controls.CommunityToolkit_WinUI_UI_Controls_DataGrid_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::WinUICommunity.Components.Components_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::WinUICommunity.Core.Core_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::WinUICommunity.LandingPages.LandingPages_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::WinUIEx.WinUIEx_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_XamlControlsResources_UseCompactResources(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            return that.UseCompactResources;
        }
        private void set_0_XamlControlsResources_UseCompactResources(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            that.UseCompactResources = (global::System.Boolean)Value;
        }
        private object get_1_Thickness_Left(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Left;
        }
        private void set_1_Thickness_Left(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Left = (global::System.Double)Value;
        }
        private object get_2_Thickness_Top(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Top;
        }
        private void set_2_Thickness_Top(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Top = (global::System.Double)Value;
        }
        private object get_3_Thickness_Right(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Right;
        }
        private void set_3_Thickness_Right(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Right = (global::System.Double)Value;
        }
        private object get_4_Thickness_Bottom(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Bottom;
        }
        private void set_4_Thickness_Bottom(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Bottom = (global::System.Double)Value;
        }
        private object get_5_LoginDialog_ViewModel(object instance)
        {
            var that = (global::AppFirst.Views.Dialogs.LoginDialog)instance;
            return that.ViewModel;
        }
        private object get_6_InfoBar_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.Content;
        }
        private void set_6_InfoBar_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_7_InfoBar_IsClosable(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.IsClosable;
        }
        private void set_7_InfoBar_IsClosable(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.IsClosable = (global::System.Boolean)Value;
        }
        private object get_8_InfoBar_IsOpen(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.IsOpen;
        }
        private void set_8_InfoBar_IsOpen(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.IsOpen = (global::System.Boolean)Value;
        }
        private object get_9_InfoBar_Severity(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.Severity;
        }
        private void set_9_InfoBar_Severity(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.Severity = (global::Microsoft.UI.Xaml.Controls.InfoBarSeverity)Value;
        }
        private object get_10_InfoBar_ActionButton(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.ActionButton;
        }
        private void set_10_InfoBar_ActionButton(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.ActionButton = (global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase)Value;
        }
        private object get_11_InfoBar_CloseButtonCommand(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.CloseButtonCommand;
        }
        private void set_11_InfoBar_CloseButtonCommand(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.CloseButtonCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_12_InfoBar_CloseButtonCommandParameter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.CloseButtonCommandParameter;
        }
        private void set_12_InfoBar_CloseButtonCommandParameter(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.CloseButtonCommandParameter = (global::System.Object)Value;
        }
        private object get_13_InfoBar_CloseButtonStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.CloseButtonStyle;
        }
        private void set_13_InfoBar_CloseButtonStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.CloseButtonStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_14_InfoBar_ContentTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.ContentTemplate;
        }
        private void set_14_InfoBar_ContentTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.ContentTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_15_InfoBar_IconSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.IconSource;
        }
        private void set_15_InfoBar_IconSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.IconSource = (global::Microsoft.UI.Xaml.Controls.IconSource)Value;
        }
        private object get_16_InfoBar_IsIconVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.IsIconVisible;
        }
        private void set_16_InfoBar_IsIconVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.IsIconVisible = (global::System.Boolean)Value;
        }
        private object get_17_InfoBar_Message(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.Message;
        }
        private void set_17_InfoBar_Message(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.Message = (global::System.String)Value;
        }
        private object get_18_InfoBar_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.TemplateSettings;
        }
        private object get_19_InfoBar_Title(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.Title;
        }
        private void set_19_InfoBar_Title(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_20_WindowEx_WindowContent(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.WindowContent;
        }
        private void set_20_WindowEx_WindowContent(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.WindowContent = (global::System.Object)Value;
        }
        private object get_21_WindowEx_Width(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.Width;
        }
        private void set_21_WindowEx_Width(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.Width = (global::System.Double)Value;
        }
        private object get_22_WindowEx_Height(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.Height;
        }
        private void set_22_WindowEx_Height(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.Height = (global::System.Double)Value;
        }
        private object get_23_WindowEx_MinWidth(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.MinWidth;
        }
        private void set_23_WindowEx_MinWidth(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.MinWidth = (global::System.Double)Value;
        }
        private object get_24_WindowEx_MinHeight(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.MinHeight;
        }
        private void set_24_WindowEx_MinHeight(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.MinHeight = (global::System.Double)Value;
        }
        private object get_25_WindowEx_MaxWidth(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.MaxWidth;
        }
        private void set_25_WindowEx_MaxWidth(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.MaxWidth = (global::System.Double)Value;
        }
        private object get_26_WindowEx_MaxHeight(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.MaxHeight;
        }
        private void set_26_WindowEx_MaxHeight(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.MaxHeight = (global::System.Double)Value;
        }
        private object get_27_WindowEx_PersistenceId(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.PersistenceId;
        }
        private void set_27_WindowEx_PersistenceId(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.PersistenceId = (global::System.String)Value;
        }
        private object get_28_WindowEx_Title(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.Title;
        }
        private void set_28_WindowEx_Title(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_29_WindowEx_IsResizable(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.IsResizable;
        }
        private void set_29_WindowEx_IsResizable(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.IsResizable = (global::System.Boolean)Value;
        }
        private object get_30_WindowEx_IsAlwaysOnTop(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.IsAlwaysOnTop;
        }
        private void set_30_WindowEx_IsAlwaysOnTop(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.IsAlwaysOnTop = (global::System.Boolean)Value;
        }
        private object get_31_WindowEx_IsTitleBarVisible(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.IsTitleBarVisible;
        }
        private void set_31_WindowEx_IsTitleBarVisible(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.IsTitleBarVisible = (global::System.Boolean)Value;
        }
        private object get_32_WindowEx_AppWindow(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.AppWindow;
        }
        private object get_33_WindowEx_TaskBarIcon(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.TaskBarIcon;
        }
        private void set_33_WindowEx_TaskBarIcon(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.TaskBarIcon = (global::WinUIEx.Icon)Value;
        }
        private object get_34_WindowEx_IsMinimizable(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.IsMinimizable;
        }
        private void set_34_WindowEx_IsMinimizable(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.IsMinimizable = (global::System.Boolean)Value;
        }
        private object get_35_WindowEx_IsMaximizable(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.IsMaximizable;
        }
        private void set_35_WindowEx_IsMaximizable(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.IsMaximizable = (global::System.Boolean)Value;
        }
        private object get_36_WindowEx_WindowState(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.WindowState;
        }
        private void set_36_WindowEx_WindowState(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.WindowState = (global::WinUIEx.WindowState)Value;
        }
        private object get_37_WindowEx_IsShownInSwitchers(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.IsShownInSwitchers;
        }
        private void set_37_WindowEx_IsShownInSwitchers(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.IsShownInSwitchers = (global::System.Boolean)Value;
        }
        private object get_38_WindowEx_Presenter(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.Presenter;
        }
        private object get_39_WindowEx_PresenterKind(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.PresenterKind;
        }
        private void set_39_WindowEx_PresenterKind(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.PresenterKind = (global::Microsoft.UI.Windowing.AppWindowPresenterKind)Value;
        }
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_40_WindowEx_Backdrop(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.Backdrop;
        }
        private void set_40_WindowEx_Backdrop(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.Backdrop = (global::WinUIEx.SystemBackdrop)Value;
        }
#pragma warning restore 0618
        private object get_41_MicaBackdrop_Kind(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Media.MicaBackdrop)instance;
            return that.Kind;
        }
        private void set_41_MicaBackdrop_Kind(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Media.MicaBackdrop)instance;
            that.Kind = (global::Microsoft.UI.Composition.SystemBackdrops.MicaKind)Value;
        }
        private object get_42_ProgressBar_IsIndeterminate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.IsIndeterminate;
        }
        private void set_42_ProgressBar_IsIndeterminate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            that.IsIndeterminate = (global::System.Boolean)Value;
        }
        private object get_43_ProgressBar_ShowError(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.ShowError;
        }
        private void set_43_ProgressBar_ShowError(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            that.ShowError = (global::System.Boolean)Value;
        }
        private object get_44_ProgressBar_ShowPaused(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.ShowPaused;
        }
        private void set_44_ProgressBar_ShowPaused(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            that.ShowPaused = (global::System.Boolean)Value;
        }
        private object get_45_ProgressBar_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.TemplateSettings;
        }
        private object get_46_SqlConnectionStringDialog_ViewModel(object instance)
        {
            var that = (global::AppFirst.Views.Dialogs.SqlConnectionStringDialog)instance;
            return that.ViewModel;
        }
        private object get_47_UserDialog_ResultUser(object instance)
        {
            var that = (global::AppFirst.Views.Dialogs.UserDialog)instance;
            return that.ResultUser;
        }
        private void set_47_UserDialog_ResultUser(object instance, object Value)
        {
            var that = (global::AppFirst.Views.Dialogs.UserDialog)instance;
            that.ResultUser = (global::AppFirst.Models.User)Value;
        }
        private object get_48_UserDialog_ViewModel(object instance)
        {
            var that = (global::AppFirst.Views.Dialogs.UserDialog)instance;
            return that.ViewModel;
        }
        private object get_49_ItemsPageBase_HeaderImage(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.HeaderImage;
        }
        private void set_49_ItemsPageBase_HeaderImage(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.HeaderImage = (global::System.String)Value;
        }
        private object get_50_ItemsPageBase_HeaderOverlayImage(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.HeaderOverlayImage;
        }
        private void set_50_ItemsPageBase_HeaderOverlayImage(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.HeaderOverlayImage = (global::System.String)Value;
        }
        private object get_51_ItemsPageBase_HeaderSubtitleText(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.HeaderSubtitleText;
        }
        private void set_51_ItemsPageBase_HeaderSubtitleText(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.HeaderSubtitleText = (global::System.String)Value;
        }
        private object get_52_ItemsPageBase_HeaderText(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.HeaderText;
        }
        private void set_52_ItemsPageBase_HeaderText(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.HeaderText = (global::System.String)Value;
        }
        private object get_53_ItemsPageBase_JsonNavigationViewService(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.JsonNavigationViewService;
        }
        private void set_53_ItemsPageBase_JsonNavigationViewService(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.JsonNavigationViewService = (global::WinUICommunity.IJsonNavigationViewService)Value;
        }
        private object get_54_AllLandingPage_UseFullScreenHeaderImage(object instance)
        {
            var that = (global::WinUICommunity.AllLandingPage)instance;
            return that.UseFullScreenHeaderImage;
        }
        private void set_54_AllLandingPage_UseFullScreenHeaderImage(object instance, object Value)
        {
            var that = (global::WinUICommunity.AllLandingPage)instance;
            that.UseFullScreenHeaderImage = (global::System.Boolean)Value;
        }
        private object get_55_ItemsPageBase_CanExecuteInternalCommand(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.CanExecuteInternalCommand;
        }
        private void set_55_ItemsPageBase_CanExecuteInternalCommand(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.CanExecuteInternalCommand = (global::System.Boolean)Value;
        }
        private object get_56_ItemsPageBase_Items(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.Items;
        }
        private void set_56_ItemsPageBase_Items(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.Items = (global::System.Collections.Generic.IEnumerable<global::WinUICommunity.DataItem>)Value;
        }
        private object get_57_ItemsPageBase_PlaceholderSource(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.PlaceholderSource;
        }
        private void set_57_ItemsPageBase_PlaceholderSource(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.PlaceholderSource = (global::Microsoft.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_58_ItemsPageBase_IsCacheEnabled(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.IsCacheEnabled;
        }
        private void set_58_ItemsPageBase_IsCacheEnabled(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.IsCacheEnabled = (global::System.Boolean)Value;
        }
        private object get_59_ItemsPageBase_EnableLazyLoading(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.EnableLazyLoading;
        }
        private void set_59_ItemsPageBase_EnableLazyLoading(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.EnableLazyLoading = (global::System.Boolean)Value;
        }
        private object get_60_ItemsPageBase_LazyLoadingThreshold(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.LazyLoadingThreshold;
        }
        private void set_60_ItemsPageBase_LazyLoadingThreshold(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.LazyLoadingThreshold = (global::System.Double)Value;
        }
        private object get_61_ItemsPageBase_SpaceBetweenHeaderAndGridView(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.SpaceBetweenHeaderAndGridView;
        }
        private void set_61_ItemsPageBase_SpaceBetweenHeaderAndGridView(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.SpaceBetweenHeaderAndGridView = (global::Microsoft.UI.Xaml.GridLength)Value;
        }
        private object get_62_ItemsPageBase_Stretch(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.Stretch;
        }
        private void set_62_ItemsPageBase_Stretch(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.Stretch = (global::Microsoft.UI.Xaml.Media.Stretch)Value;
        }
        private object get_63_ItemsPageBase_NormalizedCenterPoint(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.NormalizedCenterPoint;
        }
        private void set_63_ItemsPageBase_NormalizedCenterPoint(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.NormalizedCenterPoint = (global::System.String)Value;
        }
        private object get_64_ItemsPageBase_OverlayOpacity(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.OverlayOpacity;
        }
        private void set_64_ItemsPageBase_OverlayOpacity(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.OverlayOpacity = (global::System.Double)Value;
        }
        private object get_65_ItemsPageBase_HeaderVerticalAlignment(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.HeaderVerticalAlignment;
        }
        private void set_65_ItemsPageBase_HeaderVerticalAlignment(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.HeaderVerticalAlignment = (global::Microsoft.UI.Xaml.VerticalAlignment)Value;
        }
        private object get_66_ItemsPageBase_HeaderCornerRadius(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.HeaderCornerRadius;
        }
        private void set_66_ItemsPageBase_HeaderCornerRadius(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.HeaderCornerRadius = (global::Microsoft.UI.Xaml.CornerRadius)Value;
        }
        private object get_67_ItemsPageBase_HeaderContentMargin(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.HeaderContentMargin;
        }
        private void set_67_ItemsPageBase_HeaderContentMargin(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.HeaderContentMargin = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_68_ItemsPageBase_HeaderSubtitleFontSize(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.HeaderSubtitleFontSize;
        }
        private void set_68_ItemsPageBase_HeaderSubtitleFontSize(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.HeaderSubtitleFontSize = (global::System.Double)Value;
        }
        private object get_69_ItemsPageBase_GridViewPadding(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.GridViewPadding;
        }
        private void set_69_ItemsPageBase_GridViewPadding(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.GridViewPadding = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_70_ItemsPageBase_GridViewVerticalAlignment(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.GridViewVerticalAlignment;
        }
        private void set_70_ItemsPageBase_GridViewVerticalAlignment(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.GridViewVerticalAlignment = (global::Microsoft.UI.Xaml.VerticalAlignment)Value;
        }
        private object get_71_ItemsPageBase_HeaderFontSize(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.HeaderFontSize;
        }
        private void set_71_ItemsPageBase_HeaderFontSize(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.HeaderFontSize = (global::System.Double)Value;
        }
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_72_TitleBar_Title(object instance)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            return that.Title;
        }
        private void set_72_TitleBar_Title(object instance, object Value)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            that.Title = (global::System.String)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_73_TitleBar_IconSource(object instance)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            return that.IconSource;
        }
        private void set_73_TitleBar_IconSource(object instance, object Value)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            that.IconSource = (global::Microsoft.UI.Xaml.Controls.IconSource)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_74_TitleBar_IsBackButtonVisible(object instance)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            return that.IsBackButtonVisible;
        }
        private void set_74_TitleBar_IsBackButtonVisible(object instance, object Value)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            that.IsBackButtonVisible = (global::System.Boolean)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_75_TitleBar_IsPaneToggleButtonVisible(object instance)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            return that.IsPaneToggleButtonVisible;
        }
        private void set_75_TitleBar_IsPaneToggleButtonVisible(object instance, object Value)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            that.IsPaneToggleButtonVisible = (global::System.Boolean)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_76_TitleBar_Subtitle(object instance)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            return that.Subtitle;
        }
        private void set_76_TitleBar_Subtitle(object instance, object Value)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            that.Subtitle = (global::System.String)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_77_TitleBar_Content(object instance)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            return that.Content;
        }
        private void set_77_TitleBar_Content(object instance, object Value)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            that.Content = (global::System.Object)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_78_TitleBar_Footer(object instance)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            return that.Footer;
        }
        private void set_78_TitleBar_Footer(object instance, object Value)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            that.Footer = (global::System.Object)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_79_TitleBar_Header(object instance)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            return that.Header;
        }
        private void set_79_TitleBar_Header(object instance, object Value)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            that.Header = (global::System.Object)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_80_TitleBar_IsBackEnabled(object instance)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            return that.IsBackEnabled;
        }
        private void set_80_TitleBar_IsBackEnabled(object instance, object Value)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            that.IsBackEnabled = (global::System.Boolean)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_81_TitleBar_TemplateSettings(object instance)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            return that.TemplateSettings;
        }
#pragma warning restore 0618
        private object get_82_NavigationView_IsBackButtonVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsBackButtonVisible;
        }
        private void set_82_NavigationView_IsBackButtonVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsBackButtonVisible = (global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible)Value;
        }
        private object get_83_NavigationView_IsPaneToggleButtonVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneToggleButtonVisible;
        }
        private void set_83_NavigationView_IsPaneToggleButtonVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneToggleButtonVisible = (global::System.Boolean)Value;
        }
        private object get_84_NavigationView_Header(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.Header;
        }
        private void set_84_NavigationView_Header(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_85_NavigationView_AlwaysShowHeader(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.AlwaysShowHeader;
        }
        private void set_85_NavigationView_AlwaysShowHeader(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.AlwaysShowHeader = (global::System.Boolean)Value;
        }
        private object get_86_NavigationView_AutoSuggestBox(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.AutoSuggestBox;
        }
        private void set_86_NavigationView_AutoSuggestBox(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.AutoSuggestBox = (global::Microsoft.UI.Xaml.Controls.AutoSuggestBox)Value;
        }
        private object get_87_NavigationView_CompactModeThresholdWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.CompactModeThresholdWidth;
        }
        private void set_87_NavigationView_CompactModeThresholdWidth(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.CompactModeThresholdWidth = (global::System.Double)Value;
        }
        private object get_88_NavigationView_CompactPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.CompactPaneLength;
        }
        private void set_88_NavigationView_CompactPaneLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.CompactPaneLength = (global::System.Double)Value;
        }
        private object get_89_NavigationView_ContentOverlay(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ContentOverlay;
        }
        private void set_89_NavigationView_ContentOverlay(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ContentOverlay = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_90_NavigationView_DisplayMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.DisplayMode;
        }
        private object get_91_NavigationView_ExpandedModeThresholdWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ExpandedModeThresholdWidth;
        }
        private void set_91_NavigationView_ExpandedModeThresholdWidth(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ExpandedModeThresholdWidth = (global::System.Double)Value;
        }
        private object get_92_NavigationView_FooterMenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.FooterMenuItems;
        }
        private object get_93_NavigationView_FooterMenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.FooterMenuItemsSource;
        }
        private void set_93_NavigationView_FooterMenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.FooterMenuItemsSource = (global::System.Object)Value;
        }
        private object get_94_NavigationView_HeaderTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.HeaderTemplate;
        }
        private void set_94_NavigationView_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.HeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_95_NavigationView_IsBackEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsBackEnabled;
        }
        private void set_95_NavigationView_IsBackEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsBackEnabled = (global::System.Boolean)Value;
        }
        private object get_96_NavigationView_IsPaneOpen(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneOpen;
        }
        private void set_96_NavigationView_IsPaneOpen(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneOpen = (global::System.Boolean)Value;
        }
        private object get_97_NavigationView_IsPaneVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneVisible;
        }
        private void set_97_NavigationView_IsPaneVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneVisible = (global::System.Boolean)Value;
        }
        private object get_98_NavigationView_IsSettingsVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsSettingsVisible;
        }
        private void set_98_NavigationView_IsSettingsVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsSettingsVisible = (global::System.Boolean)Value;
        }
        private object get_99_NavigationView_IsTitleBarAutoPaddingEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsTitleBarAutoPaddingEnabled;
        }
        private void set_99_NavigationView_IsTitleBarAutoPaddingEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsTitleBarAutoPaddingEnabled = (global::System.Boolean)Value;
        }
        private object get_100_NavigationView_MenuItemContainerStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemContainerStyle;
        }
        private void set_100_NavigationView_MenuItemContainerStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemContainerStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_101_NavigationView_MenuItemContainerStyleSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemContainerStyleSelector;
        }
        private void set_101_NavigationView_MenuItemContainerStyleSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemContainerStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_102_NavigationView_MenuItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemTemplate;
        }
        private void set_102_NavigationView_MenuItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_103_NavigationView_MenuItemTemplateSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemTemplateSelector;
        }
        private void set_103_NavigationView_MenuItemTemplateSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_104_NavigationView_MenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItems;
        }
        private object get_105_NavigationView_MenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemsSource;
        }
        private void set_105_NavigationView_MenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemsSource = (global::System.Object)Value;
        }
        private object get_106_NavigationView_OpenPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.OpenPaneLength;
        }
        private void set_106_NavigationView_OpenPaneLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.OpenPaneLength = (global::System.Double)Value;
        }
        private object get_107_NavigationView_OverflowLabelMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.OverflowLabelMode;
        }
        private void set_107_NavigationView_OverflowLabelMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.OverflowLabelMode = (global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode)Value;
        }
        private object get_108_NavigationView_PaneCustomContent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneCustomContent;
        }
        private void set_108_NavigationView_PaneCustomContent(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneCustomContent = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_109_NavigationView_PaneDisplayMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneDisplayMode;
        }
        private void set_109_NavigationView_PaneDisplayMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneDisplayMode = (global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode)Value;
        }
        private object get_110_NavigationView_PaneFooter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneFooter;
        }
        private void set_110_NavigationView_PaneFooter(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneFooter = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_111_NavigationView_PaneHeader(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneHeader;
        }
        private void set_111_NavigationView_PaneHeader(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneHeader = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_112_NavigationView_PaneTitle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneTitle;
        }
        private void set_112_NavigationView_PaneTitle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneTitle = (global::System.String)Value;
        }
        private object get_113_NavigationView_PaneToggleButtonStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneToggleButtonStyle;
        }
        private void set_113_NavigationView_PaneToggleButtonStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneToggleButtonStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_114_NavigationView_SelectedItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SelectedItem;
        }
        private void set_114_NavigationView_SelectedItem(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_115_NavigationView_SelectionFollowsFocus(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SelectionFollowsFocus;
        }
        private void set_115_NavigationView_SelectionFollowsFocus(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.SelectionFollowsFocus = (global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus)Value;
        }
        private object get_116_NavigationView_SettingsItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SettingsItem;
        }
        private object get_117_NavigationView_ShoulderNavigationEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ShoulderNavigationEnabled;
        }
        private void set_117_NavigationView_ShoulderNavigationEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ShoulderNavigationEnabled = (global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled)Value;
        }
        private object get_118_NavigationView_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.TemplateSettings;
        }
        private object get_119_BreadcrumbNavigator_BreadCrumbs(object instance)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            return that.BreadCrumbs;
        }
        private void set_119_BreadcrumbNavigator_BreadCrumbs(object instance, object Value)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            that.BreadCrumbs = (global::System.Collections.ObjectModel.ObservableCollection<global::WinUICommunity.NavigationBreadcrumb>)Value;
        }
        private object get_120_NavigationBreadcrumb_Label(object instance)
        {
            var that = (global::WinUICommunity.NavigationBreadcrumb)instance;
            return that.Label;
        }
        private object get_121_NavigationBreadcrumb_Page(object instance)
        {
            var that = (global::WinUICommunity.NavigationBreadcrumb)instance;
            return that.Page;
        }
        private object get_122_NavigationBreadcrumb_Parameter(object instance)
        {
            var that = (global::WinUICommunity.NavigationBreadcrumb)instance;
            return that.Parameter;
        }
        private object get_123_BreadcrumbNavigator_UseBuiltInEventForFrame(object instance)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            return that.UseBuiltInEventForFrame;
        }
        private void set_123_BreadcrumbNavigator_UseBuiltInEventForFrame(object instance, object Value)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            that.UseBuiltInEventForFrame = (global::System.Boolean)Value;
        }
        private object get_124_BreadcrumbNavigator_Frame(object instance)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            return that.Frame;
        }
        private void set_124_BreadcrumbNavigator_Frame(object instance, object Value)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            that.Frame = (global::Microsoft.UI.Xaml.Controls.Frame)Value;
        }
        private object get_125_BreadcrumbNavigator_PageDictionary(object instance)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            return that.PageDictionary;
        }
        private void set_125_BreadcrumbNavigator_PageDictionary(object instance, object Value)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            that.PageDictionary = (global::System.Collections.Generic.Dictionary<global::System.Type, global::WinUICommunity.BreadcrumbPageConfig>)Value;
        }
        private object get_126_BreadcrumbPageConfig_PageTitle(object instance)
        {
            var that = (global::WinUICommunity.BreadcrumbPageConfig)instance;
            return that.PageTitle;
        }
        private void set_126_BreadcrumbPageConfig_PageTitle(object instance, object Value)
        {
            var that = (global::WinUICommunity.BreadcrumbPageConfig)instance;
            that.PageTitle = (global::System.String)Value;
        }
        private object get_127_BreadcrumbPageConfig_IsHeaderVisible(object instance)
        {
            var that = (global::WinUICommunity.BreadcrumbPageConfig)instance;
            return that.IsHeaderVisible;
        }
        private void set_127_BreadcrumbPageConfig_IsHeaderVisible(object instance, object Value)
        {
            var that = (global::WinUICommunity.BreadcrumbPageConfig)instance;
            that.IsHeaderVisible = (global::System.Boolean)Value;
        }
        private object get_128_BreadcrumbPageConfig_ClearNavigation(object instance)
        {
            var that = (global::WinUICommunity.BreadcrumbPageConfig)instance;
            return that.ClearNavigation;
        }
        private void set_128_BreadcrumbPageConfig_ClearNavigation(object instance, object Value)
        {
            var that = (global::WinUICommunity.BreadcrumbPageConfig)instance;
            that.ClearNavigation = (global::System.Boolean)Value;
        }
        private object get_129_Type_Assembly(object instance)
        {
            var that = (global::System.Type)instance;
            return that.Assembly;
        }
        private object get_130_Type_AssemblyQualifiedName(object instance)
        {
            var that = (global::System.Type)instance;
            return that.AssemblyQualifiedName;
        }
        private object get_131_Type_Attributes(object instance)
        {
            var that = (global::System.Type)instance;
            return that.Attributes;
        }
        private object get_132_Type_BaseType(object instance)
        {
            var that = (global::System.Type)instance;
            return that.BaseType;
        }
        private object get_133_Type_ContainsGenericParameters(object instance)
        {
            var that = (global::System.Type)instance;
            return that.ContainsGenericParameters;
        }
        private object get_134_Type_DeclaringMethod(object instance)
        {
            var that = (global::System.Type)instance;
            return that.DeclaringMethod;
        }
        private object get_135_Type_DeclaringType(object instance)
        {
            var that = (global::System.Type)instance;
            return that.DeclaringType;
        }
        private object get_136_Type_FullName(object instance)
        {
            var that = (global::System.Type)instance;
            return that.FullName;
        }
        private object get_137_Type_GenericParameterAttributes(object instance)
        {
            var that = (global::System.Type)instance;
            return that.GenericParameterAttributes;
        }
        private object get_138_Type_GenericParameterPosition(object instance)
        {
            var that = (global::System.Type)instance;
            return that.GenericParameterPosition;
        }
        private object get_139_Type_GenericTypeArguments(object instance)
        {
            var that = (global::System.Type)instance;
            return that.GenericTypeArguments;
        }
        private object get_140_Type_GUID(object instance)
        {
            var that = (global::System.Type)instance;
            return that.GUID;
        }
        private object get_141_Type_HasElementType(object instance)
        {
            var that = (global::System.Type)instance;
            return that.HasElementType;
        }
        private object get_142_Type_IsAbstract(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsAbstract;
        }
        private object get_143_Type_IsAnsiClass(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsAnsiClass;
        }
        private object get_144_Type_IsArray(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsArray;
        }
        private object get_145_Type_IsAutoClass(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsAutoClass;
        }
        private object get_146_Type_IsAutoLayout(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsAutoLayout;
        }
        private object get_147_Type_IsByRef(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsByRef;
        }
        private object get_148_Type_IsByRefLike(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsByRefLike;
        }
        private object get_149_Type_IsClass(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsClass;
        }
        private object get_150_Type_IsCOMObject(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsCOMObject;
        }
        private object get_151_Type_IsConstructedGenericType(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsConstructedGenericType;
        }
        private object get_152_Type_IsContextful(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsContextful;
        }
        private object get_153_Type_IsEnum(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsEnum;
        }
        private object get_154_Type_IsExplicitLayout(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsExplicitLayout;
        }
        private object get_155_Type_IsFunctionPointer(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsFunctionPointer;
        }
        private object get_156_Type_IsGenericMethodParameter(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsGenericMethodParameter;
        }
        private object get_157_Type_IsGenericParameter(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsGenericParameter;
        }
        private object get_158_Type_IsGenericType(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsGenericType;
        }
        private object get_159_Type_IsGenericTypeDefinition(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsGenericTypeDefinition;
        }
        private object get_160_Type_IsGenericTypeParameter(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsGenericTypeParameter;
        }
        private object get_161_Type_IsImport(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsImport;
        }
        private object get_162_Type_IsInterface(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsInterface;
        }
        private object get_163_Type_IsLayoutSequential(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsLayoutSequential;
        }
        private object get_164_Type_IsMarshalByRef(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsMarshalByRef;
        }
        private object get_165_Type_IsNested(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsNested;
        }
        private object get_166_Type_IsNestedAssembly(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsNestedAssembly;
        }
        private object get_167_Type_IsNestedFamANDAssem(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsNestedFamANDAssem;
        }
        private object get_168_Type_IsNestedFamily(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsNestedFamily;
        }
        private object get_169_Type_IsNestedFamORAssem(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsNestedFamORAssem;
        }
        private object get_170_Type_IsNestedPrivate(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsNestedPrivate;
        }
        private object get_171_Type_IsNestedPublic(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsNestedPublic;
        }
        private object get_172_Type_IsNotPublic(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsNotPublic;
        }
        private object get_173_Type_IsPointer(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsPointer;
        }
        private object get_174_Type_IsPrimitive(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsPrimitive;
        }
        private object get_175_Type_IsPublic(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsPublic;
        }
        private object get_176_Type_IsSealed(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsSealed;
        }
        private object get_177_Type_IsSecurityCritical(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsSecurityCritical;
        }
        private object get_178_Type_IsSecuritySafeCritical(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsSecuritySafeCritical;
        }
        private object get_179_Type_IsSecurityTransparent(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsSecurityTransparent;
        }
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_180_Type_IsSerializable(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsSerializable;
        }
#pragma warning restore 0618
        private object get_181_Type_IsSignatureType(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsSignatureType;
        }
        private object get_182_Type_IsSpecialName(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsSpecialName;
        }
        private object get_183_Type_IsSZArray(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsSZArray;
        }
        private object get_184_Type_IsTypeDefinition(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsTypeDefinition;
        }
        private object get_185_Type_IsUnicodeClass(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsUnicodeClass;
        }
        private object get_186_Type_IsUnmanagedFunctionPointer(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsUnmanagedFunctionPointer;
        }
        private object get_187_Type_IsValueType(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsValueType;
        }
        private object get_188_Type_IsVariableBoundArray(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsVariableBoundArray;
        }
        private object get_189_Type_IsVisible(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsVisible;
        }
        private object get_190_Type_MemberType(object instance)
        {
            var that = (global::System.Type)instance;
            return that.MemberType;
        }
        private object get_191_Type_Module(object instance)
        {
            var that = (global::System.Type)instance;
            return that.Module;
        }
        private object get_192_Type_Namespace(object instance)
        {
            var that = (global::System.Type)instance;
            return that.Namespace;
        }
        private object get_193_Type_ReflectedType(object instance)
        {
            var that = (global::System.Type)instance;
            return that.ReflectedType;
        }
        private object get_194_Type_StructLayoutAttribute(object instance)
        {
            var that = (global::System.Type)instance;
            return that.StructLayoutAttribute;
        }
        private object get_195_Type_TypeHandle(object instance)
        {
            var that = (global::System.Type)instance;
            return that.TypeHandle;
        }
        private object get_196_Type_TypeInitializer(object instance)
        {
            var that = (global::System.Type)instance;
            return that.TypeInitializer;
        }
        private object get_197_Type_UnderlyingSystemType(object instance)
        {
            var that = (global::System.Type)instance;
            return that.UnderlyingSystemType;
        }
        private object get_198_MemberInfo_CustomAttributes(object instance)
        {
            var that = (global::System.Reflection.MemberInfo)instance;
            return that.CustomAttributes;
        }
        private object get_199_MemberInfo_IsCollectible(object instance)
        {
            var that = (global::System.Reflection.MemberInfo)instance;
            return that.IsCollectible;
        }
        private object get_200_MemberInfo_MetadataToken(object instance)
        {
            var that = (global::System.Reflection.MemberInfo)instance;
            return that.MetadataToken;
        }
        private object get_201_MemberInfo_Name(object instance)
        {
            var that = (global::System.Reflection.MemberInfo)instance;
            return that.Name;
        }
        private object get_202_BreadcrumbNavigator_NavigationView(object instance)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            return that.NavigationView;
        }
        private void set_202_BreadcrumbNavigator_NavigationView(object instance, object Value)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            that.NavigationView = (global::Microsoft.UI.Xaml.Controls.NavigationView)Value;
        }
        private object get_203_BreadcrumbNavigator_HeaderVisibilityOptions(object instance)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            return that.HeaderVisibilityOptions;
        }
        private void set_203_BreadcrumbNavigator_HeaderVisibilityOptions(object instance, object Value)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            that.HeaderVisibilityOptions = (global::WinUICommunity.BreadcrumbNavigatorHeaderVisibilityOptions)Value;
        }
        private object get_204_BreadcrumbBar_ItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.BreadcrumbBar)instance;
            return that.ItemTemplate;
        }
        private void set_204_BreadcrumbBar_ItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.BreadcrumbBar)instance;
            that.ItemTemplate = (global::System.Object)Value;
        }
        private object get_205_BreadcrumbBar_ItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.BreadcrumbBar)instance;
            return that.ItemsSource;
        }
        private void set_205_BreadcrumbBar_ItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.BreadcrumbBar)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_206_BreadcrumbNavigator_IsHeaderVisible(object instance)
        {
            return global::WinUICommunity.BreadcrumbNavigator.GetIsHeaderVisible((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_206_BreadcrumbNavigator_IsHeaderVisible(object instance, object Value)
        {
            global::WinUICommunity.BreadcrumbNavigator.SetIsHeaderVisible((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::System.Boolean)Value);
        }
        private object get_207_BreadcrumbNavigator_PageTitle(object instance)
        {
            return global::WinUICommunity.BreadcrumbNavigator.GetPageTitle((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_207_BreadcrumbNavigator_PageTitle(object instance, object Value)
        {
            global::WinUICommunity.BreadcrumbNavigator.SetPageTitle((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::System.String)Value);
        }
        private object get_208_BreadcrumbNavigator_ClearNavigation(object instance)
        {
            return global::WinUICommunity.BreadcrumbNavigator.GetClearNavigation((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_208_BreadcrumbNavigator_ClearNavigation(object instance, object Value)
        {
            global::WinUICommunity.BreadcrumbNavigator.SetClearNavigation((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::System.Boolean)Value);
        }
        private object get_209_BitmapIconSourceExtension_Source(object instance)
        {
            var that = (global::WinUICommunity.BitmapIconSourceExtension)instance;
            return that.Source;
        }
        private void set_209_BitmapIconSourceExtension_Source(object instance, object Value)
        {
            var that = (global::WinUICommunity.BitmapIconSourceExtension)instance;
            that.Source = (global::System.Uri)Value;
        }
        private object get_210_BitmapIconSourceExtension_ShowAsMonochrome(object instance)
        {
            var that = (global::WinUICommunity.BitmapIconSourceExtension)instance;
            return that.ShowAsMonochrome;
        }
        private void set_210_BitmapIconSourceExtension_ShowAsMonochrome(object instance, object Value)
        {
            var that = (global::WinUICommunity.BitmapIconSourceExtension)instance;
            that.ShowAsMonochrome = (global::System.Boolean)Value;
        }
        private object get_211_FontIconExtension_Glyph(object instance)
        {
            var that = (global::WinUICommunity.FontIconExtension)instance;
            return that.Glyph;
        }
        private void set_211_FontIconExtension_Glyph(object instance, object Value)
        {
            var that = (global::WinUICommunity.FontIconExtension)instance;
            that.Glyph = (global::System.String)Value;
        }
        private object get_212_FontIconExtension_GlyphCode(object instance)
        {
            var that = (global::WinUICommunity.FontIconExtension)instance;
            return that.GlyphCode;
        }
        private void set_212_FontIconExtension_GlyphCode(object instance, object Value)
        {
            var that = (global::WinUICommunity.FontIconExtension)instance;
            that.GlyphCode = (global::WinUICommunity.GlyphCode)Value;
        }
        private object get_213_FontIconExtension_GlyphName(object instance)
        {
            var that = (global::WinUICommunity.FontIconExtension)instance;
            return that.GlyphName;
        }
        private void set_213_FontIconExtension_GlyphName(object instance, object Value)
        {
            var that = (global::WinUICommunity.FontIconExtension)instance;
            that.GlyphName = (global::WinUICommunity.GlyphName)Value;
        }
        private object get_214_FontIconExtension_FontFamily(object instance)
        {
            var that = (global::WinUICommunity.FontIconExtension)instance;
            return that.FontFamily;
        }
        private void set_214_FontIconExtension_FontFamily(object instance, object Value)
        {
            var that = (global::WinUICommunity.FontIconExtension)instance;
            that.FontFamily = (global::Microsoft.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_215_TextIconExtension_FontSize(object instance)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            return that.FontSize;
        }
        private void set_215_TextIconExtension_FontSize(object instance, object Value)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            that.FontSize = (global::System.Double)Value;
        }
        private object get_216_TextIconExtension_FontWeight(object instance)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            return that.FontWeight;
        }
        private void set_216_TextIconExtension_FontWeight(object instance, object Value)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            that.FontWeight = (global::Windows.UI.Text.FontWeight)Value;
        }
        private object get_217_TextIconExtension_FontStyle(object instance)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            return that.FontStyle;
        }
        private void set_217_TextIconExtension_FontStyle(object instance, object Value)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            that.FontStyle = (global::Windows.UI.Text.FontStyle)Value;
        }
        private object get_218_TextIconExtension_Foreground(object instance)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            return that.Foreground;
        }
        private void set_218_TextIconExtension_Foreground(object instance, object Value)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            that.Foreground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_219_TextIconExtension_IsTextScaleFactorEnabled(object instance)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            return that.IsTextScaleFactorEnabled;
        }
        private void set_219_TextIconExtension_IsTextScaleFactorEnabled(object instance, object Value)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            that.IsTextScaleFactorEnabled = (global::System.Boolean)Value;
        }
        private object get_220_TextIconExtension_MirroredWhenRightToLeft(object instance)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            return that.MirroredWhenRightToLeft;
        }
        private void set_220_TextIconExtension_MirroredWhenRightToLeft(object instance, object Value)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            that.MirroredWhenRightToLeft = (global::System.Boolean)Value;
        }
        private object get_221_MainPage_ViewModel(object instance)
        {
            var that = (global::AppFirst.Views.MainPage)instance;
            return that.ViewModel;
        }
        private object get_222_DataGrid_AutoGenerateColumns(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.AutoGenerateColumns;
        }
        private void set_222_DataGrid_AutoGenerateColumns(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.AutoGenerateColumns = (global::System.Boolean)Value;
        }
        private object get_223_DataGrid_GridLinesVisibility(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.GridLinesVisibility;
        }
        private void set_223_DataGrid_GridLinesVisibility(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.GridLinesVisibility = (global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility)Value;
        }
        private object get_224_DataGrid_ItemsSource(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.ItemsSource;
        }
        private void set_224_DataGrid_ItemsSource(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.ItemsSource = (global::System.Collections.IEnumerable)Value;
        }
        private object get_225_DataGrid_Columns(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.Columns;
        }
        private object get_226_DataGridColumn_ActualWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.ActualWidth;
        }
        private object get_227_DataGridColumn_CanUserReorder(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.CanUserReorder;
        }
        private void set_227_DataGridColumn_CanUserReorder(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.CanUserReorder = (global::System.Boolean)Value;
        }
        private object get_228_DataGridColumn_CanUserResize(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.CanUserResize;
        }
        private void set_228_DataGridColumn_CanUserResize(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.CanUserResize = (global::System.Boolean)Value;
        }
        private object get_229_DataGridColumn_CanUserSort(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.CanUserSort;
        }
        private void set_229_DataGridColumn_CanUserSort(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.CanUserSort = (global::System.Boolean)Value;
        }
        private object get_230_DataGridColumn_CellStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.CellStyle;
        }
        private void set_230_DataGridColumn_CellStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.CellStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_231_DataGridColumn_ClipboardContentBinding(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.ClipboardContentBinding;
        }
        private void set_231_DataGridColumn_ClipboardContentBinding(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.ClipboardContentBinding = (global::Microsoft.UI.Xaml.Data.Binding)Value;
        }
        private object get_232_DataGridColumn_DisplayIndex(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.DisplayIndex;
        }
        private void set_232_DataGridColumn_DisplayIndex(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.DisplayIndex = (global::System.Int32)Value;
        }
        private object get_233_DataGridColumn_DragIndicatorStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.DragIndicatorStyle;
        }
        private void set_233_DataGridColumn_DragIndicatorStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.DragIndicatorStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_234_DataGridColumn_HeaderStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.HeaderStyle;
        }
        private void set_234_DataGridColumn_HeaderStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.HeaderStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_235_DataGridColumn_Header(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.Header;
        }
        private void set_235_DataGridColumn_Header(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_236_DataGridColumn_IsAutoGenerated(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.IsAutoGenerated;
        }
        private object get_237_DataGridColumn_IsFrozen(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.IsFrozen;
        }
        private object get_238_DataGridColumn_IsReadOnly(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.IsReadOnly;
        }
        private void set_238_DataGridColumn_IsReadOnly(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.IsReadOnly = (global::System.Boolean)Value;
        }
        private object get_239_DataGridColumn_MaxWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.MaxWidth;
        }
        private void set_239_DataGridColumn_MaxWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.MaxWidth = (global::System.Double)Value;
        }
        private object get_240_DataGridColumn_MinWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.MinWidth;
        }
        private void set_240_DataGridColumn_MinWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.MinWidth = (global::System.Double)Value;
        }
        private object get_241_DataGridColumn_SortDirection(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.SortDirection;
        }
        private void set_241_DataGridColumn_SortDirection(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.SortDirection = (global::System.Nullable<global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>)Value;
        }
        private object get_242_DataGridColumn_Tag(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.Tag;
        }
        private void set_242_DataGridColumn_Tag(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.Tag = (global::System.Object)Value;
        }
        private object get_243_DataGridColumn_Visibility(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.Visibility;
        }
        private void set_243_DataGridColumn_Visibility(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.Visibility = (global::Microsoft.UI.Xaml.Visibility)Value;
        }
        private object get_244_DataGridColumn_Width(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.Width;
        }
        private void set_244_DataGridColumn_Width(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.Width = (global::CommunityToolkit.WinUI.UI.Controls.DataGridLength)Value;
        }
        private object get_245_DataGrid_AlternatingRowBackground(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.AlternatingRowBackground;
        }
        private void set_245_DataGrid_AlternatingRowBackground(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.AlternatingRowBackground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_246_DataGrid_AlternatingRowForeground(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.AlternatingRowForeground;
        }
        private void set_246_DataGrid_AlternatingRowForeground(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.AlternatingRowForeground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_247_DataGrid_AreRowDetailsFrozen(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.AreRowDetailsFrozen;
        }
        private void set_247_DataGrid_AreRowDetailsFrozen(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.AreRowDetailsFrozen = (global::System.Boolean)Value;
        }
        private object get_248_DataGrid_AreRowGroupHeadersFrozen(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.AreRowGroupHeadersFrozen;
        }
        private void set_248_DataGrid_AreRowGroupHeadersFrozen(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.AreRowGroupHeadersFrozen = (global::System.Boolean)Value;
        }
        private object get_249_DataGrid_CanUserReorderColumns(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.CanUserReorderColumns;
        }
        private void set_249_DataGrid_CanUserReorderColumns(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.CanUserReorderColumns = (global::System.Boolean)Value;
        }
        private object get_250_DataGrid_CanUserResizeColumns(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.CanUserResizeColumns;
        }
        private void set_250_DataGrid_CanUserResizeColumns(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.CanUserResizeColumns = (global::System.Boolean)Value;
        }
        private object get_251_DataGrid_CanUserSortColumns(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.CanUserSortColumns;
        }
        private void set_251_DataGrid_CanUserSortColumns(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.CanUserSortColumns = (global::System.Boolean)Value;
        }
        private object get_252_DataGrid_CellStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.CellStyle;
        }
        private void set_252_DataGrid_CellStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.CellStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_253_DataGrid_ClipboardCopyMode(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.ClipboardCopyMode;
        }
        private void set_253_DataGrid_ClipboardCopyMode(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.ClipboardCopyMode = (global::CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode)Value;
        }
        private object get_254_DataGrid_ColumnHeaderHeight(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.ColumnHeaderHeight;
        }
        private void set_254_DataGrid_ColumnHeaderHeight(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.ColumnHeaderHeight = (global::System.Double)Value;
        }
        private object get_255_DataGrid_ColumnHeaderStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.ColumnHeaderStyle;
        }
        private void set_255_DataGrid_ColumnHeaderStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.ColumnHeaderStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_256_DataGrid_ColumnWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.ColumnWidth;
        }
        private void set_256_DataGrid_ColumnWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.ColumnWidth = (global::CommunityToolkit.WinUI.UI.Controls.DataGridLength)Value;
        }
        private object get_257_DataGrid_DataFetchSize(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.DataFetchSize;
        }
        private void set_257_DataGrid_DataFetchSize(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.DataFetchSize = (global::System.Double)Value;
        }
        private object get_258_DataGrid_DragIndicatorStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.DragIndicatorStyle;
        }
        private void set_258_DataGrid_DragIndicatorStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.DragIndicatorStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_259_DataGrid_DropLocationIndicatorStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.DropLocationIndicatorStyle;
        }
        private void set_259_DataGrid_DropLocationIndicatorStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.DropLocationIndicatorStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_260_DataGrid_FrozenColumnCount(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.FrozenColumnCount;
        }
        private void set_260_DataGrid_FrozenColumnCount(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.FrozenColumnCount = (global::System.Int32)Value;
        }
        private object get_261_DataGrid_HeadersVisibility(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.HeadersVisibility;
        }
        private void set_261_DataGrid_HeadersVisibility(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.HeadersVisibility = (global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility)Value;
        }
        private object get_262_DataGrid_HorizontalGridLinesBrush(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.HorizontalGridLinesBrush;
        }
        private void set_262_DataGrid_HorizontalGridLinesBrush(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.HorizontalGridLinesBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_263_DataGrid_HorizontalScrollBarVisibility(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.HorizontalScrollBarVisibility;
        }
        private void set_263_DataGrid_HorizontalScrollBarVisibility(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.HorizontalScrollBarVisibility = (global::Microsoft.UI.Xaml.Controls.ScrollBarVisibility)Value;
        }
        private object get_264_DataGrid_IsReadOnly(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.IsReadOnly;
        }
        private void set_264_DataGrid_IsReadOnly(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.IsReadOnly = (global::System.Boolean)Value;
        }
        private object get_265_DataGrid_IsValid(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.IsValid;
        }
        private object get_266_DataGrid_IncrementalLoadingThreshold(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.IncrementalLoadingThreshold;
        }
        private void set_266_DataGrid_IncrementalLoadingThreshold(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.IncrementalLoadingThreshold = (global::System.Double)Value;
        }
        private object get_267_DataGrid_IncrementalLoadingTrigger(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.IncrementalLoadingTrigger;
        }
        private void set_267_DataGrid_IncrementalLoadingTrigger(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.IncrementalLoadingTrigger = (global::Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger)Value;
        }
        private object get_268_DataGrid_MaxColumnWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.MaxColumnWidth;
        }
        private void set_268_DataGrid_MaxColumnWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.MaxColumnWidth = (global::System.Double)Value;
        }
        private object get_269_DataGrid_MinColumnWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.MinColumnWidth;
        }
        private void set_269_DataGrid_MinColumnWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.MinColumnWidth = (global::System.Double)Value;
        }
        private object get_270_DataGrid_RowBackground(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowBackground;
        }
        private void set_270_DataGrid_RowBackground(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowBackground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_271_DataGrid_RowDetailsTemplate(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowDetailsTemplate;
        }
        private void set_271_DataGrid_RowDetailsTemplate(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowDetailsTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_272_DataGrid_RowDetailsVisibilityMode(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowDetailsVisibilityMode;
        }
        private void set_272_DataGrid_RowDetailsVisibilityMode(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowDetailsVisibilityMode = (global::CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode)Value;
        }
        private object get_273_DataGrid_RowForeground(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowForeground;
        }
        private void set_273_DataGrid_RowForeground(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowForeground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_274_DataGrid_RowHeight(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowHeight;
        }
        private void set_274_DataGrid_RowHeight(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowHeight = (global::System.Double)Value;
        }
        private object get_275_DataGrid_RowHeaderWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowHeaderWidth;
        }
        private void set_275_DataGrid_RowHeaderWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowHeaderWidth = (global::System.Double)Value;
        }
        private object get_276_DataGrid_RowHeaderStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowHeaderStyle;
        }
        private void set_276_DataGrid_RowHeaderStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowHeaderStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_277_DataGrid_RowStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowStyle;
        }
        private void set_277_DataGrid_RowStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_278_DataGrid_SelectionMode(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.SelectionMode;
        }
        private void set_278_DataGrid_SelectionMode(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.SelectionMode = (global::CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode)Value;
        }
        private object get_279_DataGrid_SelectedIndex(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.SelectedIndex;
        }
        private void set_279_DataGrid_SelectedIndex(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.SelectedIndex = (global::System.Int32)Value;
        }
        private object get_280_DataGrid_SelectedItem(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.SelectedItem;
        }
        private void set_280_DataGrid_SelectedItem(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_281_DataGrid_VerticalGridLinesBrush(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.VerticalGridLinesBrush;
        }
        private void set_281_DataGrid_VerticalGridLinesBrush(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.VerticalGridLinesBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_282_DataGrid_VerticalScrollBarVisibility(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.VerticalScrollBarVisibility;
        }
        private void set_282_DataGrid_VerticalScrollBarVisibility(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.VerticalScrollBarVisibility = (global::Microsoft.UI.Xaml.Controls.ScrollBarVisibility)Value;
        }
        private object get_283_DataGrid_CurrentColumn(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.CurrentColumn;
        }
        private void set_283_DataGrid_CurrentColumn(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.CurrentColumn = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)Value;
        }
        private object get_284_DataGrid_RowGroupHeaderPropertyNameAlternative(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowGroupHeaderPropertyNameAlternative;
        }
        private void set_284_DataGrid_RowGroupHeaderPropertyNameAlternative(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowGroupHeaderPropertyNameAlternative = (global::System.String)Value;
        }
        private object get_285_DataGrid_RowGroupHeaderStyles(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowGroupHeaderStyles;
        }
        private object get_286_DataGrid_SelectedItems(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.SelectedItems;
        }
        private object get_287_ProgressRing_IsActive(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.IsActive;
        }
        private void set_287_ProgressRing_IsActive(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.IsActive = (global::System.Boolean)Value;
        }
        private object get_288_ProgressRing_IsIndeterminate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.IsIndeterminate;
        }
        private void set_288_ProgressRing_IsIndeterminate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.IsIndeterminate = (global::System.Boolean)Value;
        }
        private object get_289_ProgressRing_Maximum(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Maximum;
        }
        private void set_289_ProgressRing_Maximum(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Maximum = (global::System.Double)Value;
        }
        private object get_290_ProgressRing_Minimum(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Minimum;
        }
        private void set_290_ProgressRing_Minimum(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Minimum = (global::System.Double)Value;
        }
        private object get_291_ProgressRing_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.TemplateSettings;
        }
        private object get_292_ProgressRing_Value(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Value;
        }
        private void set_292_ProgressRing_Value(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Value = (global::System.Double)Value;
        }
        private object get_293_DataGridBoundColumn_Binding(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            return that.Binding;
        }
        private void set_293_DataGridBoundColumn_Binding(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            that.Binding = (global::Microsoft.UI.Xaml.Data.Binding)Value;
        }
        private object get_294_DataGridTextColumn_FontFamily(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            return that.FontFamily;
        }
        private void set_294_DataGridTextColumn_FontFamily(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            that.FontFamily = (global::Microsoft.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_295_DataGridTextColumn_FontSize(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            return that.FontSize;
        }
        private void set_295_DataGridTextColumn_FontSize(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            that.FontSize = (global::System.Double)Value;
        }
        private object get_296_DataGridTextColumn_FontStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            return that.FontStyle;
        }
        private void set_296_DataGridTextColumn_FontStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            that.FontStyle = (global::Windows.UI.Text.FontStyle)Value;
        }
        private object get_297_DataGridTextColumn_FontWeight(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            return that.FontWeight;
        }
        private void set_297_DataGridTextColumn_FontWeight(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            that.FontWeight = (global::Windows.UI.Text.FontWeight)Value;
        }
        private object get_298_DataGridTextColumn_Foreground(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            return that.Foreground;
        }
        private void set_298_DataGridTextColumn_Foreground(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            that.Foreground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_299_DataGridBoundColumn_ClipboardContentBinding(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            return that.ClipboardContentBinding;
        }
        private void set_299_DataGridBoundColumn_ClipboardContentBinding(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            that.ClipboardContentBinding = (global::Microsoft.UI.Xaml.Data.Binding)Value;
        }
        private object get_300_DataGridBoundColumn_EditingElementStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            return that.EditingElementStyle;
        }
        private void set_300_DataGridBoundColumn_EditingElementStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            that.EditingElementStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_301_DataGridBoundColumn_ElementStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            return that.ElementStyle;
        }
        private void set_301_DataGridBoundColumn_ElementStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            that.ElementStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_302_LoadSqlDataGridPage_ViewModel(object instance)
        {
            var that = (global::AppFirst.Views.Pages.LoadSqlDataGridPage)instance;
            return that.ViewModel;
        }
        private object get_303_LoadSqlDataPage_ViewModel(object instance)
        {
            var that = (global::AppFirst.Views.Pages.LoadSqlDataPage)instance;
            return that.ViewModel;
        }
        private object get_304_MenuBar_Items(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.MenuBar)instance;
            return that.Items;
        }
        private object get_305_MenuBarItem_Items(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.MenuBarItem)instance;
            return that.Items;
        }
        private object get_306_MenuBarItem_Title(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.MenuBarItem)instance;
            return that.Title;
        }
        private void set_306_MenuBarItem_Title(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.MenuBarItem)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_307_LoadSqlDataSqlitePage_ViewModel(object instance)
        {
            var that = (global::AppFirst.Views.Pages.LoadSqlDataSqlitePage)instance;
            return that.ViewModel;
        }
        private object get_308_SamplePage_ViewModel(object instance)
        {
            var that = (global::AppFirst.Views.Pages.SamplePage)instance;
            return that.ViewModel;
        }
        private object get_309_Sample1Page_ViewModel(object instance)
        {
            var that = (global::AppFirst.Views.Sample1Page)instance;
            return that.ViewModel;
        }
        private object get_310_ScrollView_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.Content;
        }
        private void set_310_ScrollView_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.Content = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_311_ScrollView_VerticalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollBarVisibility;
        }
        private void set_311_ScrollView_VerticalScrollBarVisibility(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollBarVisibility = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility)Value;
        }
        private object get_312_ScrollView_ComputedHorizontalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedHorizontalScrollBarVisibility;
        }
        private object get_313_ScrollView_ComputedHorizontalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedHorizontalScrollMode;
        }
        private object get_314_ScrollView_ComputedVerticalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedVerticalScrollBarVisibility;
        }
        private object get_315_ScrollView_ComputedVerticalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedVerticalScrollMode;
        }
        private object get_316_ScrollView_ContentOrientation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ContentOrientation;
        }
        private void set_316_ScrollView_ContentOrientation(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.ContentOrientation = (global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation)Value;
        }
        private object get_317_ScrollView_CurrentAnchor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.CurrentAnchor;
        }
        private object get_318_ScrollView_ExpressionAnimationSources(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ExpressionAnimationSources;
        }
        private object get_319_ScrollView_ExtentHeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ExtentHeight;
        }
        private object get_320_ScrollView_ExtentWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ExtentWidth;
        }
        private object get_321_ScrollView_HorizontalAnchorRatio(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalAnchorRatio;
        }
        private void set_321_ScrollView_HorizontalAnchorRatio(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalAnchorRatio = (global::System.Double)Value;
        }
        private object get_322_ScrollView_HorizontalOffset(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalOffset;
        }
        private object get_323_ScrollView_HorizontalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollBarVisibility;
        }
        private void set_323_ScrollView_HorizontalScrollBarVisibility(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollBarVisibility = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility)Value;
        }
        private object get_324_ScrollView_HorizontalScrollChainMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollChainMode;
        }
        private void set_324_ScrollView_HorizontalScrollChainMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollChainMode = (global::Microsoft.UI.Xaml.Controls.ScrollingChainMode)Value;
        }
        private object get_325_ScrollView_HorizontalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollMode;
        }
        private void set_325_ScrollView_HorizontalScrollMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollMode = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode)Value;
        }
        private object get_326_ScrollView_HorizontalScrollRailMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollRailMode;
        }
        private void set_326_ScrollView_HorizontalScrollRailMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollRailMode = (global::Microsoft.UI.Xaml.Controls.ScrollingRailMode)Value;
        }
        private object get_327_ScrollView_IgnoredInputKinds(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.IgnoredInputKinds;
        }
        private void set_327_ScrollView_IgnoredInputKinds(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.IgnoredInputKinds = (global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds)Value;
        }
        private object get_328_ScrollView_MaxZoomFactor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.MaxZoomFactor;
        }
        private void set_328_ScrollView_MaxZoomFactor(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.MaxZoomFactor = (global::System.Double)Value;
        }
        private object get_329_ScrollView_MinZoomFactor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.MinZoomFactor;
        }
        private void set_329_ScrollView_MinZoomFactor(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.MinZoomFactor = (global::System.Double)Value;
        }
        private object get_330_ScrollView_ScrollPresenter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ScrollPresenter;
        }
        private object get_331_ScrollPresenter_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter)instance;
            return that.Content;
        }
        private void set_331_ScrollPresenter_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter)instance;
            that.Content = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_332_ScrollView_ScrollableHeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ScrollableHeight;
        }
        private object get_333_ScrollView_ScrollableWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ScrollableWidth;
        }
        private object get_334_ScrollView_State(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.State;
        }
        private object get_335_ScrollView_VerticalAnchorRatio(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalAnchorRatio;
        }
        private void set_335_ScrollView_VerticalAnchorRatio(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalAnchorRatio = (global::System.Double)Value;
        }
        private object get_336_ScrollView_VerticalOffset(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalOffset;
        }
        private object get_337_ScrollView_VerticalScrollChainMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollChainMode;
        }
        private void set_337_ScrollView_VerticalScrollChainMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollChainMode = (global::Microsoft.UI.Xaml.Controls.ScrollingChainMode)Value;
        }
        private object get_338_ScrollView_VerticalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollMode;
        }
        private void set_338_ScrollView_VerticalScrollMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollMode = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode)Value;
        }
        private object get_339_ScrollView_VerticalScrollRailMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollRailMode;
        }
        private void set_339_ScrollView_VerticalScrollRailMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollRailMode = (global::Microsoft.UI.Xaml.Controls.ScrollingRailMode)Value;
        }
        private object get_340_ScrollView_ViewportHeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ViewportHeight;
        }
        private object get_341_ScrollView_ViewportWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ViewportWidth;
        }
        private object get_342_ScrollView_ZoomChainMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ZoomChainMode;
        }
        private void set_342_ScrollView_ZoomChainMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.ZoomChainMode = (global::Microsoft.UI.Xaml.Controls.ScrollingChainMode)Value;
        }
        private object get_343_ScrollView_ZoomFactor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ZoomFactor;
        }
        private object get_344_ScrollView_ZoomMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ZoomMode;
        }
        private void set_344_ScrollView_ZoomMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.ZoomMode = (global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode)Value;
        }
        private object get_345_PanelAttach_ChildrenTransitions(object instance)
        {
            return global::WinUICommunity.PanelAttach.GetChildrenTransitions((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_345_PanelAttach_ChildrenTransitions(object instance, object Value)
        {
            global::WinUICommunity.PanelAttach.SetChildrenTransitions((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::WinUICommunity.PanelTransitionCollection)Value);
        }
        private object get_346_SettingsNavigationAttach_JsonNavigationViewService(object instance)
        {
            return global::WinUICommunity.SettingsNavigationAttach.GetJsonNavigationViewService((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_346_SettingsNavigationAttach_JsonNavigationViewService(object instance, object Value)
        {
            global::WinUICommunity.SettingsNavigationAttach.SetJsonNavigationViewService((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::WinUICommunity.IJsonNavigationViewService)Value);
        }
        private object get_347_SettingsNavigationAttach_SlideNavigationTransitionInfo(object instance)
        {
            return global::WinUICommunity.SettingsNavigationAttach.GetSlideNavigationTransitionInfo((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_347_SettingsNavigationAttach_SlideNavigationTransitionInfo(object instance, object Value)
        {
            global::WinUICommunity.SettingsNavigationAttach.SetSlideNavigationTransitionInfo((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo)Value);
        }
        private object get_348_SettingsCard_Description(object instance)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            return that.Description;
        }
        private void set_348_SettingsCard_Description(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            that.Description = (global::System.Object)Value;
        }
        private object get_349_SettingsCard_Header(object instance)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            return that.Header;
        }
        private void set_349_SettingsCard_Header(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_350_SettingsCard_HeaderIcon(object instance)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            return that.HeaderIcon;
        }
        private void set_350_SettingsCard_HeaderIcon(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            that.HeaderIcon = (global::Microsoft.UI.Xaml.Controls.IconElement)Value;
        }
        private object get_351_SettingsCard_IsClickEnabled(object instance)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            return that.IsClickEnabled;
        }
        private void set_351_SettingsCard_IsClickEnabled(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            that.IsClickEnabled = (global::System.Boolean)Value;
        }
        private object get_352_SettingsCard_LaunchUri(object instance)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            return that.LaunchUri;
        }
        private void set_352_SettingsCard_LaunchUri(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            that.LaunchUri = (global::System.String)Value;
        }
        private object get_353_SettingsCard_ActionIcon(object instance)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            return that.ActionIcon;
        }
        private void set_353_SettingsCard_ActionIcon(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            that.ActionIcon = (global::Microsoft.UI.Xaml.Controls.IconElement)Value;
        }
        private object get_354_SettingsCard_ActionIconToolTip(object instance)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            return that.ActionIconToolTip;
        }
        private void set_354_SettingsCard_ActionIconToolTip(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            that.ActionIconToolTip = (global::System.String)Value;
        }
        private object get_355_SettingsCard_ContentAlignment(object instance)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            return that.ContentAlignment;
        }
        private void set_355_SettingsCard_ContentAlignment(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            that.ContentAlignment = (global::WinUICommunity.ContentAlignment)Value;
        }
        private object get_356_SettingsCard_IsActionIconVisible(object instance)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            return that.IsActionIconVisible;
        }
        private void set_356_SettingsCard_IsActionIconVisible(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            that.IsActionIconVisible = (global::System.Boolean)Value;
        }
        private object get_357_NavigationHelperEx_NavigateToSetting(object instance)
        {
            return global::WinUICommunity.NavigationHelperEx.GetNavigateToSetting((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_357_NavigationHelperEx_NavigateToSetting(object instance, object Value)
        {
            global::WinUICommunity.NavigationHelperEx.SetNavigateToSetting((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::System.Type)Value);
        }
        private object get_358_NavigationHelperEx_NavigateTo(object instance)
        {
            return global::WinUICommunity.NavigationHelperEx.GetNavigateTo((global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance);
        }
        private void set_358_NavigationHelperEx_NavigateTo(object instance, object Value)
        {
            global::WinUICommunity.NavigationHelperEx.SetNavigateTo((global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance, (global::System.String)Value);
        }
        private object get_359_NavigationViewItem_CompactPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.CompactPaneLength;
        }
        private object get_360_NavigationViewItem_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_360_NavigationViewItem_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_361_NavigationViewItem_Icon(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.Icon;
        }
        private void set_361_NavigationViewItem_Icon(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.Icon = (global::Microsoft.UI.Xaml.Controls.IconElement)Value;
        }
        private object get_362_NavigationViewItem_InfoBadge(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.InfoBadge;
        }
        private void set_362_NavigationViewItem_InfoBadge(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.InfoBadge = (global::Microsoft.UI.Xaml.Controls.InfoBadge)Value;
        }
        private object get_363_NavigationViewItem_IsChildSelected(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.IsChildSelected;
        }
        private void set_363_NavigationViewItem_IsChildSelected(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.IsChildSelected = (global::System.Boolean)Value;
        }
        private object get_364_NavigationViewItem_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.IsExpanded;
        }
        private void set_364_NavigationViewItem_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_365_NavigationViewItem_MenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.MenuItems;
        }
        private object get_366_NavigationViewItem_MenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.MenuItemsSource;
        }
        private void set_366_NavigationViewItem_MenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.MenuItemsSource = (global::System.Object)Value;
        }
        private object get_367_NavigationViewItem_SelectsOnInvoked(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.SelectsOnInvoked;
        }
        private void set_367_NavigationViewItem_SelectsOnInvoked(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.SelectsOnInvoked = (global::System.Boolean)Value;
        }
        private object get_368_NavigationViewItemBase_IsSelected(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase)instance;
            return that.IsSelected;
        }
        private void set_368_NavigationViewItemBase_IsSelected(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase)instance;
            that.IsSelected = (global::System.Boolean)Value;
        }
        private object get_369_NavigationHelperEx_Parent(object instance)
        {
            return global::WinUICommunity.NavigationHelperEx.GetParent((global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance);
        }
        private void set_369_NavigationHelperEx_Parent(object instance, object Value)
        {
            global::WinUICommunity.NavigationHelperEx.SetParent((global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance, (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)Value);
        }
        private object get_370_GeneralSettingPage_ViewModel(object instance)
        {
            var that = (global::AppFirst.Views.GeneralSettingPage)instance;
            return that.ViewModel;
        }
        private object get_371_AppUpdateSettingPage_ViewModel(object instance)
        {
            var that = (global::AppFirst.Views.AppUpdateSettingPage)instance;
            return that.ViewModel;
        }
        private object get_372_AboutUsSettingPage_ViewModel(object instance)
        {
            var that = (global::AppFirst.Views.AboutUsSettingPage)instance;
            return that.ViewModel;
        }
        private object get_373_BitmapIconExtension_Source(object instance)
        {
            var that = (global::WinUICommunity.BitmapIconExtension)instance;
            return that.Source;
        }
        private void set_373_BitmapIconExtension_Source(object instance, object Value)
        {
            var that = (global::WinUICommunity.BitmapIconExtension)instance;
            that.Source = (global::System.Uri)Value;
        }
        private object get_374_BitmapIconExtension_ShowAsMonochrome(object instance)
        {
            var that = (global::WinUICommunity.BitmapIconExtension)instance;
            return that.ShowAsMonochrome;
        }
        private void set_374_BitmapIconExtension_ShowAsMonochrome(object instance, object Value)
        {
            var that = (global::WinUICommunity.BitmapIconExtension)instance;
            that.ShowAsMonochrome = (global::System.Boolean)Value;
        }
        private object get_375_SettingsExpander_Content(object instance)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            return that.Content;
        }
        private void set_375_SettingsExpander_Content(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_376_SettingsExpander_Description(object instance)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            return that.Description;
        }
        private void set_376_SettingsExpander_Description(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            that.Description = (global::System.Object)Value;
        }
        private object get_377_SettingsExpander_Header(object instance)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            return that.Header;
        }
        private void set_377_SettingsExpander_Header(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_378_SettingsExpander_HeaderIcon(object instance)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            return that.HeaderIcon;
        }
        private void set_378_SettingsExpander_HeaderIcon(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            that.HeaderIcon = (global::Microsoft.UI.Xaml.Controls.IconElement)Value;
        }
        private object get_379_SettingsExpander_IsExpanded(object instance)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            return that.IsExpanded;
        }
        private void set_379_SettingsExpander_IsExpanded(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_380_SettingsExpander_Items(object instance)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            return that.Items;
        }
        private void set_380_SettingsExpander_Items(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            that.Items = (global::System.Collections.Generic.IList<global::System.Object>)Value;
        }
        private object get_381_SettingsExpander_ItemsSource(object instance)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            return that.ItemsSource;
        }
        private void set_381_SettingsExpander_ItemsSource(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_382_SettingsExpander_ItemTemplate(object instance)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            return that.ItemTemplate;
        }
        private void set_382_SettingsExpander_ItemTemplate(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            that.ItemTemplate = (global::System.Object)Value;
        }
        private object get_383_SettingsExpander_ItemContainerStyleSelector(object instance)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            return that.ItemContainerStyleSelector;
        }
        private void set_383_SettingsExpander_ItemContainerStyleSelector(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            that.ItemContainerStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_384_SettingsExpander_ItemsHeader(object instance)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            return that.ItemsHeader;
        }
        private void set_384_SettingsExpander_ItemsHeader(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            that.ItemsHeader = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_385_SettingsExpander_ItemsFooter(object instance)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            return that.ItemsFooter;
        }
        private void set_385_SettingsExpander_ItemsFooter(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            that.ItemsFooter = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_386_ThemeServiceAttach_ThemeService(object instance)
        {
            return global::WinUICommunity.ThemeServiceAttach.GetThemeService((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_386_ThemeServiceAttach_ThemeService(object instance, object Value)
        {
            global::WinUICommunity.ThemeServiceAttach.SetThemeService((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::WinUICommunity.IThemeService)Value);
        }
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_387_SplashScreen_Backdrop(object instance)
        {
            var that = (global::WinUIEx.SplashScreen)instance;
            return that.Backdrop;
        }
        private void set_387_SplashScreen_Backdrop(object instance, object Value)
        {
            var that = (global::WinUIEx.SplashScreen)instance;
            that.Backdrop = (global::WinUIEx.SystemBackdrop)Value;
        }
#pragma warning restore 0618
        private object get_388_SplashScreen_Width(object instance)
        {
            var that = (global::WinUIEx.SplashScreen)instance;
            return that.Width;
        }
        private void set_388_SplashScreen_Width(object instance, object Value)
        {
            var that = (global::WinUIEx.SplashScreen)instance;
            that.Width = (global::System.Double)Value;
        }
        private object get_389_SplashScreen_Height(object instance)
        {
            var that = (global::WinUIEx.SplashScreen)instance;
            return that.Height;
        }
        private void set_389_SplashScreen_Height(object instance, object Value)
        {
            var that = (global::WinUIEx.SplashScreen)instance;
            that.Height = (global::System.Double)Value;
        }
        private object get_390_SplashScreen_IsAlwaysOnTop(object instance)
        {
            var that = (global::WinUIEx.SplashScreen)instance;
            return that.IsAlwaysOnTop;
        }
        private void set_390_SplashScreen_IsAlwaysOnTop(object instance, object Value)
        {
            var that = (global::WinUIEx.SplashScreen)instance;
            that.IsAlwaysOnTop = (global::System.Boolean)Value;
        }
        private object get_391_TreeViewNode_Children(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Children;
        }
        private object get_392_TreeViewNode_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Content;
        }
        private void set_392_TreeViewNode_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_393_TreeViewNode_Depth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Depth;
        }
        private object get_394_TreeViewNode_HasChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasChildren;
        }
        private object get_395_TreeViewNode_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_395_TreeViewNode_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_396_TreeViewNode_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.IsExpanded;
        }
        private void set_396_TreeViewNode_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_397_TreeViewNode_Parent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Parent;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::AppFirst.AppFirst_XamlTypeInfo.XamlMember xamlMember = null;
            global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Microsoft.UI.Xaml.Controls.XamlControlsResources.UseCompactResources":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.XamlControlsResources");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "UseCompactResources", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_XamlControlsResources_UseCompactResources;
                xamlMember.Setter = set_0_XamlControlsResources_UseCompactResources;
                break;
            case "Microsoft.UI.Xaml.Thickness.Left":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Left", "Double");
                xamlMember.Getter = get_1_Thickness_Left;
                xamlMember.Setter = set_1_Thickness_Left;
                break;
            case "Microsoft.UI.Xaml.Thickness.Top":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Top", "Double");
                xamlMember.Getter = get_2_Thickness_Top;
                xamlMember.Setter = set_2_Thickness_Top;
                break;
            case "Microsoft.UI.Xaml.Thickness.Right":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Right", "Double");
                xamlMember.Getter = get_3_Thickness_Right;
                xamlMember.Setter = set_3_Thickness_Right;
                break;
            case "Microsoft.UI.Xaml.Thickness.Bottom":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Bottom", "Double");
                xamlMember.Getter = get_4_Thickness_Bottom;
                xamlMember.Setter = set_4_Thickness_Bottom;
                break;
            case "AppFirst.Views.Dialogs.LoginDialog.ViewModel":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppFirst.Views.Dialogs.LoginDialog");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ViewModel", "AppFirst.ViewModels.Dialogs.LoginDialogViewModel");
                xamlMember.Getter = get_5_LoginDialog_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.Content":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_InfoBar_Content;
                xamlMember.Setter = set_6_InfoBar_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.IsClosable":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsClosable", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_InfoBar_IsClosable;
                xamlMember.Setter = set_7_InfoBar_IsClosable;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.IsOpen":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_InfoBar_IsOpen;
                xamlMember.Setter = set_8_InfoBar_IsOpen;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.Severity":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Severity", "Microsoft.UI.Xaml.Controls.InfoBarSeverity");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_InfoBar_Severity;
                xamlMember.Setter = set_9_InfoBar_Severity;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.ActionButton":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ActionButton", "Microsoft.UI.Xaml.Controls.Primitives.ButtonBase");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_InfoBar_ActionButton;
                xamlMember.Setter = set_10_InfoBar_ActionButton;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.CloseButtonCommand":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "CloseButtonCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_InfoBar_CloseButtonCommand;
                xamlMember.Setter = set_11_InfoBar_CloseButtonCommand;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.CloseButtonCommandParameter":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "CloseButtonCommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_InfoBar_CloseButtonCommandParameter;
                xamlMember.Setter = set_12_InfoBar_CloseButtonCommandParameter;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.CloseButtonStyle":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "CloseButtonStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_InfoBar_CloseButtonStyle;
                xamlMember.Setter = set_13_InfoBar_CloseButtonStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.ContentTemplate":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ContentTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_InfoBar_ContentTemplate;
                xamlMember.Setter = set_14_InfoBar_ContentTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.IconSource":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IconSource", "Microsoft.UI.Xaml.Controls.IconSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_InfoBar_IconSource;
                xamlMember.Setter = set_15_InfoBar_IconSource;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.IsIconVisible":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsIconVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_InfoBar_IsIconVisible;
                xamlMember.Setter = set_16_InfoBar_IsIconVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.Message":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Message", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_InfoBar_Message;
                xamlMember.Setter = set_17_InfoBar_Message;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.TemplateSettings":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_InfoBar_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.Title":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_InfoBar_Title;
                xamlMember.Setter = set_19_InfoBar_Title;
                break;
            case "WinUIEx.WindowEx.WindowContent":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "WindowContent", "Object");
                xamlMember.Getter = get_20_WindowEx_WindowContent;
                xamlMember.Setter = set_20_WindowEx_WindowContent;
                break;
            case "WinUIEx.WindowEx.Width":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Width", "Double");
                xamlMember.Getter = get_21_WindowEx_Width;
                xamlMember.Setter = set_21_WindowEx_Width;
                break;
            case "WinUIEx.WindowEx.Height":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Height", "Double");
                xamlMember.Getter = get_22_WindowEx_Height;
                xamlMember.Setter = set_22_WindowEx_Height;
                break;
            case "WinUIEx.WindowEx.MinWidth":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "MinWidth", "Double");
                xamlMember.Getter = get_23_WindowEx_MinWidth;
                xamlMember.Setter = set_23_WindowEx_MinWidth;
                break;
            case "WinUIEx.WindowEx.MinHeight":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "MinHeight", "Double");
                xamlMember.Getter = get_24_WindowEx_MinHeight;
                xamlMember.Setter = set_24_WindowEx_MinHeight;
                break;
            case "WinUIEx.WindowEx.MaxWidth":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "MaxWidth", "Double");
                xamlMember.Getter = get_25_WindowEx_MaxWidth;
                xamlMember.Setter = set_25_WindowEx_MaxWidth;
                break;
            case "WinUIEx.WindowEx.MaxHeight":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "MaxHeight", "Double");
                xamlMember.Getter = get_26_WindowEx_MaxHeight;
                xamlMember.Setter = set_26_WindowEx_MaxHeight;
                break;
            case "WinUIEx.WindowEx.PersistenceId":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "PersistenceId", "String");
                xamlMember.Getter = get_27_WindowEx_PersistenceId;
                xamlMember.Setter = set_27_WindowEx_PersistenceId;
                break;
            case "WinUIEx.WindowEx.Title":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_28_WindowEx_Title;
                xamlMember.Setter = set_28_WindowEx_Title;
                break;
            case "WinUIEx.WindowEx.IsResizable":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsResizable", "Boolean");
                xamlMember.Getter = get_29_WindowEx_IsResizable;
                xamlMember.Setter = set_29_WindowEx_IsResizable;
                break;
            case "WinUIEx.WindowEx.IsAlwaysOnTop":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsAlwaysOnTop", "Boolean");
                xamlMember.Getter = get_30_WindowEx_IsAlwaysOnTop;
                xamlMember.Setter = set_30_WindowEx_IsAlwaysOnTop;
                break;
            case "WinUIEx.WindowEx.IsTitleBarVisible":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsTitleBarVisible", "Boolean");
                xamlMember.Getter = get_31_WindowEx_IsTitleBarVisible;
                xamlMember.Setter = set_31_WindowEx_IsTitleBarVisible;
                break;
            case "WinUIEx.WindowEx.AppWindow":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "AppWindow", "Microsoft.UI.Windowing.AppWindow");
                xamlMember.Getter = get_32_WindowEx_AppWindow;
                xamlMember.SetIsReadOnly();
                break;
            case "WinUIEx.WindowEx.TaskBarIcon":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "TaskBarIcon", "WinUIEx.Icon");
                xamlMember.Getter = get_33_WindowEx_TaskBarIcon;
                xamlMember.Setter = set_33_WindowEx_TaskBarIcon;
                break;
            case "WinUIEx.WindowEx.IsMinimizable":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsMinimizable", "Boolean");
                xamlMember.Getter = get_34_WindowEx_IsMinimizable;
                xamlMember.Setter = set_34_WindowEx_IsMinimizable;
                break;
            case "WinUIEx.WindowEx.IsMaximizable":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsMaximizable", "Boolean");
                xamlMember.Getter = get_35_WindowEx_IsMaximizable;
                xamlMember.Setter = set_35_WindowEx_IsMaximizable;
                break;
            case "WinUIEx.WindowEx.WindowState":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "WindowState", "WinUIEx.WindowState");
                xamlMember.Getter = get_36_WindowEx_WindowState;
                xamlMember.Setter = set_36_WindowEx_WindowState;
                break;
            case "WinUIEx.WindowEx.IsShownInSwitchers":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsShownInSwitchers", "Boolean");
                xamlMember.Getter = get_37_WindowEx_IsShownInSwitchers;
                xamlMember.Setter = set_37_WindowEx_IsShownInSwitchers;
                break;
            case "WinUIEx.WindowEx.Presenter":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Presenter", "Microsoft.UI.Windowing.AppWindowPresenter");
                xamlMember.Getter = get_38_WindowEx_Presenter;
                xamlMember.SetIsReadOnly();
                break;
            case "WinUIEx.WindowEx.PresenterKind":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "PresenterKind", "Microsoft.UI.Windowing.AppWindowPresenterKind");
                xamlMember.Getter = get_39_WindowEx_PresenterKind;
                xamlMember.Setter = set_39_WindowEx_PresenterKind;
                break;
            case "WinUIEx.WindowEx.Backdrop":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Backdrop", "WinUIEx.SystemBackdrop");
                xamlMember.Getter = get_40_WindowEx_Backdrop;
                xamlMember.Setter = set_40_WindowEx_Backdrop;
                break;
            case "Microsoft.UI.Xaml.Media.MicaBackdrop.Kind":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Media.MicaBackdrop");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Kind", "Microsoft.UI.Composition.SystemBackdrops.MicaKind");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_MicaBackdrop_Kind;
                xamlMember.Setter = set_41_MicaBackdrop_Kind;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.IsIndeterminate":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsIndeterminate", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_42_ProgressBar_IsIndeterminate;
                xamlMember.Setter = set_42_ProgressBar_IsIndeterminate;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.ShowError":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ShowError", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_43_ProgressBar_ShowError;
                xamlMember.Setter = set_43_ProgressBar_ShowError;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.ShowPaused":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ShowPaused", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_44_ProgressBar_ShowPaused;
                xamlMember.Setter = set_44_ProgressBar_ShowPaused;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.TemplateSettings":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings");
                xamlMember.Getter = get_45_ProgressBar_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "AppFirst.Views.Dialogs.SqlConnectionStringDialog.ViewModel":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppFirst.Views.Dialogs.SqlConnectionStringDialog");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ViewModel", "AppFirst.ViewModels.Dialogs.SqlConnectionStringDialogViewModel");
                xamlMember.Getter = get_46_SqlConnectionStringDialog_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppFirst.Views.Dialogs.UserDialog.ResultUser":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppFirst.Views.Dialogs.UserDialog");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ResultUser", "AppFirst.Models.User");
                xamlMember.Getter = get_47_UserDialog_ResultUser;
                xamlMember.Setter = set_47_UserDialog_ResultUser;
                break;
            case "AppFirst.Views.Dialogs.UserDialog.ViewModel":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppFirst.Views.Dialogs.UserDialog");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ViewModel", "AppFirst.ViewModels.Dialogs.UserDialogViewModel");
                xamlMember.Getter = get_48_UserDialog_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "WinUICommunity.ItemsPageBase.HeaderImage":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HeaderImage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_49_ItemsPageBase_HeaderImage;
                xamlMember.Setter = set_49_ItemsPageBase_HeaderImage;
                break;
            case "WinUICommunity.ItemsPageBase.HeaderOverlayImage":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HeaderOverlayImage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_50_ItemsPageBase_HeaderOverlayImage;
                xamlMember.Setter = set_50_ItemsPageBase_HeaderOverlayImage;
                break;
            case "WinUICommunity.ItemsPageBase.HeaderSubtitleText":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HeaderSubtitleText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_51_ItemsPageBase_HeaderSubtitleText;
                xamlMember.Setter = set_51_ItemsPageBase_HeaderSubtitleText;
                break;
            case "WinUICommunity.ItemsPageBase.HeaderText":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HeaderText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_ItemsPageBase_HeaderText;
                xamlMember.Setter = set_52_ItemsPageBase_HeaderText;
                break;
            case "WinUICommunity.ItemsPageBase.JsonNavigationViewService":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "JsonNavigationViewService", "WinUICommunity.IJsonNavigationViewService");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_ItemsPageBase_JsonNavigationViewService;
                xamlMember.Setter = set_53_ItemsPageBase_JsonNavigationViewService;
                break;
            case "WinUICommunity.AllLandingPage.UseFullScreenHeaderImage":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.AllLandingPage");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "UseFullScreenHeaderImage", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_54_AllLandingPage_UseFullScreenHeaderImage;
                xamlMember.Setter = set_54_AllLandingPage_UseFullScreenHeaderImage;
                break;
            case "WinUICommunity.ItemsPageBase.CanExecuteInternalCommand":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "CanExecuteInternalCommand", "Boolean");
                xamlMember.Getter = get_55_ItemsPageBase_CanExecuteInternalCommand;
                xamlMember.Setter = set_55_ItemsPageBase_CanExecuteInternalCommand;
                break;
            case "WinUICommunity.ItemsPageBase.Items":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Items", "System.Collections.Generic.IEnumerable`1<WinUICommunity.DataItem>");
                xamlMember.Getter = get_56_ItemsPageBase_Items;
                xamlMember.Setter = set_56_ItemsPageBase_Items;
                break;
            case "WinUICommunity.ItemsPageBase.PlaceholderSource":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "PlaceholderSource", "Microsoft.UI.Xaml.Media.ImageSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_ItemsPageBase_PlaceholderSource;
                xamlMember.Setter = set_57_ItemsPageBase_PlaceholderSource;
                break;
            case "WinUICommunity.ItemsPageBase.IsCacheEnabled":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsCacheEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_58_ItemsPageBase_IsCacheEnabled;
                xamlMember.Setter = set_58_ItemsPageBase_IsCacheEnabled;
                break;
            case "WinUICommunity.ItemsPageBase.EnableLazyLoading":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "EnableLazyLoading", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_59_ItemsPageBase_EnableLazyLoading;
                xamlMember.Setter = set_59_ItemsPageBase_EnableLazyLoading;
                break;
            case "WinUICommunity.ItemsPageBase.LazyLoadingThreshold":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "LazyLoadingThreshold", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_60_ItemsPageBase_LazyLoadingThreshold;
                xamlMember.Setter = set_60_ItemsPageBase_LazyLoadingThreshold;
                break;
            case "WinUICommunity.ItemsPageBase.SpaceBetweenHeaderAndGridView":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "SpaceBetweenHeaderAndGridView", "Microsoft.UI.Xaml.GridLength");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_61_ItemsPageBase_SpaceBetweenHeaderAndGridView;
                xamlMember.Setter = set_61_ItemsPageBase_SpaceBetweenHeaderAndGridView;
                break;
            case "WinUICommunity.ItemsPageBase.Stretch":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Stretch", "Microsoft.UI.Xaml.Media.Stretch");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_62_ItemsPageBase_Stretch;
                xamlMember.Setter = set_62_ItemsPageBase_Stretch;
                break;
            case "WinUICommunity.ItemsPageBase.NormalizedCenterPoint":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "NormalizedCenterPoint", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_63_ItemsPageBase_NormalizedCenterPoint;
                xamlMember.Setter = set_63_ItemsPageBase_NormalizedCenterPoint;
                break;
            case "WinUICommunity.ItemsPageBase.OverlayOpacity":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "OverlayOpacity", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_64_ItemsPageBase_OverlayOpacity;
                xamlMember.Setter = set_64_ItemsPageBase_OverlayOpacity;
                break;
            case "WinUICommunity.ItemsPageBase.HeaderVerticalAlignment":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HeaderVerticalAlignment", "Microsoft.UI.Xaml.VerticalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_65_ItemsPageBase_HeaderVerticalAlignment;
                xamlMember.Setter = set_65_ItemsPageBase_HeaderVerticalAlignment;
                break;
            case "WinUICommunity.ItemsPageBase.HeaderCornerRadius":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HeaderCornerRadius", "Microsoft.UI.Xaml.CornerRadius");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_ItemsPageBase_HeaderCornerRadius;
                xamlMember.Setter = set_66_ItemsPageBase_HeaderCornerRadius;
                break;
            case "WinUICommunity.ItemsPageBase.HeaderContentMargin":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HeaderContentMargin", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_67_ItemsPageBase_HeaderContentMargin;
                xamlMember.Setter = set_67_ItemsPageBase_HeaderContentMargin;
                break;
            case "WinUICommunity.ItemsPageBase.HeaderSubtitleFontSize":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HeaderSubtitleFontSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_68_ItemsPageBase_HeaderSubtitleFontSize;
                xamlMember.Setter = set_68_ItemsPageBase_HeaderSubtitleFontSize;
                break;
            case "WinUICommunity.ItemsPageBase.GridViewPadding":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "GridViewPadding", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_69_ItemsPageBase_GridViewPadding;
                xamlMember.Setter = set_69_ItemsPageBase_GridViewPadding;
                break;
            case "WinUICommunity.ItemsPageBase.GridViewVerticalAlignment":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "GridViewVerticalAlignment", "Microsoft.UI.Xaml.VerticalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_70_ItemsPageBase_GridViewVerticalAlignment;
                xamlMember.Setter = set_70_ItemsPageBase_GridViewVerticalAlignment;
                break;
            case "WinUICommunity.ItemsPageBase.HeaderFontSize":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HeaderFontSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_71_ItemsPageBase_HeaderFontSize;
                xamlMember.Setter = set_71_ItemsPageBase_HeaderFontSize;
                break;
            case "WinUICommunity.TitleBar.Title":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TitleBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_72_TitleBar_Title;
                xamlMember.Setter = set_72_TitleBar_Title;
                break;
            case "WinUICommunity.TitleBar.IconSource":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TitleBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IconSource", "Microsoft.UI.Xaml.Controls.IconSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_73_TitleBar_IconSource;
                xamlMember.Setter = set_73_TitleBar_IconSource;
                break;
            case "WinUICommunity.TitleBar.IsBackButtonVisible":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TitleBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsBackButtonVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_74_TitleBar_IsBackButtonVisible;
                xamlMember.Setter = set_74_TitleBar_IsBackButtonVisible;
                break;
            case "WinUICommunity.TitleBar.IsPaneToggleButtonVisible":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TitleBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsPaneToggleButtonVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_75_TitleBar_IsPaneToggleButtonVisible;
                xamlMember.Setter = set_75_TitleBar_IsPaneToggleButtonVisible;
                break;
            case "WinUICommunity.TitleBar.Subtitle":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TitleBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Subtitle", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_76_TitleBar_Subtitle;
                xamlMember.Setter = set_76_TitleBar_Subtitle;
                break;
            case "WinUICommunity.TitleBar.Content":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TitleBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_77_TitleBar_Content;
                xamlMember.Setter = set_77_TitleBar_Content;
                break;
            case "WinUICommunity.TitleBar.Footer":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TitleBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Footer", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_78_TitleBar_Footer;
                xamlMember.Setter = set_78_TitleBar_Footer;
                break;
            case "WinUICommunity.TitleBar.Header":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TitleBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_79_TitleBar_Header;
                xamlMember.Setter = set_79_TitleBar_Header;
                break;
            case "WinUICommunity.TitleBar.IsBackEnabled":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TitleBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsBackEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_80_TitleBar_IsBackEnabled;
                xamlMember.Setter = set_80_TitleBar_IsBackEnabled;
                break;
            case "WinUICommunity.TitleBar.TemplateSettings":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TitleBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "TemplateSettings", "WinUICommunity.TitleBarTemplateSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_81_TitleBar_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsBackButtonVisible":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsBackButtonVisible", "Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_82_NavigationView_IsBackButtonVisible;
                xamlMember.Setter = set_82_NavigationView_IsBackButtonVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneToggleButtonVisible":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsPaneToggleButtonVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_83_NavigationView_IsPaneToggleButtonVisible;
                xamlMember.Setter = set_83_NavigationView_IsPaneToggleButtonVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.Header":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_NavigationView_Header;
                xamlMember.Setter = set_84_NavigationView_Header;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.AlwaysShowHeader":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "AlwaysShowHeader", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_85_NavigationView_AlwaysShowHeader;
                xamlMember.Setter = set_85_NavigationView_AlwaysShowHeader;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.AutoSuggestBox":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "AutoSuggestBox", "Microsoft.UI.Xaml.Controls.AutoSuggestBox");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_86_NavigationView_AutoSuggestBox;
                xamlMember.Setter = set_86_NavigationView_AutoSuggestBox;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.CompactModeThresholdWidth":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "CompactModeThresholdWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_87_NavigationView_CompactModeThresholdWidth;
                xamlMember.Setter = set_87_NavigationView_CompactModeThresholdWidth;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.CompactPaneLength":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "CompactPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_88_NavigationView_CompactPaneLength;
                xamlMember.Setter = set_88_NavigationView_CompactPaneLength;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ContentOverlay":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ContentOverlay", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_89_NavigationView_ContentOverlay;
                xamlMember.Setter = set_89_NavigationView_ContentOverlay;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.DisplayMode":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "DisplayMode", "Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_90_NavigationView_DisplayMode;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ExpandedModeThresholdWidth":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ExpandedModeThresholdWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_91_NavigationView_ExpandedModeThresholdWidth;
                xamlMember.Setter = set_91_NavigationView_ExpandedModeThresholdWidth;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.FooterMenuItems":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "FooterMenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_92_NavigationView_FooterMenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.FooterMenuItemsSource":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "FooterMenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_93_NavigationView_FooterMenuItemsSource;
                xamlMember.Setter = set_93_NavigationView_FooterMenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.HeaderTemplate":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_94_NavigationView_HeaderTemplate;
                xamlMember.Setter = set_94_NavigationView_HeaderTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsBackEnabled":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsBackEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_95_NavigationView_IsBackEnabled;
                xamlMember.Setter = set_95_NavigationView_IsBackEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneOpen":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsPaneOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_96_NavigationView_IsPaneOpen;
                xamlMember.Setter = set_96_NavigationView_IsPaneOpen;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneVisible":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsPaneVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_97_NavigationView_IsPaneVisible;
                xamlMember.Setter = set_97_NavigationView_IsPaneVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsSettingsVisible":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsSettingsVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_98_NavigationView_IsSettingsVisible;
                xamlMember.Setter = set_98_NavigationView_IsSettingsVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsTitleBarAutoPaddingEnabled":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsTitleBarAutoPaddingEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_99_NavigationView_IsTitleBarAutoPaddingEnabled;
                xamlMember.Setter = set_99_NavigationView_IsTitleBarAutoPaddingEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyle":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "MenuItemContainerStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_100_NavigationView_MenuItemContainerStyle;
                xamlMember.Setter = set_100_NavigationView_MenuItemContainerStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyleSelector":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "MenuItemContainerStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_101_NavigationView_MenuItemContainerStyleSelector;
                xamlMember.Setter = set_101_NavigationView_MenuItemContainerStyleSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplate":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "MenuItemTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_102_NavigationView_MenuItemTemplate;
                xamlMember.Setter = set_102_NavigationView_MenuItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplateSelector":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "MenuItemTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_103_NavigationView_MenuItemTemplateSelector;
                xamlMember.Setter = set_103_NavigationView_MenuItemTemplateSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItems":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "MenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_104_NavigationView_MenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemsSource":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "MenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_105_NavigationView_MenuItemsSource;
                xamlMember.Setter = set_105_NavigationView_MenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.OpenPaneLength":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "OpenPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_106_NavigationView_OpenPaneLength;
                xamlMember.Setter = set_106_NavigationView_OpenPaneLength;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.OverflowLabelMode":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "OverflowLabelMode", "Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_107_NavigationView_OverflowLabelMode;
                xamlMember.Setter = set_107_NavigationView_OverflowLabelMode;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneCustomContent":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "PaneCustomContent", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_108_NavigationView_PaneCustomContent;
                xamlMember.Setter = set_108_NavigationView_PaneCustomContent;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneDisplayMode":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "PaneDisplayMode", "Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_109_NavigationView_PaneDisplayMode;
                xamlMember.Setter = set_109_NavigationView_PaneDisplayMode;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneFooter":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "PaneFooter", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_110_NavigationView_PaneFooter;
                xamlMember.Setter = set_110_NavigationView_PaneFooter;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneHeader":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "PaneHeader", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_111_NavigationView_PaneHeader;
                xamlMember.Setter = set_111_NavigationView_PaneHeader;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneTitle":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "PaneTitle", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_112_NavigationView_PaneTitle;
                xamlMember.Setter = set_112_NavigationView_PaneTitle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneToggleButtonStyle":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "PaneToggleButtonStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_113_NavigationView_PaneToggleButtonStyle;
                xamlMember.Setter = set_113_NavigationView_PaneToggleButtonStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SelectedItem":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_114_NavigationView_SelectedItem;
                xamlMember.Setter = set_114_NavigationView_SelectedItem;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SelectionFollowsFocus":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "SelectionFollowsFocus", "Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_115_NavigationView_SelectionFollowsFocus;
                xamlMember.Setter = set_115_NavigationView_SelectionFollowsFocus;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SettingsItem":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "SettingsItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_116_NavigationView_SettingsItem;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ShoulderNavigationEnabled":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ShoulderNavigationEnabled", "Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_117_NavigationView_ShoulderNavigationEnabled;
                xamlMember.Setter = set_117_NavigationView_ShoulderNavigationEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.TemplateSettings":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_118_NavigationView_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "WinUICommunity.BreadcrumbNavigator.BreadCrumbs":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbNavigator");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "BreadCrumbs", "System.Collections.ObjectModel.ObservableCollection`1<WinUICommunity.NavigationBreadcrumb>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_119_BreadcrumbNavigator_BreadCrumbs;
                xamlMember.Setter = set_119_BreadcrumbNavigator_BreadCrumbs;
                break;
            case "WinUICommunity.NavigationBreadcrumb.Label":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.NavigationBreadcrumb");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Label", "String");
                xamlMember.Getter = get_120_NavigationBreadcrumb_Label;
                xamlMember.SetIsReadOnly();
                break;
            case "WinUICommunity.NavigationBreadcrumb.Page":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.NavigationBreadcrumb");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Page", "System.Type");
                xamlMember.Getter = get_121_NavigationBreadcrumb_Page;
                xamlMember.SetIsReadOnly();
                break;
            case "WinUICommunity.NavigationBreadcrumb.Parameter":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.NavigationBreadcrumb");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Parameter", "Object");
                xamlMember.Getter = get_122_NavigationBreadcrumb_Parameter;
                xamlMember.SetIsReadOnly();
                break;
            case "WinUICommunity.BreadcrumbNavigator.UseBuiltInEventForFrame":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbNavigator");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "UseBuiltInEventForFrame", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_123_BreadcrumbNavigator_UseBuiltInEventForFrame;
                xamlMember.Setter = set_123_BreadcrumbNavigator_UseBuiltInEventForFrame;
                break;
            case "WinUICommunity.BreadcrumbNavigator.Frame":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbNavigator");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Frame", "Microsoft.UI.Xaml.Controls.Frame");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_124_BreadcrumbNavigator_Frame;
                xamlMember.Setter = set_124_BreadcrumbNavigator_Frame;
                break;
            case "WinUICommunity.BreadcrumbNavigator.PageDictionary":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbNavigator");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "PageDictionary", "System.Collections.Generic.Dictionary`2<System.Type, WinUICommunity.BreadcrumbPageConfig>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_125_BreadcrumbNavigator_PageDictionary;
                xamlMember.Setter = set_125_BreadcrumbNavigator_PageDictionary;
                break;
            case "WinUICommunity.BreadcrumbPageConfig.PageTitle":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbPageConfig");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "PageTitle", "String");
                xamlMember.Getter = get_126_BreadcrumbPageConfig_PageTitle;
                xamlMember.Setter = set_126_BreadcrumbPageConfig_PageTitle;
                break;
            case "WinUICommunity.BreadcrumbPageConfig.IsHeaderVisible":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbPageConfig");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsHeaderVisible", "Boolean");
                xamlMember.Getter = get_127_BreadcrumbPageConfig_IsHeaderVisible;
                xamlMember.Setter = set_127_BreadcrumbPageConfig_IsHeaderVisible;
                break;
            case "WinUICommunity.BreadcrumbPageConfig.ClearNavigation":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbPageConfig");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ClearNavigation", "Boolean");
                xamlMember.Getter = get_128_BreadcrumbPageConfig_ClearNavigation;
                xamlMember.Setter = set_128_BreadcrumbPageConfig_ClearNavigation;
                break;
            case "System.Type.Assembly":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Assembly", "System.Reflection.Assembly");
                xamlMember.Getter = get_129_Type_Assembly;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.AssemblyQualifiedName":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "AssemblyQualifiedName", "String");
                xamlMember.Getter = get_130_Type_AssemblyQualifiedName;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.Attributes":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Attributes", "System.Reflection.TypeAttributes");
                xamlMember.Getter = get_131_Type_Attributes;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.BaseType":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "BaseType", "System.Type");
                xamlMember.Getter = get_132_Type_BaseType;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.ContainsGenericParameters":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ContainsGenericParameters", "Boolean");
                xamlMember.Getter = get_133_Type_ContainsGenericParameters;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.DeclaringMethod":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "DeclaringMethod", "System.Reflection.MethodBase");
                xamlMember.Getter = get_134_Type_DeclaringMethod;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.DeclaringType":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "DeclaringType", "System.Type");
                xamlMember.Getter = get_135_Type_DeclaringType;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.FullName":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "FullName", "String");
                xamlMember.Getter = get_136_Type_FullName;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.GenericParameterAttributes":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "GenericParameterAttributes", "System.Reflection.GenericParameterAttributes");
                xamlMember.Getter = get_137_Type_GenericParameterAttributes;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.GenericParameterPosition":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "GenericParameterPosition", "Int32");
                xamlMember.Getter = get_138_Type_GenericParameterPosition;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.GenericTypeArguments":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "GenericTypeArguments", "System.Type[]");
                xamlMember.Getter = get_139_Type_GenericTypeArguments;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.GUID":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "GUID", "Guid");
                xamlMember.Getter = get_140_Type_GUID;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.HasElementType":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HasElementType", "Boolean");
                xamlMember.Getter = get_141_Type_HasElementType;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsAbstract":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsAbstract", "Boolean");
                xamlMember.Getter = get_142_Type_IsAbstract;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsAnsiClass":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsAnsiClass", "Boolean");
                xamlMember.Getter = get_143_Type_IsAnsiClass;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsArray":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsArray", "Boolean");
                xamlMember.Getter = get_144_Type_IsArray;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsAutoClass":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsAutoClass", "Boolean");
                xamlMember.Getter = get_145_Type_IsAutoClass;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsAutoLayout":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsAutoLayout", "Boolean");
                xamlMember.Getter = get_146_Type_IsAutoLayout;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsByRef":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsByRef", "Boolean");
                xamlMember.Getter = get_147_Type_IsByRef;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsByRefLike":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsByRefLike", "Boolean");
                xamlMember.Getter = get_148_Type_IsByRefLike;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsClass":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsClass", "Boolean");
                xamlMember.Getter = get_149_Type_IsClass;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsCOMObject":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsCOMObject", "Boolean");
                xamlMember.Getter = get_150_Type_IsCOMObject;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsConstructedGenericType":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsConstructedGenericType", "Boolean");
                xamlMember.Getter = get_151_Type_IsConstructedGenericType;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsContextful":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsContextful", "Boolean");
                xamlMember.Getter = get_152_Type_IsContextful;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsEnum":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsEnum", "Boolean");
                xamlMember.Getter = get_153_Type_IsEnum;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsExplicitLayout":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsExplicitLayout", "Boolean");
                xamlMember.Getter = get_154_Type_IsExplicitLayout;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsFunctionPointer":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsFunctionPointer", "Boolean");
                xamlMember.Getter = get_155_Type_IsFunctionPointer;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsGenericMethodParameter":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsGenericMethodParameter", "Boolean");
                xamlMember.Getter = get_156_Type_IsGenericMethodParameter;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsGenericParameter":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsGenericParameter", "Boolean");
                xamlMember.Getter = get_157_Type_IsGenericParameter;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsGenericType":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsGenericType", "Boolean");
                xamlMember.Getter = get_158_Type_IsGenericType;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsGenericTypeDefinition":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsGenericTypeDefinition", "Boolean");
                xamlMember.Getter = get_159_Type_IsGenericTypeDefinition;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsGenericTypeParameter":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsGenericTypeParameter", "Boolean");
                xamlMember.Getter = get_160_Type_IsGenericTypeParameter;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsImport":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsImport", "Boolean");
                xamlMember.Getter = get_161_Type_IsImport;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsInterface":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsInterface", "Boolean");
                xamlMember.Getter = get_162_Type_IsInterface;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsLayoutSequential":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsLayoutSequential", "Boolean");
                xamlMember.Getter = get_163_Type_IsLayoutSequential;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsMarshalByRef":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsMarshalByRef", "Boolean");
                xamlMember.Getter = get_164_Type_IsMarshalByRef;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsNested":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsNested", "Boolean");
                xamlMember.Getter = get_165_Type_IsNested;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsNestedAssembly":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsNestedAssembly", "Boolean");
                xamlMember.Getter = get_166_Type_IsNestedAssembly;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsNestedFamANDAssem":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsNestedFamANDAssem", "Boolean");
                xamlMember.Getter = get_167_Type_IsNestedFamANDAssem;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsNestedFamily":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsNestedFamily", "Boolean");
                xamlMember.Getter = get_168_Type_IsNestedFamily;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsNestedFamORAssem":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsNestedFamORAssem", "Boolean");
                xamlMember.Getter = get_169_Type_IsNestedFamORAssem;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsNestedPrivate":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsNestedPrivate", "Boolean");
                xamlMember.Getter = get_170_Type_IsNestedPrivate;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsNestedPublic":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsNestedPublic", "Boolean");
                xamlMember.Getter = get_171_Type_IsNestedPublic;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsNotPublic":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsNotPublic", "Boolean");
                xamlMember.Getter = get_172_Type_IsNotPublic;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsPointer":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsPointer", "Boolean");
                xamlMember.Getter = get_173_Type_IsPointer;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsPrimitive":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsPrimitive", "Boolean");
                xamlMember.Getter = get_174_Type_IsPrimitive;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsPublic":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsPublic", "Boolean");
                xamlMember.Getter = get_175_Type_IsPublic;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsSealed":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsSealed", "Boolean");
                xamlMember.Getter = get_176_Type_IsSealed;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsSecurityCritical":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsSecurityCritical", "Boolean");
                xamlMember.Getter = get_177_Type_IsSecurityCritical;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsSecuritySafeCritical":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsSecuritySafeCritical", "Boolean");
                xamlMember.Getter = get_178_Type_IsSecuritySafeCritical;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsSecurityTransparent":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsSecurityTransparent", "Boolean");
                xamlMember.Getter = get_179_Type_IsSecurityTransparent;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsSerializable":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsSerializable", "Boolean");
                xamlMember.Getter = get_180_Type_IsSerializable;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsSignatureType":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsSignatureType", "Boolean");
                xamlMember.Getter = get_181_Type_IsSignatureType;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsSpecialName":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsSpecialName", "Boolean");
                xamlMember.Getter = get_182_Type_IsSpecialName;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsSZArray":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsSZArray", "Boolean");
                xamlMember.Getter = get_183_Type_IsSZArray;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsTypeDefinition":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsTypeDefinition", "Boolean");
                xamlMember.Getter = get_184_Type_IsTypeDefinition;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsUnicodeClass":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsUnicodeClass", "Boolean");
                xamlMember.Getter = get_185_Type_IsUnicodeClass;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsUnmanagedFunctionPointer":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsUnmanagedFunctionPointer", "Boolean");
                xamlMember.Getter = get_186_Type_IsUnmanagedFunctionPointer;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsValueType":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsValueType", "Boolean");
                xamlMember.Getter = get_187_Type_IsValueType;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsVariableBoundArray":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsVariableBoundArray", "Boolean");
                xamlMember.Getter = get_188_Type_IsVariableBoundArray;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsVisible":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsVisible", "Boolean");
                xamlMember.Getter = get_189_Type_IsVisible;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.MemberType":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "MemberType", "System.Reflection.MemberTypes");
                xamlMember.Getter = get_190_Type_MemberType;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.Module":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Module", "System.Reflection.Module");
                xamlMember.Getter = get_191_Type_Module;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.Namespace":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Namespace", "String");
                xamlMember.Getter = get_192_Type_Namespace;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.ReflectedType":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ReflectedType", "System.Type");
                xamlMember.Getter = get_193_Type_ReflectedType;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.StructLayoutAttribute":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "StructLayoutAttribute", "System.Runtime.InteropServices.StructLayoutAttribute");
                xamlMember.Getter = get_194_Type_StructLayoutAttribute;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.TypeHandle":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "TypeHandle", "System.RuntimeTypeHandle");
                xamlMember.Getter = get_195_Type_TypeHandle;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.TypeInitializer":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "TypeInitializer", "System.Reflection.ConstructorInfo");
                xamlMember.Getter = get_196_Type_TypeInitializer;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.UnderlyingSystemType":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "UnderlyingSystemType", "System.Type");
                xamlMember.Getter = get_197_Type_UnderlyingSystemType;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Reflection.MemberInfo.CustomAttributes":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Reflection.MemberInfo");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "CustomAttributes", "System.Collections.Generic.IEnumerable`1<System.Reflection.CustomAttributeData>");
                xamlMember.Getter = get_198_MemberInfo_CustomAttributes;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Reflection.MemberInfo.IsCollectible":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Reflection.MemberInfo");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsCollectible", "Boolean");
                xamlMember.Getter = get_199_MemberInfo_IsCollectible;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Reflection.MemberInfo.MetadataToken":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Reflection.MemberInfo");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "MetadataToken", "Int32");
                xamlMember.Getter = get_200_MemberInfo_MetadataToken;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Reflection.MemberInfo.Name":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Reflection.MemberInfo");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_201_MemberInfo_Name;
                xamlMember.SetIsReadOnly();
                break;
            case "WinUICommunity.BreadcrumbNavigator.NavigationView":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbNavigator");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "NavigationView", "Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_202_BreadcrumbNavigator_NavigationView;
                xamlMember.Setter = set_202_BreadcrumbNavigator_NavigationView;
                break;
            case "WinUICommunity.BreadcrumbNavigator.HeaderVisibilityOptions":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbNavigator");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HeaderVisibilityOptions", "WinUICommunity.BreadcrumbNavigatorHeaderVisibilityOptions");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_203_BreadcrumbNavigator_HeaderVisibilityOptions;
                xamlMember.Setter = set_203_BreadcrumbNavigator_HeaderVisibilityOptions;
                break;
            case "Microsoft.UI.Xaml.Controls.BreadcrumbBar.ItemTemplate":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.BreadcrumbBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_204_BreadcrumbBar_ItemTemplate;
                xamlMember.Setter = set_204_BreadcrumbBar_ItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.BreadcrumbBar.ItemsSource":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.BreadcrumbBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_205_BreadcrumbBar_ItemsSource;
                xamlMember.Setter = set_205_BreadcrumbBar_ItemsSource;
                break;
            case "WinUICommunity.BreadcrumbNavigator.IsHeaderVisible":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbNavigator");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsHeaderVisible", "Boolean");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_206_BreadcrumbNavigator_IsHeaderVisible;
                xamlMember.Setter = set_206_BreadcrumbNavigator_IsHeaderVisible;
                break;
            case "WinUICommunity.BreadcrumbNavigator.PageTitle":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbNavigator");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "PageTitle", "String");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_207_BreadcrumbNavigator_PageTitle;
                xamlMember.Setter = set_207_BreadcrumbNavigator_PageTitle;
                break;
            case "WinUICommunity.BreadcrumbNavigator.ClearNavigation":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbNavigator");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ClearNavigation", "Boolean");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_208_BreadcrumbNavigator_ClearNavigation;
                xamlMember.Setter = set_208_BreadcrumbNavigator_ClearNavigation;
                break;
            case "WinUICommunity.BitmapIconSourceExtension.Source":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BitmapIconSourceExtension");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Source", "System.Uri");
                xamlMember.Getter = get_209_BitmapIconSourceExtension_Source;
                xamlMember.Setter = set_209_BitmapIconSourceExtension_Source;
                break;
            case "WinUICommunity.BitmapIconSourceExtension.ShowAsMonochrome":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BitmapIconSourceExtension");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ShowAsMonochrome", "Boolean");
                xamlMember.Getter = get_210_BitmapIconSourceExtension_ShowAsMonochrome;
                xamlMember.Setter = set_210_BitmapIconSourceExtension_ShowAsMonochrome;
                break;
            case "WinUICommunity.FontIconExtension.Glyph":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.FontIconExtension");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Glyph", "String");
                xamlMember.Getter = get_211_FontIconExtension_Glyph;
                xamlMember.Setter = set_211_FontIconExtension_Glyph;
                break;
            case "WinUICommunity.FontIconExtension.GlyphCode":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.FontIconExtension");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "GlyphCode", "WinUICommunity.GlyphCode");
                xamlMember.Getter = get_212_FontIconExtension_GlyphCode;
                xamlMember.Setter = set_212_FontIconExtension_GlyphCode;
                break;
            case "WinUICommunity.FontIconExtension.GlyphName":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.FontIconExtension");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "GlyphName", "WinUICommunity.GlyphName");
                xamlMember.Getter = get_213_FontIconExtension_GlyphName;
                xamlMember.Setter = set_213_FontIconExtension_GlyphName;
                break;
            case "WinUICommunity.FontIconExtension.FontFamily":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.FontIconExtension");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "FontFamily", "Microsoft.UI.Xaml.Media.FontFamily");
                xamlMember.Getter = get_214_FontIconExtension_FontFamily;
                xamlMember.Setter = set_214_FontIconExtension_FontFamily;
                break;
            case "WinUICommunity.TextIconExtension.FontSize":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TextIconExtension");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "FontSize", "Double");
                xamlMember.Getter = get_215_TextIconExtension_FontSize;
                xamlMember.Setter = set_215_TextIconExtension_FontSize;
                break;
            case "WinUICommunity.TextIconExtension.FontWeight":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TextIconExtension");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "FontWeight", "Windows.UI.Text.FontWeight");
                xamlMember.Getter = get_216_TextIconExtension_FontWeight;
                xamlMember.Setter = set_216_TextIconExtension_FontWeight;
                break;
            case "WinUICommunity.TextIconExtension.FontStyle":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TextIconExtension");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "FontStyle", "Windows.UI.Text.FontStyle");
                xamlMember.Getter = get_217_TextIconExtension_FontStyle;
                xamlMember.Setter = set_217_TextIconExtension_FontStyle;
                break;
            case "WinUICommunity.TextIconExtension.Foreground":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TextIconExtension");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Foreground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.Getter = get_218_TextIconExtension_Foreground;
                xamlMember.Setter = set_218_TextIconExtension_Foreground;
                break;
            case "WinUICommunity.TextIconExtension.IsTextScaleFactorEnabled":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TextIconExtension");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsTextScaleFactorEnabled", "Boolean");
                xamlMember.Getter = get_219_TextIconExtension_IsTextScaleFactorEnabled;
                xamlMember.Setter = set_219_TextIconExtension_IsTextScaleFactorEnabled;
                break;
            case "WinUICommunity.TextIconExtension.MirroredWhenRightToLeft":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TextIconExtension");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "MirroredWhenRightToLeft", "Boolean");
                xamlMember.Getter = get_220_TextIconExtension_MirroredWhenRightToLeft;
                xamlMember.Setter = set_220_TextIconExtension_MirroredWhenRightToLeft;
                break;
            case "AppFirst.Views.MainPage.ViewModel":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppFirst.Views.MainPage");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ViewModel", "AppFirst.ViewModels.MainViewModel");
                xamlMember.Getter = get_221_MainPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.AutoGenerateColumns":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "AutoGenerateColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_222_DataGrid_AutoGenerateColumns;
                xamlMember.Setter = set_222_DataGrid_AutoGenerateColumns;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.GridLinesVisibility":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "GridLinesVisibility", "CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_223_DataGrid_GridLinesVisibility;
                xamlMember.Setter = set_223_DataGrid_GridLinesVisibility;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.ItemsSource":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ItemsSource", "System.Collections.IEnumerable");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_224_DataGrid_ItemsSource;
                xamlMember.Setter = set_224_DataGrid_ItemsSource;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.Columns":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Columns", "System.Collections.ObjectModel.ObservableCollection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>");
                xamlMember.Getter = get_225_DataGrid_Columns;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.ActualWidth":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ActualWidth", "Double");
                xamlMember.Getter = get_226_DataGridColumn_ActualWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.CanUserReorder":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "CanUserReorder", "Boolean");
                xamlMember.Getter = get_227_DataGridColumn_CanUserReorder;
                xamlMember.Setter = set_227_DataGridColumn_CanUserReorder;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.CanUserResize":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "CanUserResize", "Boolean");
                xamlMember.Getter = get_228_DataGridColumn_CanUserResize;
                xamlMember.Setter = set_228_DataGridColumn_CanUserResize;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.CanUserSort":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "CanUserSort", "Boolean");
                xamlMember.Getter = get_229_DataGridColumn_CanUserSort;
                xamlMember.Setter = set_229_DataGridColumn_CanUserSort;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.CellStyle":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "CellStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.Getter = get_230_DataGridColumn_CellStyle;
                xamlMember.Setter = set_230_DataGridColumn_CellStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.ClipboardContentBinding":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ClipboardContentBinding", "Microsoft.UI.Xaml.Data.Binding");
                xamlMember.Getter = get_231_DataGridColumn_ClipboardContentBinding;
                xamlMember.Setter = set_231_DataGridColumn_ClipboardContentBinding;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.DisplayIndex":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "DisplayIndex", "Int32");
                xamlMember.Getter = get_232_DataGridColumn_DisplayIndex;
                xamlMember.Setter = set_232_DataGridColumn_DisplayIndex;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.DragIndicatorStyle":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "DragIndicatorStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.Getter = get_233_DataGridColumn_DragIndicatorStyle;
                xamlMember.Setter = set_233_DataGridColumn_DragIndicatorStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.HeaderStyle":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HeaderStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.Getter = get_234_DataGridColumn_HeaderStyle;
                xamlMember.Setter = set_234_DataGridColumn_HeaderStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.Header":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.Getter = get_235_DataGridColumn_Header;
                xamlMember.Setter = set_235_DataGridColumn_Header;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.IsAutoGenerated":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsAutoGenerated", "Boolean");
                xamlMember.Getter = get_236_DataGridColumn_IsAutoGenerated;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.IsFrozen":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsFrozen", "Boolean");
                xamlMember.Getter = get_237_DataGridColumn_IsFrozen;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.IsReadOnly":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsReadOnly", "Boolean");
                xamlMember.Getter = get_238_DataGridColumn_IsReadOnly;
                xamlMember.Setter = set_238_DataGridColumn_IsReadOnly;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.MaxWidth":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "MaxWidth", "Double");
                xamlMember.Getter = get_239_DataGridColumn_MaxWidth;
                xamlMember.Setter = set_239_DataGridColumn_MaxWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.MinWidth":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "MinWidth", "Double");
                xamlMember.Getter = get_240_DataGridColumn_MinWidth;
                xamlMember.Setter = set_240_DataGridColumn_MinWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.SortDirection":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "SortDirection", "System.Nullable`1<CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>");
                xamlMember.Getter = get_241_DataGridColumn_SortDirection;
                xamlMember.Setter = set_241_DataGridColumn_SortDirection;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.Tag":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Tag", "Object");
                xamlMember.Getter = get_242_DataGridColumn_Tag;
                xamlMember.Setter = set_242_DataGridColumn_Tag;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.Visibility":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Visibility", "Microsoft.UI.Xaml.Visibility");
                xamlMember.Getter = get_243_DataGridColumn_Visibility;
                xamlMember.Setter = set_243_DataGridColumn_Visibility;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.Width":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Width", "CommunityToolkit.WinUI.UI.Controls.DataGridLength");
                xamlMember.Getter = get_244_DataGridColumn_Width;
                xamlMember.Setter = set_244_DataGridColumn_Width;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.AlternatingRowBackground":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "AlternatingRowBackground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_245_DataGrid_AlternatingRowBackground;
                xamlMember.Setter = set_245_DataGrid_AlternatingRowBackground;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.AlternatingRowForeground":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "AlternatingRowForeground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_246_DataGrid_AlternatingRowForeground;
                xamlMember.Setter = set_246_DataGrid_AlternatingRowForeground;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.AreRowDetailsFrozen":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "AreRowDetailsFrozen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_247_DataGrid_AreRowDetailsFrozen;
                xamlMember.Setter = set_247_DataGrid_AreRowDetailsFrozen;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.AreRowGroupHeadersFrozen":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "AreRowGroupHeadersFrozen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_248_DataGrid_AreRowGroupHeadersFrozen;
                xamlMember.Setter = set_248_DataGrid_AreRowGroupHeadersFrozen;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.CanUserReorderColumns":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "CanUserReorderColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_249_DataGrid_CanUserReorderColumns;
                xamlMember.Setter = set_249_DataGrid_CanUserReorderColumns;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.CanUserResizeColumns":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "CanUserResizeColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_250_DataGrid_CanUserResizeColumns;
                xamlMember.Setter = set_250_DataGrid_CanUserResizeColumns;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.CanUserSortColumns":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "CanUserSortColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_251_DataGrid_CanUserSortColumns;
                xamlMember.Setter = set_251_DataGrid_CanUserSortColumns;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.CellStyle":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "CellStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_252_DataGrid_CellStyle;
                xamlMember.Setter = set_252_DataGrid_CellStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.ClipboardCopyMode":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ClipboardCopyMode", "CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_253_DataGrid_ClipboardCopyMode;
                xamlMember.Setter = set_253_DataGrid_ClipboardCopyMode;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.ColumnHeaderHeight":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ColumnHeaderHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_254_DataGrid_ColumnHeaderHeight;
                xamlMember.Setter = set_254_DataGrid_ColumnHeaderHeight;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.ColumnHeaderStyle":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ColumnHeaderStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_255_DataGrid_ColumnHeaderStyle;
                xamlMember.Setter = set_255_DataGrid_ColumnHeaderStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.ColumnWidth":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ColumnWidth", "CommunityToolkit.WinUI.UI.Controls.DataGridLength");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_256_DataGrid_ColumnWidth;
                xamlMember.Setter = set_256_DataGrid_ColumnWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.DataFetchSize":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "DataFetchSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_257_DataGrid_DataFetchSize;
                xamlMember.Setter = set_257_DataGrid_DataFetchSize;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.DragIndicatorStyle":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "DragIndicatorStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_258_DataGrid_DragIndicatorStyle;
                xamlMember.Setter = set_258_DataGrid_DragIndicatorStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.DropLocationIndicatorStyle":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "DropLocationIndicatorStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_259_DataGrid_DropLocationIndicatorStyle;
                xamlMember.Setter = set_259_DataGrid_DropLocationIndicatorStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.FrozenColumnCount":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "FrozenColumnCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_260_DataGrid_FrozenColumnCount;
                xamlMember.Setter = set_260_DataGrid_FrozenColumnCount;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.HeadersVisibility":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HeadersVisibility", "CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_261_DataGrid_HeadersVisibility;
                xamlMember.Setter = set_261_DataGrid_HeadersVisibility;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.HorizontalGridLinesBrush":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HorizontalGridLinesBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_262_DataGrid_HorizontalGridLinesBrush;
                xamlMember.Setter = set_262_DataGrid_HorizontalGridLinesBrush;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.HorizontalScrollBarVisibility":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HorizontalScrollBarVisibility", "Microsoft.UI.Xaml.Controls.ScrollBarVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_263_DataGrid_HorizontalScrollBarVisibility;
                xamlMember.Setter = set_263_DataGrid_HorizontalScrollBarVisibility;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.IsReadOnly":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsReadOnly", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_264_DataGrid_IsReadOnly;
                xamlMember.Setter = set_264_DataGrid_IsReadOnly;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.IsValid":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsValid", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_265_DataGrid_IsValid;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.IncrementalLoadingThreshold":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IncrementalLoadingThreshold", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_266_DataGrid_IncrementalLoadingThreshold;
                xamlMember.Setter = set_266_DataGrid_IncrementalLoadingThreshold;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.IncrementalLoadingTrigger":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IncrementalLoadingTrigger", "Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_267_DataGrid_IncrementalLoadingTrigger;
                xamlMember.Setter = set_267_DataGrid_IncrementalLoadingTrigger;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.MaxColumnWidth":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "MaxColumnWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_268_DataGrid_MaxColumnWidth;
                xamlMember.Setter = set_268_DataGrid_MaxColumnWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.MinColumnWidth":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "MinColumnWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_269_DataGrid_MinColumnWidth;
                xamlMember.Setter = set_269_DataGrid_MinColumnWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowBackground":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "RowBackground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_270_DataGrid_RowBackground;
                xamlMember.Setter = set_270_DataGrid_RowBackground;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowDetailsTemplate":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "RowDetailsTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_271_DataGrid_RowDetailsTemplate;
                xamlMember.Setter = set_271_DataGrid_RowDetailsTemplate;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowDetailsVisibilityMode":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "RowDetailsVisibilityMode", "CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_272_DataGrid_RowDetailsVisibilityMode;
                xamlMember.Setter = set_272_DataGrid_RowDetailsVisibilityMode;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowForeground":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "RowForeground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_273_DataGrid_RowForeground;
                xamlMember.Setter = set_273_DataGrid_RowForeground;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowHeight":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "RowHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_274_DataGrid_RowHeight;
                xamlMember.Setter = set_274_DataGrid_RowHeight;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowHeaderWidth":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "RowHeaderWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_275_DataGrid_RowHeaderWidth;
                xamlMember.Setter = set_275_DataGrid_RowHeaderWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowHeaderStyle":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "RowHeaderStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_276_DataGrid_RowHeaderStyle;
                xamlMember.Setter = set_276_DataGrid_RowHeaderStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowStyle":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "RowStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_277_DataGrid_RowStyle;
                xamlMember.Setter = set_277_DataGrid_RowStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.SelectionMode":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "SelectionMode", "CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_278_DataGrid_SelectionMode;
                xamlMember.Setter = set_278_DataGrid_SelectionMode;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.SelectedIndex":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "SelectedIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_279_DataGrid_SelectedIndex;
                xamlMember.Setter = set_279_DataGrid_SelectedIndex;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.SelectedItem":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_280_DataGrid_SelectedItem;
                xamlMember.Setter = set_280_DataGrid_SelectedItem;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.VerticalGridLinesBrush":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "VerticalGridLinesBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_281_DataGrid_VerticalGridLinesBrush;
                xamlMember.Setter = set_281_DataGrid_VerticalGridLinesBrush;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.VerticalScrollBarVisibility":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "VerticalScrollBarVisibility", "Microsoft.UI.Xaml.Controls.ScrollBarVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_282_DataGrid_VerticalScrollBarVisibility;
                xamlMember.Setter = set_282_DataGrid_VerticalScrollBarVisibility;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.CurrentColumn":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "CurrentColumn", "CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember.Getter = get_283_DataGrid_CurrentColumn;
                xamlMember.Setter = set_283_DataGrid_CurrentColumn;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowGroupHeaderPropertyNameAlternative":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "RowGroupHeaderPropertyNameAlternative", "String");
                xamlMember.Getter = get_284_DataGrid_RowGroupHeaderPropertyNameAlternative;
                xamlMember.Setter = set_284_DataGrid_RowGroupHeaderPropertyNameAlternative;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowGroupHeaderStyles":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "RowGroupHeaderStyles", "System.Collections.ObjectModel.ObservableCollection`1<Microsoft.UI.Xaml.Style>");
                xamlMember.Getter = get_285_DataGrid_RowGroupHeaderStyles;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.SelectedItems":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "SelectedItems", "System.Collections.IList");
                xamlMember.Getter = get_286_DataGrid_SelectedItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.IsActive":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsActive", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_287_ProgressRing_IsActive;
                xamlMember.Setter = set_287_ProgressRing_IsActive;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.IsIndeterminate":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsIndeterminate", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_288_ProgressRing_IsIndeterminate;
                xamlMember.Setter = set_288_ProgressRing_IsIndeterminate;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Maximum":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Maximum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_289_ProgressRing_Maximum;
                xamlMember.Setter = set_289_ProgressRing_Maximum;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Minimum":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Minimum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_290_ProgressRing_Minimum;
                xamlMember.Setter = set_290_ProgressRing_Minimum;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.TemplateSettings":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings");
                xamlMember.Getter = get_291_ProgressRing_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Value":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Value", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_292_ProgressRing_Value;
                xamlMember.Setter = set_292_ProgressRing_Value;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn.Binding":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Binding", "Microsoft.UI.Xaml.Data.Binding");
                xamlMember.Getter = get_293_DataGridBoundColumn_Binding;
                xamlMember.Setter = set_293_DataGridBoundColumn_Binding;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn.FontFamily":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "FontFamily", "Microsoft.UI.Xaml.Media.FontFamily");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_294_DataGridTextColumn_FontFamily;
                xamlMember.Setter = set_294_DataGridTextColumn_FontFamily;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn.FontSize":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "FontSize", "Double");
                xamlMember.Getter = get_295_DataGridTextColumn_FontSize;
                xamlMember.Setter = set_295_DataGridTextColumn_FontSize;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn.FontStyle":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "FontStyle", "Windows.UI.Text.FontStyle");
                xamlMember.Getter = get_296_DataGridTextColumn_FontStyle;
                xamlMember.Setter = set_296_DataGridTextColumn_FontStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn.FontWeight":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "FontWeight", "Windows.UI.Text.FontWeight");
                xamlMember.Getter = get_297_DataGridTextColumn_FontWeight;
                xamlMember.Setter = set_297_DataGridTextColumn_FontWeight;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn.Foreground":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Foreground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.Getter = get_298_DataGridTextColumn_Foreground;
                xamlMember.Setter = set_298_DataGridTextColumn_Foreground;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn.ClipboardContentBinding":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ClipboardContentBinding", "Microsoft.UI.Xaml.Data.Binding");
                xamlMember.Getter = get_299_DataGridBoundColumn_ClipboardContentBinding;
                xamlMember.Setter = set_299_DataGridBoundColumn_ClipboardContentBinding;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn.EditingElementStyle":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "EditingElementStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.Getter = get_300_DataGridBoundColumn_EditingElementStyle;
                xamlMember.Setter = set_300_DataGridBoundColumn_EditingElementStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn.ElementStyle":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ElementStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.Getter = get_301_DataGridBoundColumn_ElementStyle;
                xamlMember.Setter = set_301_DataGridBoundColumn_ElementStyle;
                break;
            case "AppFirst.Views.Pages.LoadSqlDataGridPage.ViewModel":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppFirst.Views.Pages.LoadSqlDataGridPage");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ViewModel", "AppFirst.ViewModels.Pages.LoadSqlDataGridViewModel");
                xamlMember.Getter = get_302_LoadSqlDataGridPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppFirst.Views.Pages.LoadSqlDataPage.ViewModel":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppFirst.Views.Pages.LoadSqlDataPage");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ViewModel", "AppFirst.ViewModels.Pages.LoadSqlDataPageViewModel");
                xamlMember.Getter = get_303_LoadSqlDataPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.MenuBar.Items":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.MenuBar");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Items", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.MenuBarItem>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_304_MenuBar_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.MenuBarItem.Items":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.MenuBarItem");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Items", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_305_MenuBarItem_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.MenuBarItem.Title":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.MenuBarItem");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_306_MenuBarItem_Title;
                xamlMember.Setter = set_306_MenuBarItem_Title;
                break;
            case "AppFirst.Views.Pages.LoadSqlDataSqlitePage.ViewModel":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppFirst.Views.Pages.LoadSqlDataSqlitePage");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ViewModel", "AppFirst.ViewModels.Pages.LoadSqlDataSqliteViewModel");
                xamlMember.Getter = get_307_LoadSqlDataSqlitePage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppFirst.Views.Pages.SamplePage.ViewModel":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppFirst.Views.Pages.SamplePage");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ViewModel", "AppFirst.ViewModels.Pages.SamplePageViewModel");
                xamlMember.Getter = get_308_SamplePage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppFirst.Views.Sample1Page.ViewModel":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppFirst.Views.Sample1Page");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ViewModel", "AppFirst.ViewModels.Sample1PageViewModel");
                xamlMember.Getter = get_309_Sample1Page_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.Content":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Content", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_310_ScrollView_Content;
                xamlMember.Setter = set_310_ScrollView_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollBarVisibility":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "VerticalScrollBarVisibility", "Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_311_ScrollView_VerticalScrollBarVisibility;
                xamlMember.Setter = set_311_ScrollView_VerticalScrollBarVisibility;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedHorizontalScrollBarVisibility":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ComputedHorizontalScrollBarVisibility", "Microsoft.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_312_ScrollView_ComputedHorizontalScrollBarVisibility;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedHorizontalScrollMode":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ComputedHorizontalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_313_ScrollView_ComputedHorizontalScrollMode;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedVerticalScrollBarVisibility":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ComputedVerticalScrollBarVisibility", "Microsoft.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_314_ScrollView_ComputedVerticalScrollBarVisibility;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedVerticalScrollMode":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ComputedVerticalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_315_ScrollView_ComputedVerticalScrollMode;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ContentOrientation":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ContentOrientation", "Microsoft.UI.Xaml.Controls.ScrollingContentOrientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_316_ScrollView_ContentOrientation;
                xamlMember.Setter = set_316_ScrollView_ContentOrientation;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.CurrentAnchor":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "CurrentAnchor", "Microsoft.UI.Xaml.UIElement");
                xamlMember.Getter = get_317_ScrollView_CurrentAnchor;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ExpressionAnimationSources":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ExpressionAnimationSources", "Microsoft.UI.Composition.CompositionPropertySet");
                xamlMember.Getter = get_318_ScrollView_ExpressionAnimationSources;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ExtentHeight":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ExtentHeight", "Double");
                xamlMember.Getter = get_319_ScrollView_ExtentHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ExtentWidth":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ExtentWidth", "Double");
                xamlMember.Getter = get_320_ScrollView_ExtentWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalAnchorRatio":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HorizontalAnchorRatio", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_321_ScrollView_HorizontalAnchorRatio;
                xamlMember.Setter = set_321_ScrollView_HorizontalAnchorRatio;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalOffset":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HorizontalOffset", "Double");
                xamlMember.Getter = get_322_ScrollView_HorizontalOffset;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollBarVisibility":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HorizontalScrollBarVisibility", "Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_323_ScrollView_HorizontalScrollBarVisibility;
                xamlMember.Setter = set_323_ScrollView_HorizontalScrollBarVisibility;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollChainMode":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HorizontalScrollChainMode", "Microsoft.UI.Xaml.Controls.ScrollingChainMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_324_ScrollView_HorizontalScrollChainMode;
                xamlMember.Setter = set_324_ScrollView_HorizontalScrollChainMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollMode":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HorizontalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_325_ScrollView_HorizontalScrollMode;
                xamlMember.Setter = set_325_ScrollView_HorizontalScrollMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollRailMode":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HorizontalScrollRailMode", "Microsoft.UI.Xaml.Controls.ScrollingRailMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_326_ScrollView_HorizontalScrollRailMode;
                xamlMember.Setter = set_326_ScrollView_HorizontalScrollRailMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.IgnoredInputKinds":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IgnoredInputKinds", "Microsoft.UI.Xaml.Controls.ScrollingInputKinds");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_327_ScrollView_IgnoredInputKinds;
                xamlMember.Setter = set_327_ScrollView_IgnoredInputKinds;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.MaxZoomFactor":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "MaxZoomFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_328_ScrollView_MaxZoomFactor;
                xamlMember.Setter = set_328_ScrollView_MaxZoomFactor;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.MinZoomFactor":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "MinZoomFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_329_ScrollView_MinZoomFactor;
                xamlMember.Setter = set_329_ScrollView_MinZoomFactor;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ScrollPresenter":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ScrollPresenter", "Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_330_ScrollView_ScrollPresenter;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter.Content":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Content", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_331_ScrollPresenter_Content;
                xamlMember.Setter = set_331_ScrollPresenter_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ScrollableHeight":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ScrollableHeight", "Double");
                xamlMember.Getter = get_332_ScrollView_ScrollableHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ScrollableWidth":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ScrollableWidth", "Double");
                xamlMember.Getter = get_333_ScrollView_ScrollableWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.State":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "State", "Microsoft.UI.Xaml.Controls.ScrollingInteractionState");
                xamlMember.Getter = get_334_ScrollView_State;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalAnchorRatio":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "VerticalAnchorRatio", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_335_ScrollView_VerticalAnchorRatio;
                xamlMember.Setter = set_335_ScrollView_VerticalAnchorRatio;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalOffset":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "VerticalOffset", "Double");
                xamlMember.Getter = get_336_ScrollView_VerticalOffset;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollChainMode":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "VerticalScrollChainMode", "Microsoft.UI.Xaml.Controls.ScrollingChainMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_337_ScrollView_VerticalScrollChainMode;
                xamlMember.Setter = set_337_ScrollView_VerticalScrollChainMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollMode":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "VerticalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_338_ScrollView_VerticalScrollMode;
                xamlMember.Setter = set_338_ScrollView_VerticalScrollMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollRailMode":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "VerticalScrollRailMode", "Microsoft.UI.Xaml.Controls.ScrollingRailMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_339_ScrollView_VerticalScrollRailMode;
                xamlMember.Setter = set_339_ScrollView_VerticalScrollRailMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ViewportHeight":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ViewportHeight", "Double");
                xamlMember.Getter = get_340_ScrollView_ViewportHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ViewportWidth":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ViewportWidth", "Double");
                xamlMember.Getter = get_341_ScrollView_ViewportWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ZoomChainMode":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ZoomChainMode", "Microsoft.UI.Xaml.Controls.ScrollingChainMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_342_ScrollView_ZoomChainMode;
                xamlMember.Setter = set_342_ScrollView_ZoomChainMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ZoomFactor":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ZoomFactor", "Single");
                xamlMember.Getter = get_343_ScrollView_ZoomFactor;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ZoomMode":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ZoomMode", "Microsoft.UI.Xaml.Controls.ScrollingZoomMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_344_ScrollView_ZoomMode;
                xamlMember.Setter = set_344_ScrollView_ZoomMode;
                break;
            case "WinUICommunity.PanelAttach.ChildrenTransitions":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.PanelAttach");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ChildrenTransitions", "WinUICommunity.PanelTransitionCollection");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_345_PanelAttach_ChildrenTransitions;
                xamlMember.Setter = set_345_PanelAttach_ChildrenTransitions;
                break;
            case "WinUICommunity.SettingsNavigationAttach.JsonNavigationViewService":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsNavigationAttach");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "JsonNavigationViewService", "WinUICommunity.IJsonNavigationViewService");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_346_SettingsNavigationAttach_JsonNavigationViewService;
                xamlMember.Setter = set_346_SettingsNavigationAttach_JsonNavigationViewService;
                break;
            case "WinUICommunity.SettingsNavigationAttach.SlideNavigationTransitionInfo":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsNavigationAttach");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "SlideNavigationTransitionInfo", "Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_347_SettingsNavigationAttach_SlideNavigationTransitionInfo;
                xamlMember.Setter = set_347_SettingsNavigationAttach_SlideNavigationTransitionInfo;
                break;
            case "WinUICommunity.SettingsCard.Description":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsCard");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Description", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_348_SettingsCard_Description;
                xamlMember.Setter = set_348_SettingsCard_Description;
                break;
            case "WinUICommunity.SettingsCard.Header":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsCard");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_349_SettingsCard_Header;
                xamlMember.Setter = set_349_SettingsCard_Header;
                break;
            case "WinUICommunity.SettingsCard.HeaderIcon":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsCard");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HeaderIcon", "Microsoft.UI.Xaml.Controls.IconElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_350_SettingsCard_HeaderIcon;
                xamlMember.Setter = set_350_SettingsCard_HeaderIcon;
                break;
            case "WinUICommunity.SettingsCard.IsClickEnabled":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsCard");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsClickEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_351_SettingsCard_IsClickEnabled;
                xamlMember.Setter = set_351_SettingsCard_IsClickEnabled;
                break;
            case "WinUICommunity.SettingsCard.LaunchUri":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsCard");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "LaunchUri", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_352_SettingsCard_LaunchUri;
                xamlMember.Setter = set_352_SettingsCard_LaunchUri;
                break;
            case "WinUICommunity.SettingsCard.ActionIcon":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsCard");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ActionIcon", "Microsoft.UI.Xaml.Controls.IconElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_353_SettingsCard_ActionIcon;
                xamlMember.Setter = set_353_SettingsCard_ActionIcon;
                break;
            case "WinUICommunity.SettingsCard.ActionIconToolTip":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsCard");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ActionIconToolTip", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_354_SettingsCard_ActionIconToolTip;
                xamlMember.Setter = set_354_SettingsCard_ActionIconToolTip;
                break;
            case "WinUICommunity.SettingsCard.ContentAlignment":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsCard");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ContentAlignment", "WinUICommunity.ContentAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_355_SettingsCard_ContentAlignment;
                xamlMember.Setter = set_355_SettingsCard_ContentAlignment;
                break;
            case "WinUICommunity.SettingsCard.IsActionIconVisible":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsCard");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsActionIconVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_356_SettingsCard_IsActionIconVisible;
                xamlMember.Setter = set_356_SettingsCard_IsActionIconVisible;
                break;
            case "WinUICommunity.NavigationHelperEx.NavigateToSetting":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.NavigationHelperEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "NavigateToSetting", "System.Type");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_357_NavigationHelperEx_NavigateToSetting;
                xamlMember.Setter = set_357_NavigationHelperEx_NavigateToSetting;
                break;
            case "WinUICommunity.NavigationHelperEx.NavigateTo":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.NavigationHelperEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "NavigateTo", "String");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_358_NavigationHelperEx_NavigateTo;
                xamlMember.Setter = set_358_NavigationHelperEx_NavigateTo;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.CompactPaneLength":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "CompactPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_359_NavigationViewItem_CompactPaneLength;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.HasUnrealizedChildren":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_360_NavigationViewItem_HasUnrealizedChildren;
                xamlMember.Setter = set_360_NavigationViewItem_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.Icon":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Icon", "Microsoft.UI.Xaml.Controls.IconElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_361_NavigationViewItem_Icon;
                xamlMember.Setter = set_361_NavigationViewItem_Icon;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.InfoBadge":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "InfoBadge", "Microsoft.UI.Xaml.Controls.InfoBadge");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_362_NavigationViewItem_InfoBadge;
                xamlMember.Setter = set_362_NavigationViewItem_InfoBadge;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.IsChildSelected":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsChildSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_363_NavigationViewItem_IsChildSelected;
                xamlMember.Setter = set_363_NavigationViewItem_IsChildSelected;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.IsExpanded":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_364_NavigationViewItem_IsExpanded;
                xamlMember.Setter = set_364_NavigationViewItem_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.MenuItems":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "MenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_365_NavigationViewItem_MenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.MenuItemsSource":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "MenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_366_NavigationViewItem_MenuItemsSource;
                xamlMember.Setter = set_366_NavigationViewItem_MenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.SelectsOnInvoked":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "SelectsOnInvoked", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_367_NavigationViewItem_SelectsOnInvoked;
                xamlMember.Setter = set_367_NavigationViewItem_SelectsOnInvoked;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItemBase.IsSelected":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItemBase");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_368_NavigationViewItemBase_IsSelected;
                xamlMember.Setter = set_368_NavigationViewItemBase_IsSelected;
                break;
            case "WinUICommunity.NavigationHelperEx.Parent":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.NavigationHelperEx");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Parent", "Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_369_NavigationHelperEx_Parent;
                xamlMember.Setter = set_369_NavigationHelperEx_Parent;
                break;
            case "AppFirst.Views.GeneralSettingPage.ViewModel":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppFirst.Views.GeneralSettingPage");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ViewModel", "AppFirst.ViewModels.GeneralSettingViewModel");
                xamlMember.Getter = get_370_GeneralSettingPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppFirst.Views.AppUpdateSettingPage.ViewModel":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppFirst.Views.AppUpdateSettingPage");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ViewModel", "AppFirst.ViewModels.AppUpdateSettingViewModel");
                xamlMember.Getter = get_371_AppUpdateSettingPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "AppFirst.Views.AboutUsSettingPage.ViewModel":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppFirst.Views.AboutUsSettingPage");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ViewModel", "AppFirst.ViewModels.AboutUsSettingViewModel");
                xamlMember.Getter = get_372_AboutUsSettingPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "WinUICommunity.BitmapIconExtension.Source":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BitmapIconExtension");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Source", "System.Uri");
                xamlMember.Getter = get_373_BitmapIconExtension_Source;
                xamlMember.Setter = set_373_BitmapIconExtension_Source;
                break;
            case "WinUICommunity.BitmapIconExtension.ShowAsMonochrome":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BitmapIconExtension");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ShowAsMonochrome", "Boolean");
                xamlMember.Getter = get_374_BitmapIconExtension_ShowAsMonochrome;
                xamlMember.Setter = set_374_BitmapIconExtension_ShowAsMonochrome;
                break;
            case "WinUICommunity.SettingsExpander.Content":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsExpander");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_375_SettingsExpander_Content;
                xamlMember.Setter = set_375_SettingsExpander_Content;
                break;
            case "WinUICommunity.SettingsExpander.Description":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsExpander");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Description", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_376_SettingsExpander_Description;
                xamlMember.Setter = set_376_SettingsExpander_Description;
                break;
            case "WinUICommunity.SettingsExpander.Header":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsExpander");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_377_SettingsExpander_Header;
                xamlMember.Setter = set_377_SettingsExpander_Header;
                break;
            case "WinUICommunity.SettingsExpander.HeaderIcon":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsExpander");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HeaderIcon", "Microsoft.UI.Xaml.Controls.IconElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_378_SettingsExpander_HeaderIcon;
                xamlMember.Setter = set_378_SettingsExpander_HeaderIcon;
                break;
            case "WinUICommunity.SettingsExpander.IsExpanded":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsExpander");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_379_SettingsExpander_IsExpanded;
                xamlMember.Setter = set_379_SettingsExpander_IsExpanded;
                break;
            case "WinUICommunity.SettingsExpander.Items":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsExpander");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Items", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_380_SettingsExpander_Items;
                xamlMember.Setter = set_380_SettingsExpander_Items;
                break;
            case "WinUICommunity.SettingsExpander.ItemsSource":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsExpander");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_381_SettingsExpander_ItemsSource;
                xamlMember.Setter = set_381_SettingsExpander_ItemsSource;
                break;
            case "WinUICommunity.SettingsExpander.ItemTemplate":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsExpander");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_382_SettingsExpander_ItemTemplate;
                xamlMember.Setter = set_382_SettingsExpander_ItemTemplate;
                break;
            case "WinUICommunity.SettingsExpander.ItemContainerStyleSelector":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsExpander");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ItemContainerStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_383_SettingsExpander_ItemContainerStyleSelector;
                xamlMember.Setter = set_383_SettingsExpander_ItemContainerStyleSelector;
                break;
            case "WinUICommunity.SettingsExpander.ItemsHeader":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsExpander");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ItemsHeader", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_384_SettingsExpander_ItemsHeader;
                xamlMember.Setter = set_384_SettingsExpander_ItemsHeader;
                break;
            case "WinUICommunity.SettingsExpander.ItemsFooter":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsExpander");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ItemsFooter", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_385_SettingsExpander_ItemsFooter;
                xamlMember.Setter = set_385_SettingsExpander_ItemsFooter;
                break;
            case "WinUICommunity.ThemeServiceAttach.ThemeService":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ThemeServiceAttach");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "ThemeService", "WinUICommunity.IThemeService");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_386_ThemeServiceAttach_ThemeService;
                xamlMember.Setter = set_386_ThemeServiceAttach_ThemeService;
                break;
            case "WinUIEx.SplashScreen.Backdrop":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.SplashScreen");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Backdrop", "WinUIEx.SystemBackdrop");
                xamlMember.Getter = get_387_SplashScreen_Backdrop;
                xamlMember.Setter = set_387_SplashScreen_Backdrop;
                break;
            case "WinUIEx.SplashScreen.Width":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.SplashScreen");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Width", "Double");
                xamlMember.Getter = get_388_SplashScreen_Width;
                xamlMember.Setter = set_388_SplashScreen_Width;
                break;
            case "WinUIEx.SplashScreen.Height":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.SplashScreen");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Height", "Double");
                xamlMember.Getter = get_389_SplashScreen_Height;
                xamlMember.Setter = set_389_SplashScreen_Height;
                break;
            case "WinUIEx.SplashScreen.IsAlwaysOnTop":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.SplashScreen");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsAlwaysOnTop", "Boolean");
                xamlMember.Getter = get_390_SplashScreen_IsAlwaysOnTop;
                xamlMember.Setter = set_390_SplashScreen_IsAlwaysOnTop;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Children":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Children", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>");
                xamlMember.Getter = get_391_TreeViewNode_Children;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Content":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_392_TreeViewNode_Content;
                xamlMember.Setter = set_392_TreeViewNode_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Depth":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Depth", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_393_TreeViewNode_Depth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasChildren":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HasChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_394_TreeViewNode_HasChildren;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasUnrealizedChildren":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.Getter = get_395_TreeViewNode_HasUnrealizedChildren;
                xamlMember.Setter = set_395_TreeViewNode_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.IsExpanded":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_396_TreeViewNode_IsExpanded;
                xamlMember.Setter = set_396_TreeViewNode_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Parent":
                userType = (global::AppFirst.AppFirst_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::AppFirst.AppFirst_XamlTypeInfo.XamlMember(this, "Parent", "Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember.Getter = get_397_TreeViewNode_Parent;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlSystemBaseType : global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, 
            global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void StaticInitializer();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);
    internal delegate object BoxInstanceMethod(object instance);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlUserType : global::AppFirst.AppFirst_XamlTypeInfo.XamlSystemBaseType
        , global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        global::AppFirst.AppFirst_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Microsoft.UI.Xaml.Markup.IXamlType _baseType;
        global::Microsoft.UI.Xaml.Markup.IXamlType _boxedType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::AppFirst.AppFirst_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, 
            global::System.Type fullType, global::Microsoft.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }
        override public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { return _boxedType; } }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            StaticInitializer();
        }

        override public object CreateFromString(string input)
        {
            if (BoxedType != null)
            {
                return BoxInstance(BoxedType.CreateFromString(input));
            }

            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                long value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    long enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt64(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return global::System.Convert.ChangeType(value, global::System.Enum.GetUnderlyingType(this.UnderlyingType));
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public StaticInitializer StaticInitializer { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }
        public BoxInstanceMethod BoxInstance {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void SetBoxedType(global::Microsoft.UI.Xaml.Markup.IXamlType boxedType)
        {
            _boxedType = boxedType;
        }

        public object BoxType<T>(object instance) where T: struct
        {
            T unwrapped = (T)instance;
            return new global::System.Nullable<T>(unwrapped);
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlMember : global::Microsoft.UI.Xaml.Markup.IXamlMember
    {
        global::AppFirst.AppFirst_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::AppFirst.AppFirst_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Microsoft.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Microsoft.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

