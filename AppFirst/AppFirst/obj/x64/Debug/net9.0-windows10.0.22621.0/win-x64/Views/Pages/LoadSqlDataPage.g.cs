#pragma checksum "U:\_Repozitory\C#\_GitHub1\AppFirst\AppFirst\Views\Pages\LoadSqlDataPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "AEA80102EBA34D56A464A5DAC4BCAB4D535F351DD8F160CC35A2B0841FCB94F5"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppFirst.Views.Pages
{
    partial class LoadSqlDataPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_ProgressRing_IsActive(global::Microsoft.UI.Xaml.Controls.ProgressRing obj, global::System.Boolean value)
            {
                obj.IsActive = value;
            }
            public static void Set_Microsoft_UI_Xaml_UIElement_Visibility(global::Microsoft.UI.Xaml.UIElement obj, global::Microsoft.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Microsoft.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class LoadSqlDataPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            ILoadSqlDataPage_Bindings
        {
            private global::AppFirst.Views.Pages.LoadSqlDataPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.StackPanel obj2;
            private global::Microsoft.UI.Xaml.Controls.StackPanel obj3;
            private global::Microsoft.UI.Xaml.Controls.HyperlinkButton obj4;
            private global::Microsoft.UI.Xaml.Controls.ProgressRing obj5;
            private global::Microsoft.UI.Xaml.Controls.ListView obj6;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2VisibilityDisabled = false;
            private static bool isobj3VisibilityDisabled = false;
            private static bool isobj4CommandDisabled = false;
            private static bool isobj5IsActiveDisabled = false;
            private static bool isobj6ItemsSourceDisabled = false;

            private LoadSqlDataPage_obj1_BindingsTracking bindingsTracking;

            public LoadSqlDataPage_obj1_Bindings()
            {
                this.bindingsTracking = new LoadSqlDataPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 136 && columnNumber == 17)
                {
                    isobj2VisibilityDisabled = true;
                }
                else if (lineNumber == 145 && columnNumber == 17)
                {
                    isobj3VisibilityDisabled = true;
                }
                else if (lineNumber == 153 && columnNumber == 21)
                {
                    isobj4CommandDisabled = true;
                }
                else if (lineNumber == 137 && columnNumber == 31)
                {
                    isobj5IsActiveDisabled = true;
                }
                else if (lineNumber == 48 && columnNumber == 25)
                {
                    isobj6ItemsSourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\Pages\LoadSqlDataPage.xaml line 132
                        this.obj2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                        break;
                    case 3: // Views\Pages\LoadSqlDataPage.xaml line 141
                        this.obj3 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                        break;
                    case 4: // Views\Pages\LoadSqlDataPage.xaml line 150
                        this.obj4 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.HyperlinkButton>(target);
                        break;
                    case 5: // Views\Pages\LoadSqlDataPage.xaml line 137
                        this.obj5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ProgressRing>(target);
                        break;
                    case 6: // Views\Pages\LoadSqlDataPage.xaml line 44
                        this.obj6 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListView>(target);
                        this.bindingsTracking.RegisterTwoWayListener_6(this.obj6);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ILoadSqlDataPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::AppFirst.Views.Pages.LoadSqlDataPage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AppFirst.Views.Pages.LoadSqlDataPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::AppFirst.ViewModels.Pages.LoadSqlDataPageViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_IsLoading(obj.IsLoading, phase);
                        this.Update_ViewModel_HasFailures(obj.HasFailures, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_ReloadCommand(obj.ReloadCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_TableOrders(obj.TableOrders, phase);
                    }
                }
            }
            private void Update_ViewModel_IsLoading(global::System.Boolean obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_ViewModel_IsLoading_Cast_IsLoading_To_Visibility(obj ? global::Microsoft.UI.Xaml.Visibility.Visible : global::Microsoft.UI.Xaml.Visibility.Collapsed, phase);
                }
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Pages\LoadSqlDataPage.xaml line 137
                    if (!isobj5IsActiveDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ProgressRing_IsActive(this.obj5, obj);
                    }
                }
            }
            private void Update_ViewModel_IsLoading_Cast_IsLoading_To_Visibility(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Pages\LoadSqlDataPage.xaml line 132
                    if (!isobj2VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj2, obj);
                    }
                }
            }
            private void Update_ViewModel_HasFailures(global::System.Boolean obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_ViewModel_HasFailures_Cast_HasFailures_To_Visibility(obj ? global::Microsoft.UI.Xaml.Visibility.Visible : global::Microsoft.UI.Xaml.Visibility.Collapsed, phase);
                }
            }
            private void Update_ViewModel_HasFailures_Cast_HasFailures_To_Visibility(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Pages\LoadSqlDataPage.xaml line 141
                    if (!isobj3VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj3, obj);
                    }
                }
            }
            private void Update_ViewModel_ReloadCommand(global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Pages\LoadSqlDataPage.xaml line 150
                    if (!isobj4CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj4, obj, null);
                    }
                }
            }
            private void Update_ViewModel_TableOrders(global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.Order> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_TableOrders(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Pages\LoadSqlDataPage.xaml line 44
                    if (!isobj6ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj6, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_6_ItemsSource()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.TableOrders = (global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.Order>)this.obj6.ItemsSource;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class LoadSqlDataPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<LoadSqlDataPage_obj1_Bindings> weakRefToBindingObj; 

                public LoadSqlDataPage_obj1_BindingsTracking(LoadSqlDataPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<LoadSqlDataPage_obj1_Bindings>(obj);
                }

                public LoadSqlDataPage_obj1_Bindings TryGetBindingObject()
                {
                    LoadSqlDataPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_TableOrders(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    LoadSqlDataPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::AppFirst.ViewModels.Pages.LoadSqlDataPageViewModel obj = sender as global::AppFirst.ViewModels.Pages.LoadSqlDataPageViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_IsLoading(obj.IsLoading, DATA_CHANGED);
                                bindings.Update_ViewModel_HasFailures(obj.HasFailures, DATA_CHANGED);
                                bindings.Update_ViewModel_TableOrders(obj.TableOrders, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsLoading":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsLoading(obj.IsLoading, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "HasFailures":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_HasFailures(obj.HasFailures, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TableOrders":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_TableOrders(obj.TableOrders, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::AppFirst.ViewModels.Pages.LoadSqlDataPageViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::AppFirst.ViewModels.Pages.LoadSqlDataPageViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_TableOrders(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    LoadSqlDataPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.Order> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.Order>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_TableOrders(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    LoadSqlDataPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.Order> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.Order>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.Order> cache_ViewModel_TableOrders = null;
                public void UpdateChildListeners_ViewModel_TableOrders(global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.Order> obj)
                {
                    if (obj != cache_ViewModel_TableOrders)
                    {
                        if (cache_ViewModel_TableOrders != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_TableOrders).PropertyChanged -= PropertyChanged_ViewModel_TableOrders;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_TableOrders).CollectionChanged -= CollectionChanged_ViewModel_TableOrders;
                            cache_ViewModel_TableOrders = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_TableOrders = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_TableOrders;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_TableOrders;
                        }
                    }
                }
                public void RegisterTwoWayListener_6(global::Microsoft.UI.Xaml.Controls.ListView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ItemsControl.ItemsSourceProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_6_ItemsSource();
                        }
                    });
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 6: // Views\Pages\LoadSqlDataPage.xaml line 44
                {
                    this.OrdersListView = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListView>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }


        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\Pages\LoadSqlDataPage.xaml line 2
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    LoadSqlDataPage_obj1_Bindings bindings = new LoadSqlDataPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

