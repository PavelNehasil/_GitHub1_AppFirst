#pragma checksum "U:\_Repozitory\C#\_GitHub1\AppFirst\AppFirst\Views\Pages\LoadSqlDataSqlitePage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "28CF10CC4C2F932533E0FA3F1596B3D3BF30327F434A006E394B23835A46BB79"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppFirst.Views.Pages
{
    partial class LoadSqlDataSqlitePage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_MenuFlyoutItem_CommandParameter(global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.CommandParameter = value;
            }
            public static void Set_Microsoft_UI_Xaml_Input_XamlUICommand_Command(global::Microsoft.UI.Xaml.Input.XamlUICommand obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ProgressRing_IsActive(global::Microsoft.UI.Xaml.Controls.ProgressRing obj, global::System.Boolean value)
            {
                obj.IsActive = value;
            }
            public static void Set_Microsoft_UI_Xaml_UIElement_Visibility(global::Microsoft.UI.Xaml.UIElement obj, global::Microsoft.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Microsoft.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedItem(global::Microsoft.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedItem = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_MenuFlyoutItem_Command(global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Control_IsEnabled(global::Microsoft.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter(global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.CommandParameter = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class LoadSqlDataSqlitePage_obj6_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            ILoadSqlDataSqlitePage_Bindings
        {
            private global::AppFirst.Models.LoginUser dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj6;
            private global::Microsoft.UI.Xaml.Controls.AppBarButton obj8;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj8CommandParameterDisabled = false;

            public LoadSqlDataSqlitePage_obj6_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 160 && columnNumber == 33)
                {
                    isobj8CommandParameterDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 6: // Views\Pages\LoadSqlDataSqlitePage.xaml line 116
                        this.obj6 = new global::System.WeakReference(global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.UserControl>(target));
                        break;
                    case 8: // Views\Pages\LoadSqlDataSqlitePage.xaml line 156
                        this.obj8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            var rootElement = (this.obj6.Target as global::Microsoft.UI.Xaml.Controls.UserControl);
                            if (rootElement != null)
                            {
                                rootElement.DataContextChanged -= this.DataContextChangedHandler;
                            }
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_(global::WinRT.CastExtensions.As<global::AppFirst.Models.LoginUser>(item), 1 << phase);
            }

            public void Recycle()
            {
            }

            // ILoadSqlDataSqlitePage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::AppFirst.Models.LoginUser>(newDataRoot);
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AppFirst.Models.LoginUser obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Date(obj.Date, phase);
                    }
                }
            }
            private void Update_Date(global::System.DateTime obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 156
                    if (!isobj8CommandParameterDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter(this.obj8, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class LoadSqlDataSqlitePage_obj13_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            ILoadSqlDataSqlitePage_Bindings
        {
            private global::AppFirst.Models.User dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj13;
            private global::Microsoft.UI.Xaml.Controls.AppBarButton obj15;
            private global::Microsoft.UI.Xaml.Controls.AppBarButton obj16;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj15CommandParameterDisabled = false;
            private static bool isobj16CommandParameterDisabled = false;

            public LoadSqlDataSqlitePage_obj13_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 89 && columnNumber == 33)
                {
                    isobj15CommandParameterDisabled = true;
                }
                else if (lineNumber == 96 && columnNumber == 33)
                {
                    isobj16CommandParameterDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 13: // Views\Pages\LoadSqlDataSqlitePage.xaml line 31
                        this.obj13 = new global::System.WeakReference(global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.UserControl>(target));
                        break;
                    case 15: // Views\Pages\LoadSqlDataSqlitePage.xaml line 86
                        this.obj15 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                        break;
                    case 16: // Views\Pages\LoadSqlDataSqlitePage.xaml line 93
                        this.obj16 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            var rootElement = (this.obj13.Target as global::Microsoft.UI.Xaml.Controls.UserControl);
                            if (rootElement != null)
                            {
                                rootElement.DataContextChanged -= this.DataContextChangedHandler;
                            }
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_(global::WinRT.CastExtensions.As<global::AppFirst.Models.User>(item), 1 << phase);
            }

            public void Recycle()
            {
            }

            // ILoadSqlDataSqlitePage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::AppFirst.Models.User>(newDataRoot);
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AppFirst.Models.User obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Id(obj.Id, phase);
                    }
                }
            }
            private void Update_Id(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 86
                    if (!isobj15CommandParameterDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter(this.obj15, obj, null);
                    }
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 93
                    if (!isobj16CommandParameterDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter(this.obj16, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class LoadSqlDataSqlitePage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            ILoadSqlDataSqlitePage_Bindings
        {
            private global::AppFirst.Views.Pages.LoadSqlDataSqlitePage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Input.StandardUICommand obj2;
            private global::Microsoft.UI.Xaml.Input.StandardUICommand obj3;
            private global::Microsoft.UI.Xaml.Input.StandardUICommand obj4;
            private global::Microsoft.UI.Xaml.Controls.StackPanel obj20;
            private global::Microsoft.UI.Xaml.Controls.StackPanel obj21;
            private global::Microsoft.UI.Xaml.Controls.HyperlinkButton obj22;
            private global::Microsoft.UI.Xaml.Controls.ProgressRing obj23;
            private global::Microsoft.UI.Xaml.Controls.ListView obj24;
            private global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem obj25;
            private global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem obj26;
            private global::Microsoft.UI.Xaml.Controls.AppBarButton obj27;
            private global::Microsoft.UI.Xaml.Controls.AppBarButton obj28;
            private global::Microsoft.UI.Xaml.Controls.ListView obj29;
            private global::Microsoft.UI.Xaml.Controls.AppBarButton obj31;
            private global::Microsoft.UI.Xaml.Controls.AppBarButton obj32;
            private global::Microsoft.UI.Xaml.Controls.AppBarButton obj33;
            private global::Microsoft.UI.Xaml.Controls.AppBarButton obj34;
            private global::Microsoft.UI.Xaml.Controls.AppBarButton obj35;
            private global::Microsoft.UI.Xaml.Controls.AppBarButton obj36;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2CommandDisabled = false;
            private static bool isobj3CommandDisabled = false;
            private static bool isobj4CommandDisabled = false;
            private static bool isobj20VisibilityDisabled = false;
            private static bool isobj21VisibilityDisabled = false;
            private static bool isobj22CommandDisabled = false;
            private static bool isobj23IsActiveDisabled = false;
            private static bool isobj24ItemsSourceDisabled = false;
            private static bool isobj24SelectedItemDisabled = false;
            private static bool isobj25CommandDisabled = false;
            private static bool isobj25CommandParameterDisabled = false;
            private static bool isobj26CommandDisabled = false;
            private static bool isobj26CommandParameterDisabled = false;
            private static bool isobj27CommandDisabled = false;
            private static bool isobj28CommandDisabled = false;
            private static bool isobj28IsEnabledDisabled = false;
            private static bool isobj29ItemsSourceDisabled = false;
            private static bool isobj29SelectedItemDisabled = false;
            private static bool isobj31CommandDisabled = false;
            private static bool isobj32CommandDisabled = false;
            private static bool isobj33CommandDisabled = false;
            private static bool isobj33IsEnabledDisabled = false;
            private static bool isobj34CommandDisabled = false;
            private static bool isobj34IsEnabledDisabled = false;
            private static bool isobj35CommandDisabled = false;
            private static bool isobj35IsEnabledDisabled = false;
            private static bool isobj36CommandDisabled = false;
            private static bool isobj36IsEnabledDisabled = false;

            private LoadSqlDataSqlitePage_obj1_BindingsTracking bindingsTracking;

            public LoadSqlDataSqlitePage_obj1_Bindings()
            {
                this.bindingsTracking = new LoadSqlDataSqlitePage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 20 && columnNumber == 13)
                {
                    isobj2CommandDisabled = true;
                }
                else if (lineNumber == 24 && columnNumber == 13)
                {
                    isobj3CommandDisabled = true;
                }
                else if (lineNumber == 28 && columnNumber == 13)
                {
                    isobj4CommandDisabled = true;
                }
                else if (lineNumber == 485 && columnNumber == 17)
                {
                    isobj20VisibilityDisabled = true;
                }
                else if (lineNumber == 494 && columnNumber == 17)
                {
                    isobj21VisibilityDisabled = true;
                }
                else if (lineNumber == 502 && columnNumber == 21)
                {
                    isobj22CommandDisabled = true;
                }
                else if (lineNumber == 486 && columnNumber == 31)
                {
                    isobj23IsActiveDisabled = true;
                }
                else if (lineNumber == 398 && columnNumber == 29)
                {
                    isobj24ItemsSourceDisabled = true;
                }
                else if (lineNumber == 399 && columnNumber == 29)
                {
                    isobj24SelectedItemDisabled = true;
                }
                else if (lineNumber == 405 && columnNumber == 41)
                {
                    isobj25CommandDisabled = true;
                }
                else if (lineNumber == 406 && columnNumber == 41)
                {
                    isobj25CommandParameterDisabled = true;
                }
                else if (lineNumber == 414 && columnNumber == 41)
                {
                    isobj26CommandDisabled = true;
                }
                else if (lineNumber == 415 && columnNumber == 41)
                {
                    isobj26CommandParameterDisabled = true;
                }
                else if (lineNumber == 361 && columnNumber == 29)
                {
                    isobj27CommandDisabled = true;
                }
                else if (lineNumber == 366 && columnNumber == 29)
                {
                    isobj28CommandDisabled = true;
                }
                else if (lineNumber == 369 && columnNumber == 29)
                {
                    isobj28IsEnabledDisabled = true;
                }
                else if (lineNumber == 287 && columnNumber == 29)
                {
                    isobj29ItemsSourceDisabled = true;
                }
                else if (lineNumber == 288 && columnNumber == 29)
                {
                    isobj29SelectedItemDisabled = true;
                }
                else if (lineNumber == 218 && columnNumber == 29)
                {
                    isobj31CommandDisabled = true;
                }
                else if (lineNumber == 225 && columnNumber == 29)
                {
                    isobj32CommandDisabled = true;
                }
                else if (lineNumber == 230 && columnNumber == 29)
                {
                    isobj33CommandDisabled = true;
                }
                else if (lineNumber == 233 && columnNumber == 29)
                {
                    isobj33IsEnabledDisabled = true;
                }
                else if (lineNumber == 236 && columnNumber == 29)
                {
                    isobj34CommandDisabled = true;
                }
                else if (lineNumber == 239 && columnNumber == 29)
                {
                    isobj34IsEnabledDisabled = true;
                }
                else if (lineNumber == 243 && columnNumber == 29)
                {
                    isobj35CommandDisabled = true;
                }
                else if (lineNumber == 246 && columnNumber == 29)
                {
                    isobj35IsEnabledDisabled = true;
                }
                else if (lineNumber == 249 && columnNumber == 29)
                {
                    isobj36CommandDisabled = true;
                }
                else if (lineNumber == 252 && columnNumber == 29)
                {
                    isobj36IsEnabledDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\Pages\LoadSqlDataSqlitePage.xaml line 18
                        this.obj2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Input.StandardUICommand>(target);
                        break;
                    case 3: // Views\Pages\LoadSqlDataSqlitePage.xaml line 22
                        this.obj3 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Input.StandardUICommand>(target);
                        break;
                    case 4: // Views\Pages\LoadSqlDataSqlitePage.xaml line 26
                        this.obj4 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Input.StandardUICommand>(target);
                        break;
                    case 20: // Views\Pages\LoadSqlDataSqlitePage.xaml line 481
                        this.obj20 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                        break;
                    case 21: // Views\Pages\LoadSqlDataSqlitePage.xaml line 490
                        this.obj21 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                        break;
                    case 22: // Views\Pages\LoadSqlDataSqlitePage.xaml line 499
                        this.obj22 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.HyperlinkButton>(target);
                        break;
                    case 23: // Views\Pages\LoadSqlDataSqlitePage.xaml line 486
                        this.obj23 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ProgressRing>(target);
                        break;
                    case 24: // Views\Pages\LoadSqlDataSqlitePage.xaml line 389
                        this.obj24 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListView>(target);
                        this.bindingsTracking.RegisterTwoWayListener_24(this.obj24);
                        break;
                    case 25: // Views\Pages\LoadSqlDataSqlitePage.xaml line 403
                        this.obj25 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                        break;
                    case 26: // Views\Pages\LoadSqlDataSqlitePage.xaml line 412
                        this.obj26 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                        break;
                    case 27: // Views\Pages\LoadSqlDataSqlitePage.xaml line 359
                        this.obj27 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                        break;
                    case 28: // Views\Pages\LoadSqlDataSqlitePage.xaml line 365
                        this.obj28 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                        break;
                    case 29: // Views\Pages\LoadSqlDataSqlitePage.xaml line 278
                        this.obj29 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListView>(target);
                        this.bindingsTracking.RegisterTwoWayListener_29(this.obj29);
                        break;
                    case 31: // Views\Pages\LoadSqlDataSqlitePage.xaml line 215
                        this.obj31 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                        break;
                    case 32: // Views\Pages\LoadSqlDataSqlitePage.xaml line 223
                        this.obj32 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                        break;
                    case 33: // Views\Pages\LoadSqlDataSqlitePage.xaml line 229
                        this.obj33 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                        break;
                    case 34: // Views\Pages\LoadSqlDataSqlitePage.xaml line 235
                        this.obj34 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                        break;
                    case 35: // Views\Pages\LoadSqlDataSqlitePage.xaml line 242
                        this.obj35 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                        break;
                    case 36: // Views\Pages\LoadSqlDataSqlitePage.xaml line 248
                        this.obj36 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ILoadSqlDataSqlitePage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::AppFirst.Views.Pages.LoadSqlDataSqlitePage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AppFirst.Views.Pages.LoadSqlDataSqlitePage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 403
                    if (!isobj25CommandParameterDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_MenuFlyoutItem_CommandParameter(this.obj25, obj, null);
                    }
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 412
                    if (!isobj26CommandParameterDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_MenuFlyoutItem_CommandParameter(this.obj26, obj, null);
                    }
                }
            }
            private void Update_ViewModel(global::AppFirst.ViewModels.Pages.LoadSqlDataSqliteViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EditUserCommand(obj.EditUserCommand, phase);
                        this.Update_ViewModel_DeleteUserCommand(obj.DeleteUserCommand, phase);
                        this.Update_ViewModel_DeleteLoginUserCommand(obj.DeleteLoginUserCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_IsLoading(obj.IsLoading, phase);
                        this.Update_ViewModel_HasFailures(obj.HasFailures, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_ReloadCommand(obj.ReloadCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_TableLoginUsers(obj.TableLoginUsers, phase);
                        this.Update_ViewModel_SelectedLoginUser(obj.SelectedLoginUser, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_CreateLoginEventCommand(obj.CreateLoginEventCommand, phase);
                        this.Update_ViewModel_CreatePasswordEventCommand(obj.CreatePasswordEventCommand, phase);
                        this.Update_ViewModel_ReloadLoginUsersCommand(obj.ReloadLoginUsersCommand, phase);
                        this.Update_ViewModel_DeleteLoginUserIdCommand(obj.DeleteLoginUserIdCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_IsUserSelected(obj.IsUserSelected, phase);
                        this.Update_ViewModel_TableUsers(obj.TableUsers, phase);
                        this.Update_ViewModel_SelectedUser(obj.SelectedUser, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_AddUserDialogCommand(obj.AddUserDialogCommand, phase);
                        this.Update_ViewModel_EditUserDialogCommand(obj.EditUserDialogCommand, phase);
                        this.Update_ViewModel_DeleteUserDialogCommand(obj.DeleteUserDialogCommand, phase);
                        this.Update_ViewModel_MoveUpUserCommand(obj.MoveUpUserCommand, phase);
                        this.Update_ViewModel_MoveDownUserCommand(obj.MoveDownUserCommand, phase);
                    }
                }
            }
            private void Update_ViewModel_EditUserCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 18
                    if (!isobj2CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Input_XamlUICommand_Command(this.obj2, obj, null);
                    }
                }
            }
            private void Update_ViewModel_DeleteUserCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 22
                    if (!isobj3CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Input_XamlUICommand_Command(this.obj3, obj, null);
                    }
                }
            }
            private void Update_ViewModel_DeleteLoginUserCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 26
                    if (!isobj4CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Input_XamlUICommand_Command(this.obj4, obj, null);
                    }
                }
            }
            private void Update_ViewModel_IsLoading(global::System.Boolean obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_ViewModel_IsLoading_Cast_IsLoading_To_Visibility(obj ? global::Microsoft.UI.Xaml.Visibility.Visible : global::Microsoft.UI.Xaml.Visibility.Collapsed, phase);
                }
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 486
                    if (!isobj23IsActiveDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ProgressRing_IsActive(this.obj23, obj);
                    }
                }
            }
            private void Update_ViewModel_IsLoading_Cast_IsLoading_To_Visibility(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 481
                    if (!isobj20VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj20, obj);
                    }
                }
            }
            private void Update_ViewModel_HasFailures(global::System.Boolean obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_ViewModel_HasFailures_Cast_HasFailures_To_Visibility(obj ? global::Microsoft.UI.Xaml.Visibility.Visible : global::Microsoft.UI.Xaml.Visibility.Collapsed, phase);
                }
            }
            private void Update_ViewModel_HasFailures_Cast_HasFailures_To_Visibility(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 490
                    if (!isobj21VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj21, obj);
                    }
                }
            }
            private void Update_ViewModel_ReloadCommand(global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 499
                    if (!isobj22CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj22, obj, null);
                    }
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 223
                    if (!isobj32CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj32, obj, null);
                    }
                }
            }
            private void Update_ViewModel_TableLoginUsers(global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.LoginUser> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_TableLoginUsers(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 389
                    if (!isobj24ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj24, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedLoginUser(global::AppFirst.Models.LoginUser obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 389
                    if (!isobj24SelectedItemDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedItem(this.obj24, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CreateLoginEventCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 403
                    if (!isobj25CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_MenuFlyoutItem_Command(this.obj25, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CreatePasswordEventCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 412
                    if (!isobj26CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_MenuFlyoutItem_Command(this.obj26, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ReloadLoginUsersCommand(global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 359
                    if (!isobj27CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj27, obj, null);
                    }
                }
            }
            private void Update_ViewModel_DeleteLoginUserIdCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 365
                    if (!isobj28CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj28, obj, null);
                    }
                }
            }
            private void Update_ViewModel_IsUserSelected(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 365
                    if (!isobj28IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Control_IsEnabled(this.obj28, obj);
                    }
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 229
                    if (!isobj33IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Control_IsEnabled(this.obj33, obj);
                    }
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 235
                    if (!isobj34IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Control_IsEnabled(this.obj34, obj);
                    }
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 242
                    if (!isobj35IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Control_IsEnabled(this.obj35, obj);
                    }
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 248
                    if (!isobj36IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Control_IsEnabled(this.obj36, obj);
                    }
                }
            }
            private void Update_ViewModel_TableUsers(global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.User> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_TableUsers(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 278
                    if (!isobj29ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj29, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedUser(global::AppFirst.Models.User obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_SelectedUser(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 278
                    if (!isobj29SelectedItemDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedItem(this.obj29, obj, null);
                    }
                }
            }
            private void Update_ViewModel_AddUserDialogCommand(global::CommunityToolkit.Mvvm.Input.IRelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 215
                    if (!isobj31CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj31, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EditUserDialogCommand(global::CommunityToolkit.Mvvm.Input.IRelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 229
                    if (!isobj33CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj33, obj, null);
                    }
                }
            }
            private void Update_ViewModel_DeleteUserDialogCommand(global::CommunityToolkit.Mvvm.Input.IRelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 235
                    if (!isobj34CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj34, obj, null);
                    }
                }
            }
            private void Update_ViewModel_MoveUpUserCommand(global::CommunityToolkit.Mvvm.Input.IRelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 242
                    if (!isobj35CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj35, obj, null);
                    }
                }
            }
            private void Update_ViewModel_MoveDownUserCommand(global::CommunityToolkit.Mvvm.Input.IRelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Pages\LoadSqlDataSqlitePage.xaml line 248
                    if (!isobj36CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj36, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_24_ItemsSource()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.TableLoginUsers = (global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.LoginUser>)this.obj24.ItemsSource;
                        }
                    }
                }
            }
            private void UpdateTwoWay_24_SelectedItem()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedLoginUser = (global::AppFirst.Models.LoginUser)this.obj24.SelectedItem;
                        }
                    }
                }
            }
            private void UpdateTwoWay_29_ItemsSource()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.TableUsers = (global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.User>)this.obj29.ItemsSource;
                        }
                    }
                }
            }
            private void UpdateTwoWay_29_SelectedItem()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedUser = (global::AppFirst.Models.User)this.obj29.SelectedItem;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class LoadSqlDataSqlitePage_obj1_BindingsTracking
            {
                private global::System.WeakReference<LoadSqlDataSqlitePage_obj1_Bindings> weakRefToBindingObj; 

                public LoadSqlDataSqlitePage_obj1_BindingsTracking(LoadSqlDataSqlitePage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<LoadSqlDataSqlitePage_obj1_Bindings>(obj);
                }

                public LoadSqlDataSqlitePage_obj1_Bindings TryGetBindingObject()
                {
                    LoadSqlDataSqlitePage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_TableLoginUsers(null);
                    UpdateChildListeners_ViewModel_TableUsers(null);
                    UpdateChildListeners_ViewModel_SelectedUser(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    LoadSqlDataSqlitePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::AppFirst.ViewModels.Pages.LoadSqlDataSqliteViewModel obj = sender as global::AppFirst.ViewModels.Pages.LoadSqlDataSqliteViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_IsLoading(obj.IsLoading, DATA_CHANGED);
                                bindings.Update_ViewModel_HasFailures(obj.HasFailures, DATA_CHANGED);
                                bindings.Update_ViewModel_TableLoginUsers(obj.TableLoginUsers, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedLoginUser(obj.SelectedLoginUser, DATA_CHANGED);
                                bindings.Update_ViewModel_IsUserSelected(obj.IsUserSelected, DATA_CHANGED);
                                bindings.Update_ViewModel_TableUsers(obj.TableUsers, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedUser(obj.SelectedUser, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsLoading":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsLoading(obj.IsLoading, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "HasFailures":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_HasFailures(obj.HasFailures, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TableLoginUsers":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_TableLoginUsers(obj.TableLoginUsers, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedLoginUser":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedLoginUser(obj.SelectedLoginUser, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsUserSelected":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsUserSelected(obj.IsUserSelected, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TableUsers":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_TableUsers(obj.TableUsers, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedUser":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedUser(obj.SelectedUser, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::AppFirst.ViewModels.Pages.LoadSqlDataSqliteViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::AppFirst.ViewModels.Pages.LoadSqlDataSqliteViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_TableLoginUsers(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    LoadSqlDataSqlitePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.LoginUser> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.LoginUser>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_TableLoginUsers(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    LoadSqlDataSqlitePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.LoginUser> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.LoginUser>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.LoginUser> cache_ViewModel_TableLoginUsers = null;
                public void UpdateChildListeners_ViewModel_TableLoginUsers(global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.LoginUser> obj)
                {
                    if (obj != cache_ViewModel_TableLoginUsers)
                    {
                        if (cache_ViewModel_TableLoginUsers != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_TableLoginUsers).PropertyChanged -= PropertyChanged_ViewModel_TableLoginUsers;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_TableLoginUsers).CollectionChanged -= CollectionChanged_ViewModel_TableLoginUsers;
                            cache_ViewModel_TableLoginUsers = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_TableLoginUsers = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_TableLoginUsers;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_TableLoginUsers;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_TableUsers(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    LoadSqlDataSqlitePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.User> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.User>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_TableUsers(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    LoadSqlDataSqlitePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.User> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.User>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.User> cache_ViewModel_TableUsers = null;
                public void UpdateChildListeners_ViewModel_TableUsers(global::System.Collections.ObjectModel.ObservableCollection<global::AppFirst.Models.User> obj)
                {
                    if (obj != cache_ViewModel_TableUsers)
                    {
                        if (cache_ViewModel_TableUsers != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_TableUsers).PropertyChanged -= PropertyChanged_ViewModel_TableUsers;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_TableUsers).CollectionChanged -= CollectionChanged_ViewModel_TableUsers;
                            cache_ViewModel_TableUsers = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_TableUsers = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_TableUsers;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_TableUsers;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_SelectedUser(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    LoadSqlDataSqlitePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::AppFirst.Models.User obj = sender as global::AppFirst.Models.User;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::AppFirst.Models.User cache_ViewModel_SelectedUser = null;
                public void UpdateChildListeners_ViewModel_SelectedUser(global::AppFirst.Models.User obj)
                {
                    if (obj != cache_ViewModel_SelectedUser)
                    {
                        if (cache_ViewModel_SelectedUser != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_SelectedUser).PropertyChanged -= PropertyChanged_ViewModel_SelectedUser;
                            cache_ViewModel_SelectedUser = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_SelectedUser = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_SelectedUser;
                        }
                    }
                }
                public void RegisterTwoWayListener_24(global::Microsoft.UI.Xaml.Controls.ListView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ItemsControl.ItemsSourceProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_24_ItemsSource();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedItemProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_24_SelectedItem();
                        }
                    });
                }
                public void RegisterTwoWayListener_29(global::Microsoft.UI.Xaml.Controls.ListView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ItemsControl.ItemsSourceProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_29_ItemsSource();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedItemProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_29_SelectedItem();
                        }
                    });
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\Pages\LoadSqlDataSqlitePage.xaml line 18
                {
                    this.EditUserCommand = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Input.StandardUICommand>(target);
                }
                break;
            case 3: // Views\Pages\LoadSqlDataSqlitePage.xaml line 22
                {
                    this.DeleteUserCommand = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Input.StandardUICommand>(target);
                }
                break;
            case 4: // Views\Pages\LoadSqlDataSqlitePage.xaml line 26
                {
                    this.DeleteLoginUserCommand = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Input.StandardUICommand>(target);
                }
                break;
            case 6: // Views\Pages\LoadSqlDataSqlitePage.xaml line 116
                {
                    global::Microsoft.UI.Xaml.Controls.UserControl element6 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.UserControl>(target);
                    ((global::Microsoft.UI.Xaml.Controls.UserControl)element6).PointerEntered += this.ListViewSwipeContainer_PointerEntered;
                    ((global::Microsoft.UI.Xaml.Controls.UserControl)element6).PointerExited += this.ListViewSwipeContainer_PointerExited;
                }
                break;
            case 13: // Views\Pages\LoadSqlDataSqlitePage.xaml line 31
                {
                    global::Microsoft.UI.Xaml.Controls.UserControl element13 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.UserControl>(target);
                    ((global::Microsoft.UI.Xaml.Controls.UserControl)element13).PointerEntered += this.ListViewSwipeContainer_PointerEntered;
                    ((global::Microsoft.UI.Xaml.Controls.UserControl)element13).PointerExited += this.ListViewSwipeContainer_PointerExited;
                }
                break;
            case 24: // Views\Pages\LoadSqlDataSqlitePage.xaml line 389
                {
                    this.LoginUsersListView = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListView>(target);
                }
                break;
            case 29: // Views\Pages\LoadSqlDataSqlitePage.xaml line 278
                {
                    this.UsersListView = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListView>(target);
                }
                break;
            case 30: // Views\Pages\LoadSqlDataSqlitePage.xaml line 263
                {
                    global::Microsoft.UI.Xaml.Controls.AutoSuggestBox element30 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AutoSuggestBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AutoSuggestBox)element30).TextChanged += this.OnSearchCommand;
                }
                break;
            case 31: // Views\Pages\LoadSqlDataSqlitePage.xaml line 215
                {
                    this.AddButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }


        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\Pages\LoadSqlDataSqlitePage.xaml line 2
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    LoadSqlDataSqlitePage_obj1_Bindings bindings = new LoadSqlDataSqlitePage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 6: // Views\Pages\LoadSqlDataSqlitePage.xaml line 116
                {                    
                    global::Microsoft.UI.Xaml.Controls.UserControl element6 = (global::Microsoft.UI.Xaml.Controls.UserControl)target;
                    LoadSqlDataSqlitePage_obj6_Bindings bindings = new LoadSqlDataSqlitePage_obj6_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element6.DataContext);
                    element6.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element6, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element6, bindings);
                }
                break;
            case 13: // Views\Pages\LoadSqlDataSqlitePage.xaml line 31
                {                    
                    global::Microsoft.UI.Xaml.Controls.UserControl element13 = (global::Microsoft.UI.Xaml.Controls.UserControl)target;
                    LoadSqlDataSqlitePage_obj13_Bindings bindings = new LoadSqlDataSqlitePage_obj13_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element13.DataContext);
                    element13.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element13, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element13, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

